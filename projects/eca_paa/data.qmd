---
title: "descriptives"
format:
  html:
    self-contained: true
    page-layout: full
    code-fold: true
    code-tools: true
    code_download: yes
    latex_engine: pdflatex
params:
  year: 2012
  year_range: !expr c(2012, 2017) # or c(2012, 2015, 2017) or c(2010:2020)
  show_temporal_density: TRUE
  show_descriptive_density: TRUE
  show_descriptive_density_rural: TRUE
  show_descriptive_maps: TRUE
  interactive_maps: FALSE
  show_corr: FALSE
  show_test_regression: FALSE
  show_lm_regression: TRUE
  show_lm_cluster_regression: TRUE
  reg_factors: !expr c("entry_rate", "exit_rate", "establishments_gr", "wage", "wage_gr", "jobs_gr", "payroll_gr", "unemp_rate", "laborforce_part_rate", "employment_gr", "poverty_rate", "income_rate", "poverty_rate_gr", "income_rate_gr", "population_gr",  "ypll75", "highschool_attainment_rate", "net_migration_rate") 
  reg_factor_funs: !expr c("call_establishments", "call_wage", "call_jobs", "call_payroll", "call_employment", "call_poverty_rate", "call_income_rate", "call_population", "call_gdp")
  example_coef_index:  2
---

```{r notes, include = FALSE}

# TODO: (time-series, repeat cross-section)
# TODO: map all "sinks" unfiltered by algorithm
# TODO: regress unfiltered "sinks" and "sources"
# TODO: regress change over time data 
# TODO: add spatial regressions
# TODO: Diff in diff
# TODO: share weighted distance

```

```{r preamble, include = FALSE}

# additional library list
library(logger)
library(tidyverse)

library(moments)
library(PerformanceAnalytics)
library(correlation)

library(estimatr)
library(margins)

library(rstatix)
library(ggthemes)
library(ggridges)
library(viridis)
library(tmap)
library(gt)
library(webshot2)

# scripts
source("projects/eca_paa/dataprep.R", local = (dp <- new.env()))

# chunk behavior 
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 

# nonscientific notation
options(scipen=999)

# log output 
log_threshold(DEBUG)

# initialize parameters
params

```

```{r zip pack, include = FALSE}

# uncomment and pack/unpack as necessary
# util$zip_pack("tmp/eca_paa_data_v240324.zip", dp$opath)
# dp$zip_unpack("tmp/eca_paa_data_v240324.zip", overwrite = TRUE)

```

::: panel-tabset 

# data

```{r data cashe, include = FALSE}

# uncomment as necessary
# dp$create_complete_cache()

```

```{r dataframe }

df <- dp$call_proj_df(params$year) %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  mutate(income_rate = income_rate/1000) %>%
  mutate(payroll = payroll*1000) %>%
  mutate(gdp = gdp*1000)


```

```{r dataframe with growth}

x <- dp$temporal_permutations(params$year_range)
tmp <- df$place %>% as.data.frame() %>% `colnames<-`(c("place")) 
for (y in 1:nrow(x)){
  paste(x[y,1], x[y,2]) %>% print()
  for (i in params$reg_factor_funs){
     tmp <- dp$growth_rate(x[y,1], x[y,2], dp[[i]]) %>% 
       mutate(grow_rate = replace(grow_rate, which(abs(grow_rate) == 200), NA)) %>% 
       rename_at('grow_rate', ~paste0(substring(i, 6), "_gr")) %>% 
       left_join(tmp, ., by = "place")
  }
}


df <- left_join(df, tmp, by = "place")
```

::: panel-tabset 
## numeric variables

```{r numeric vars}

  df %>% 
    st_drop_geometry() %>% 
    select(where(is.numeric)) %>% 
    names() 

```

## spatio-temporal
```{r spatio-temporal dataframe }
if (params$show_temporal_density) {
  tmp <- dp$call_temporal_range_df(params$year_range)
  for (i in str_remove_all(params$reg_factors, '(_gr)$')){
    p <- dp$viz$absorption_density_plot(tmp, i, "id_year", trans = "log", colorbreaks = NULL) %>%
    print(p)
  }
}

```

## growth
```{r growth rates}

# dp$growth_rate(start_year = 2010, end_year = 2015, function_name = dp$call_county_population,  bus_data = "census")
# dp$growth_rate(x[y,1], x[y,2], dp[[i]]) %>% head() %>% print()

if (FALSE){
  x <- dp$temporal_permutations(params$year_range)
  tmp <- df$place %>% as.data.frame() %>% `colnames<-`(c("place")) 
  for (y in 1:nrow(x)){
    paste(x[y,1], x[y,2]) %>% print()
    for (i in params$reg_factor_funs){
      dp$growth_rate(x[y,1], x[y,2], dp[[i]]) %>% head() %>% print()
    }
  }
}

```


# Data


# Data assembly

```{r dataframe }

data <- df %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  select(place, NAME, STATE_CODE, COUNTY_CODE, COUNTY, STATE_NAME, STATE, CBSA_CODE, cbsa_members_count, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, cbsa_rural_category, ruc_code, geometry, center, eca_cluster_category, eca_central_out_xtab, eca_cbsa_xtab, sink_filter, cbsa_by_eca, metro_micro_sink, eca_membership, cbsa_of_eca, population, employment, jobs, laborforce_part_rate, unemp_rate, payroll, wage, income_rate, establishments, entry_rate, exit_rate, gdp, poverty_rate, highschool_attainment_rate, ypll75, net_migration_rate, establishments_gr, wage_gr, jobs_gr, payroll_gr, employment_gr, poverty_rate_gr, income_rate_gr, population_gr, gdp_gr)


# select the following: 
#   population, pop growth
#   employmnet, emp growth
#   jobs, job growth
#   establishments, establishments growth
#   payroll, payroll growth
#   wage, wage growth
#   personal income per capita, personal income per capita growth
#   GDP, GDP growth
#   estab entry, estab exit
#   LFPR
#   unemp rate
#   poverty rate
#   premature death
#   h.s. attainment
#   net migration


```


```{r}
# # joining indicators into single data file
# # calculating log of highly right-skewed indicators
# # replacing and removing integer variabiles
# # removing US non-state and non-DC territories
# df_county_shapes = dp$call_geog(2013)
# CBSA = dp$call_cbsa(2013)
# RUCC = dp$call_ruc(2013) %>% rename("place"="fips") %>% mutate(rural = ifelse(ruc_code > 3, 1, 0))  
# ECA = dp$call_eca_df() %>% rename("place"="fips") %>%
#   mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "Destination", ifelse(eca_cluster_category == "Cluster Source", "Source", NA)))
# population = dp$call_population(2012, bus_data = "tidy_acs")
# population_growth = dp$growth_rate(2012, 2017, dp$call_population, bus_data = "tidy_acs") %>% rename("population_growth"="grow_rate")
# employment = dp$call_employment(2012, bus_data = "ers")
# employment_growth = dp$growth_rate(2012, 2017, dp$call_employment, bus_data = "ers") %>% rename("employment_growth"="grow_rate")
# labor_force_part_rate = dp$call_laborforce_rate(2012)
# unemployment_rate = dp$call_unemp_rate(2012)
# jobs = dp$call_employment(2012, bus_data = "cbp_raw") %>% rename("jobs"="employment")
# job_growth = dp$growth_rate(2012, 2017, dp$call_employment, bus_data = "cbp_raw") %>% rename("job_growth"="grow_rate")
# establishments = dp$call_establishments(2012, bus_data = "cbp_raw")
# establishments_growth = dp$growth_rate(2012, 2017, dp$call_establishments, bus_data = "cbp_raw") %>% rename("establishments_growth"="grow_rate")
# entry_rate = dp$call_entry_rate(2012, bus_data = "bds")
# exit_rate = dp$call_exit_rate(2012, bus_data = "bds")
# payroll = dp$call_payroll(2012, bus_data = "cbp_raw")
# payroll_growth = dp$growth_rate(2012, 2017, dp$call_payroll, bus_data = "cbp_raw") %>% rename("payroll_growth"="grow_rate")
# wages = dp$call_wage(2017)
# wage_growth = dp$growth_rate(2012, 2017, dp$call_wage, bus_data = "cbp_raw") %>% rename("wage_growth"="grow_rate")
# income = dp$call_income_rate(2012)
# income_growth = dp$growth_rate(2012, 2017, dp$call_income_rate, bus_data = "bea_profile") %>% rename("income_growth"="grow_rate")
# gdp = dp$call_gdp(2022, price_level = "nominal")
# gdp_growth = dp$growth_rate(2017, 2019, dp$call_gdp) %>% rename("gdp_growth"="grow_rate")
# education = dp$call_highschool_attainment_rate(2012)
# education_growth = dp$growth_rate(2012, 2017, dp$call_highschool_attainment_rate) %>% rename("education_growth"="grow_rate")
# premature_death = dp$call_ypll75(2012)
# premature_death_growth = dp$growth_rate(2012, 2017, dp$call_ypll75) %>% rename("premature_death_growth"="grow_rate")
# poverty = dp$call_poverty_rate(2012)
# poverty_growth = dp$growth_rate(2012, 2017, dp$call_poverty_rate) %>% rename("poverty_growth"="grow_rate")
# net_migration = dp$call_net_migration()
# 
# # joining dataframes
# df1 = population %>%
#   left_join(y = population_growth, by = "place") %>%
#   left_join(y = employment, by = "place") %>%
#   left_join(y = employment_growth, by = "place") %>%
#   left_join(y = labor_force_part_rate, by = "place") %>%
#   left_join(y = unemployment_rate, by = "place") %>%
#   left_join(y = jobs, by = "place") %>%
#   left_join(y = job_growth, by = "place") %>%
#   left_join(y = establishments, by = "place") %>%
#   left_join(y = establishments_growth, by = "place") %>%
#   left_join(y = entry_rate, by = "place") %>%
#   left_join(y = exit_rate, by = "place") %>%
#   left_join(y = payroll, by = "place") %>%
#   left_join(y = payroll_growth, by = "place") %>%
#   left_join(y = wages, by = "place") %>%
#   left_join(y = wage_growth, by = "place") %>%
#   left_join(y = income, by = "place") %>%
#   left_join(y = income_growth, by = "place") %>%
#   left_join(y = gdp, by = "place") %>%
#   left_join(y = gdp_growth, by = "place") %>%
#   left_join(y = education, by = "place") %>%
#   left_join(y = education_growth, by = "place") %>%
#   left_join(y = premature_death, by = "place") %>%
#   left_join(y = premature_death_growth, by = "place") %>%
#   left_join(y = poverty, by = "place") %>%
#   left_join(y = poverty_growth, by = "place") %>%
#   left_join(y = net_migration, by = "place") %>%
#   mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment),
#          log.gdp = log(gdp), st = substr(place,1,2)) %>%
#   filter(st != "72" & st != "78") %>%
#   select(-st) %>%
#   distinct()

# # reading indicators into ECA
# data = ECA %>%
#   left_join(y=CBSA, by="place") %>%
#   left_join(y=RUCC, by="place") %>%
#   left_join(y=df1, by="place") %>%
#   mutate(CENTRAL_OUTLYING = ifelse(rural == "non-metro" & is.na(CENTRAL_OUTLYING), "rural (non-CBSA)", CENTRAL_OUTLYING), st = substr(place,1,2)) %>%
#   filter(st != "72") %>%
#   select(-st)
# 


# reading indicators into ECA
df1 = data %>% 
  st_drop_geometry() %>% 
  select(place, where(is.numeric)) %>%
  select(-cbsa_members_count)

# creating table that shows each "Source"'s indicator values along with each's respective "Sink"'s values

df1_source = df1 %>%
  setNames(paste0('source_', names(.))) %>%
  rename("place"="source_place")
df1_sink = df1 %>%
  setNames(paste0('destination_', names(.))) %>%
  rename("eca_membership"="destination_place")
eca_comp = data %>%
  select(place, eca_membership) %>%
  st_drop_geometry() %>% 
  left_join(y = df1_source, by = "place") %>%
  left_join(y = df1_sink, by = "eca_membership") %>%
  filter()


# creating table that shows each CBSA's central counties

CBSA = data %>%
  st_drop_geometry() %>%
  select(place, CBSA_CODE, CENTRAL_OUTLYING)

cbsa_central = CBSA %>%
  st_drop_geometry() %>% 
  mutate(st = substr(place,1,2)) %>%
  filter(CENTRAL_OUTLYING == "central" & st != 72) %>%
  select("central_place" = place, CBSA_CODE)

cbsa = full_join(x = data, y = cbsa_central, by = "CBSA_CODE") %>%
  mutate(st = substr(place,1,2)) %>%
  filter(st != 72) %>%
  select(central_place, place)

df1_central = cbsa_central %>%
  rename("place"="central_place") %>%
  left_join(y=df1, by="place") %>%
  select(-CBSA_CODE) %>%
  setNames(paste0('central_', names(.)))

cbsa_comp = df1 %>%
  left_join(y=cbsa, by="place") %>%
  left_join(y=df1_central, by="central_place") %>%
  left_join(y=CBSA, by="place") %>%
  drop_na(central_place)

```

# Priority graphics
## Map, centrality of ECA/CBSA

```{r}

data_map <- data

comp_map = data_map %>% mutate(comp = ifelse(is.na(metro_micro_sink), "neither", ifelse(metro_micro_sink == "Sink and Metro ", "Destination and Metro", ifelse(metro_micro_sink == "Sink and Micro", "Destination and Micro", ifelse(metro_micro_sink == "Sink only", "Destination only", metro_micro_sink)))))


if (params$show_descriptive_maps) {
  tmp <- scale_fill_discrete
  scale_fill_discrete <- function(...) scale_fill_manual(name = "ECA-CBSA Comparison", values = c("Destination and Metro"="#38761d", "Destination and Micro"="#b2df8a", "Destination only"="gold", "Metro only"="#1f78b4", "Micro only"="#a6cee3","neither"="grey90"))
  p <- dp$viz$cat_choro_map(comp_map, "comp", interactive = params$interactive_maps, legend = T)
    print(p)
  scale_fill_discrete <- tmp
}


```

## Map, ECA/CBSA comparison
<!-- Find examples (Wisconsin and around Midwest) comparing a single CBSA and ECA. ECA should not be too big (max 7-8 counties) and not too spread out spatially. Make a map similar to Cedar Rapids example from the abstract. -->
<!-- CBSA and ECA that have the same core county. -->
<!-- An outlying CBSA county connected to a ECA core that is not part of the CBSA. -->


<!-- ```{r} -->

<!-- # 22089 -->

<!-- data_map <- data -->

<!-- comp_map = data_map %>%  -->
<!--   filter(STATE_CODE != "02" & STATE_CODE != "72" & STATE_CODE != "15" )  %>% -->
<!--   filter(STATE_CODE == "22") %>% -->
<!--   mutate(comp = ifelse((eca_membership == place & CENTRAL_OUTLYING == "central"), "ECA dest, own CBSA center", ifelse((eca_cluster_category == "Cluster Source" & CENTRAL_OUTLYING == "central"), "ECA source, own CBSA center", ifelse((eca_cluster_category == "Cluster Source" & CENTRAL_OUTLYING == "rural"), "ECA source, non-CBSA", NA)))) %>% -->
<!--   mutate(comp = ifelse(eca_membership == "22071", comp, "NaN")) -->

<!-- MyPalette <- c("#97c08d", "#3d85c6", "gold", "white") -->

<!-- tmap_mode("plot") -->

<!-- print(comp_map %>% -->
<!--   tm_shape() +  -->
<!--   tm_polygons(col = "comp", title = "CBSA Statuses -->
<!-- Sheboygan County ECA", border.alpha = 0.4, style = "cat", palette = MyPalette) + -->
<!--   tm_layout(legend.title.size = 1.0, legend.position = c(-0.1, 0), -->
<!--             title = "", frame = FALSE) -->
<!-- ) -->


<!-- ## add grey layer that is CBSA but not in ECA -->
<!-- ## add higher layer that is connected to ECA and CBSA outlying both -->

<!-- ``` -->



```{r}

# 22071 - Orleans Co. LA
# 27053 - Hennepin Co. MN
# 31055 - Douglas Co. NE

ECA_n = "22071"
cbsa_n = data %>% filter(eca_membership == ECA_n & eca_cluster_category == "Cluster Sink") %>% select(CBSA_CODE)
cbsa_n = cbsa_n$CBSA_CODE
st_n = substr(ECA_n,1,2)

data_map <- data

comp_map = data_map %>% 
  filter(STATE_CODE != "02" & STATE_CODE != "72" & STATE_CODE != "15" )  %>%
  filter(STATE_CODE == st_n) %>%
#  filter(STATE_CODE == "19" | STATE_CODE == "31" | STATE_CODE == "55") %>%
  mutate(comp = ifelse((place == ECA_n & CBSA_CODE == cbsa_n & eca_central_out_xtab == "Central Sink"), "ECA dest, own CBSA center", ifelse((CENTRAL_OUTLYING == "central" & CBSA_CODE != cbsa_n & eca_membership == ECA_n), "ECA source, other CBSA", ifelse((eca_membership != ECA_n & CBSA_CODE == cbsa_n), "other ECA, same CBSA", ifelse((eca_cbsa_xtab == "Rural Source" & eca_membership == ECA_n), "ECA source, non-CBSA", ifelse((eca_cbsa_xtab == "Nonrural Source" & CBSA_CODE == cbsa_n & eca_membership == ECA_n), "ECA source, same CBSA", "outside"))))))


MyPalette <- c("#97c08d", "#3d85c6", "#f5cba3", "#f5f2a3", "grey89", "white")

tmap_mode("plot")

print(comp_map %>%
  tm_shape() + 
  tm_polygons(col = "comp", title = "CBSA Statuses
Orleans County ECA", border.alpha = 0.4, style = "cat", palette = MyPalette) +
  tm_layout(legend.title.size = 1.0, legend.position = c("RIGHT","TOP"),
            title = "", frame = FALSE)
)

ECA_n = "27053"
cbsa_n = data %>% filter(eca_membership == ECA_n & eca_cluster_category == "Cluster Sink") %>% select(CBSA_CODE)
cbsa_n = cbsa_n$CBSA_CODE
st_n = substr(ECA_n,1,2)

data_map <- data

comp_map = data_map %>% 
  filter(STATE_CODE != "02" & STATE_CODE != "72" & STATE_CODE != "15" )  %>%
#  filter(STATE_CODE == st_n) %>%
  filter(STATE_CODE == "27" | STATE_CODE == "55") %>%
  mutate(comp = ifelse((place == ECA_n & CBSA_CODE == cbsa_n & eca_central_out_xtab == "Central Sink"), "ECA dest, own CBSA center", ifelse((CENTRAL_OUTLYING == "central" & CBSA_CODE != cbsa_n & eca_membership == ECA_n), "ECA source, other CBSA", ifelse((eca_membership != ECA_n & CBSA_CODE == cbsa_n), "other ECA, same CBSA", ifelse((eca_cbsa_xtab == "Rural Source" & eca_membership == ECA_n), "ECA source, non-CBSA", ifelse((eca_cbsa_xtab == "Nonrural Source" & CBSA_CODE == cbsa_n & eca_membership == ECA_n), "ECA source, same CBSA", "outside"))))))


MyPalette <- c("#97c08d", "#3d85c6", "#f5cba3", "#f5f2a3", "grey89", "white")

tmap_mode("plot")

print(comp_map %>%
  tm_shape() + 
  tm_polygons(col = "comp", title = "CBSA Statuses
Hennepin County ECA", border.alpha = 0.4, style = "cat", palette = MyPalette) +
  tm_layout(legend.title.size = 1.0, legend.position = c("RIGHT","TOP"),
            title = "", frame = FALSE)
)

ECA_n = "31055"
cbsa_n = data %>% filter(eca_membership == ECA_n & eca_cluster_category == "Cluster Sink") %>% select(CBSA_CODE)
cbsa_n = cbsa_n$CBSA_CODE
st_n = substr(ECA_n,1,2)

data_map <- data

comp_map = data_map %>% 
  filter(STATE_CODE != "02" & STATE_CODE != "72" & STATE_CODE != "15" )  %>%
#  filter(STATE_CODE == st_n) %>%
  filter(STATE_CODE == "19" | STATE_CODE == "31") %>%
  mutate(comp = ifelse((place == ECA_n & CBSA_CODE == cbsa_n & eca_central_out_xtab == "Central Sink"), "ECA dest, own CBSA center", ifelse((CENTRAL_OUTLYING == "central" & CBSA_CODE != cbsa_n & eca_membership == ECA_n), "ECA source, other CBSA", ifelse((eca_membership != ECA_n & CBSA_CODE == cbsa_n), "other ECA, same CBSA", ifelse((eca_cbsa_xtab == "Rural Source" & eca_membership == ECA_n), "ECA source, non-CBSA", ifelse((eca_cbsa_xtab == "Nonrural Source" & CBSA_CODE == cbsa_n & eca_membership == ECA_n), "ECA source, same CBSA", "outside"))))))


MyPalette <- c("#97c08d", "#3d85c6", "#f5cba3", "#f5f2a3", "grey89", "white")

tmap_mode("plot")

print(comp_map %>%
  tm_shape() + 
  tm_polygons(col = "comp", title = "CBSA Statuses
Douglas County ECA", border.alpha = 0.4, style = "cat", palette = MyPalette) +
  tm_layout(legend.title.size = 1.0, legend.position = c("RIGHT","BOTTOM"),
            title = "", frame = FALSE)
)

```




## 5 Requested Tables (3/23/24)
### Table 1

```{r}

t1 = df1 %>% 
  select(-gdp_gr) %>%
  relocate(place, population, population_gr, employment, employment_gr, laborforce_part_rate, unemp_rate, jobs, jobs_gr, establishments, establishments_gr, payroll, payroll_gr, wage, wage_gr, income_rate, income_rate_gr, entry_rate, exit_rate, gdp, poverty_rate, poverty_rate_gr, ypll75, highschool_attainment_rate, net_migration_rate) %>%
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" & variable != "rural") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**Table 1.** Summary statistics of outcome variables"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(sep_mark = ",", drop_trailing_zeros = TRUE) %>%
  fmt_number(rows = c("payroll", "gdp"), sep_mark = ",", suffixing = c(NA, "M", NA, NA), drop_trailing_zeros = TRUE) 

print(t1)
t1 %>%
  gtsave(filename = "projects/eca_paa/tables/t1.html", inline_css = TRUE)

```


### Table 2

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("all_source"="source", "all_destination"="destination")


temp_metro = temp %>%
  filter(METRO_MICRO == "metro") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("metro_source"="source", "metro_destination"="destination")

temp_micro = temp %>%
  filter(METRO_MICRO == "micro") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("micro_source"="source", "micro_destination"="destination")

temp_rural = temp %>%
  filter(METRO_MICRO == "rural") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("rural_source"="source", "rural_destination"="destination")

temp_final = temp_all %>%
  left_join(y = temp_metro, by = c("var", "measure")) %>%
  left_join(y = temp_micro, by = c("var", "measure")) %>%
  left_join(y = temp_rural, by = c("var", "measure")) %>% 
  filter(measure != "pct") %>%
  select(-measure)

temp_pct = temp_all %>%
  left_join(y = temp_metro, by = c("var", "measure")) %>%
  left_join(y = temp_micro, by = c("var", "measure")) %>%
  left_join(y = temp_rural, by = c("var", "measure")) %>% 
  filter(measure == "count") %>%
  mutate(all = all_destination + all_source, metro_destination = 100 * metro_destination / all,
         micro_destination = 100 * micro_destination / all,
         rural_destination = 100 * rural_destination / all,
         metro_source = 100 * metro_source / all,
         micro_source = 100 * micro_source / all,
         rural_source = 100 * rural_source / all,
         all_destination = 100 * all_destination / all,
         all_source = 100 * all_source / all,
         across(var, str_replace, ', count', ', pct')
         ) %>%
  select(-all, -measure)
  
x <- c("counties, count", "counties, pct", 
           "population, count", "population, mean", "population, pct",
           "employment, count", "employment, mean", "employment, pct",
           "establishments, count", "establishments, mean", "establishments, pct",
           "jobs, count", "jobs, mean", "jobs, pct",
           "payroll, count", "payroll, mean", "payroll, pct",
           "gdp, count", "gdp, mean", "gdp, pct")

t2 = rbind(temp_final, temp_pct) %>%
  slice(match(x, var)) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 2.** Aggregate and average size of outcome variables by CBSA type"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE) %>%
  fmt_number(rows = c("gdp, count", "gdp, mean", "payroll, count", "payroll, mean"), decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE, suffixing = c(NA, "M", NA, NA))

print(t2)
t2 %>%
  gtsave(filename = "projects/eca_paa/tables/t2.html", inline_css = TRUE)

```


### Table 2A

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("all_source"="source", "all_destination"="destination")


temp_metro.central = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("metro.central_source"="source", "metro.central_destination"="destination")

temp_metro.outlying = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("metro.outlying_source"="source", "metro.outlying_destination"="destination")


temp_micro.central = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("micro.central_source"="source", "micro.central_destination"="destination")

temp_micro.outlying = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("micro.outlying_source"="source", "micro.outlying_destination"="destination")

temp_final = temp_all %>%
  left_join(y = temp_metro.central, by = c("var", "measure")) %>%
  left_join(y = temp_metro.outlying, by = c("var", "measure")) %>%
  left_join(y = temp_micro.central, by = c("var", "measure")) %>%
  left_join(y = temp_micro.outlying, by = c("var", "measure")) %>%
  filter(measure != "pct") %>%
  select(-measure)

temp_pct = temp_all %>%
  left_join(y = temp_metro.central, by = c("var", "measure")) %>%
  left_join(y = temp_metro.outlying, by = c("var", "measure")) %>%
  left_join(y = temp_micro.central, by = c("var", "measure")) %>%
  left_join(y = temp_micro.outlying, by = c("var", "measure")) %>%
  filter(measure == "count") %>%
  mutate(all = all_destination + all_source, metro.central_destination = 100 * metro.central_destination / all,
         micro.central_destination = 100 * micro.central_destination / all,
         metro.outlying_destination = 100 * metro.outlying_destination / all,
         micro.outlying_destination = 100 * micro.outlying_destination / all,
         metro.central_source = 100 * metro.central_source / all,
         micro.central_source = 100 * micro.central_source / all,
         metro.outlying_source = 100 * metro.outlying_source / all,
         micro.outlying_source = 100 * micro.outlying_source / all,
         all_destination = 100 * all_destination / all,
         all_source = 100 * all_source / all,
         across(var, str_replace, ', count', ', pct')
         ) %>%
  select(-all, -measure)
  
x <- c("counties, count", "counties, pct", 
           "population, count", "population, mean", "population, pct",
           "employment, count", "employment, mean", "employment, pct",
           "establishments, count", "establishments, mean", "establishments, pct",
           "jobs, count", "jobs, mean", "jobs, pct",
           "payroll, count", "payroll, mean", "payroll, pct",
           "gdp, count", "gdp, mean", "gdp, pct")

t2a = rbind(temp_final, temp_pct) %>%
  slice(match(x, var)) %>%
  select(-all_destination, -all_source) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 2A.** Aggregate and average size of outcome variables by CBSA county centrality"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE) %>%
  fmt_number(rows = c("gdp, count", "gdp, mean", "payroll, count", "payroll, mean"), decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE, suffixing = c(NA, "M", NA, NA))


print(t2a)
t2a %>%
  gtsave(filename = "projects/eca_paa/tables/t2a.html", inline_css = TRUE)

```


### Table 3

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("all_source"="source", "all_destination"="destination") %>%
  drop_na()


temp_metro = temp %>%
  filter(METRO_MICRO == "metro") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("metro_source"="source", "metro_destination"="destination") %>%
  drop_na()

temp_micro = temp %>%
  filter(METRO_MICRO == "micro") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("micro_source"="source", "micro_destination"="destination") %>%
  drop_na()

temp_rural = temp %>%
  filter(METRO_MICRO == "rural") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("rural_source"="source", "rural_destination"="destination") %>%
  drop_na()

x <- c("population.gr", "employment.gr", "laborforce.part.rate", "unemp.rate", "jobs.gr", "establishments.gr", "entry.rate", "exit.rate", "payroll.gr", "wage", "wage.gr", "income.rate", "income.rate.gr", "poverty.rate", "poverty.rate.gr", "ypll75", "highschool.attainment.rate", "net.migration.rate")


t3 = temp_all %>%
  left_join(y = temp_metro, by = c("var", "measure")) %>%
  left_join(y = temp_micro, by = c("var", "measure")) %>%
  left_join(y = temp_rural, by = c("var", "measure")) %>% 
  select(-measure) %>%
  slice(match(x, var)) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 3.** Mean measures of county growth by CBSA type"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",")


print(t3)
t3 %>%
  gtsave(filename = "projects/eca_paa/tables/t3.html", inline_css = TRUE)

```


### Table 3A

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("all_source"="source", "all_destination"="destination") %>%
  drop_na()


temp_metro.central = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("metro.central_source"="source", "metro.central_destination"="destination") %>%
  drop_na()

temp_metro.outlying = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("metro.outlying_source"="source", "metro.outlying_destination"="destination") %>%
  drop_na()


temp_micro.central = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("micro.central_source"="source", "micro.central_destination"="destination") %>%
  drop_na()

temp_micro.outlying = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("micro.outlying_source"="source", "micro.outlying_destination"="destination") %>%
  drop_na()

x <- c("population.gr", "employment.gr", "laborforce.part.rate", "unemp.rate", "jobs.gr", "establishments.gr", "entry.rate", "exit.rate", "payroll.gr", "wage", "wage.gr", "income.rate", "income.rate.gr", "poverty.rate", "poverty.rate.gr", "ypll75", "highschool.attainment.rate", "net.migration.rate")


t3a = temp_all %>%
  left_join(y = temp_metro.central, by = c("var", "measure")) %>%
  left_join(y = temp_metro.outlying, by = c("var", "measure")) %>%
  left_join(y = temp_micro.central, by = c("var", "measure")) %>%
  left_join(y = temp_micro.outlying, by = c("var", "measure")) %>%
  select(-measure) %>%
  select(-all_destination, -all_source) %>%
  slice(match(x, var)) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 3A. Mean measures of county growth by CBSA centrality**"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",")

print(t3a)
t3a %>%
  gtsave(filename = "projects/eca_paa/tables/t3a.html", inline_css = TRUE)

```



## (superceded) Individual summary tables
### county (n & %)

```{r}

temp = data %>%
  mutate(METRO_MICRO = ifelse(is.na(METRO_MICRO),"non-core", METRO_MICRO), CENTRAL_OUTLYING = ifelse(is.na(CENTRAL_OUTLYING),"non-core", CENTRAL_OUTLYING))


ECAtotal = temp %>%
  group_by(METRO_MICRO) %>%
  summarize(total = length(unique(place)))
ECAtotal2 = ECAtotal %>%
  summarize(total = sum(total)) %>%
  mutate(METRO_MICRO = "total")
ECAtotal = rbind(ECAtotal, ECAtotal2)

ECAdestination = temp %>%
  filter(eca_cluster_category == "Destination") %>%
  group_by(METRO_MICRO) %>%
  summarize(destination = length(unique(place)))
ECAdestination2 = ECAdestination %>%
  summarize(destination = sum(destination)) %>%
  mutate(METRO_MICRO = "destination")
ECAdestination = rbind(ECAdestination, ECAdestination2) %>%
  mutate(METRO_MICRO = ifelse(METRO_MICRO == "destination", "total", METRO_MICRO))

ECAsource = temp %>%
  filter(eca_cluster_category == "Source") %>%
  group_by(METRO_MICRO) %>%
  summarize(source = length(unique(place)))
ECAsource2 = ECAsource %>%
  summarize(source = sum(source)) %>%
  mutate(METRO_MICRO = "source")
ECAsource = rbind(ECAsource, ECAsource2) %>%
  mutate(METRO_MICRO = ifelse(METRO_MICRO == "source", "total", METRO_MICRO))

table1 = ECAdestination %>% left_join(y = ECAsource, by = "METRO_MICRO") %>%
  left_join(y = ECAtotal, by = "METRO_MICRO") %>%
  rename("CBSA"="METRO_MICRO")


gt(table1, rownames_to_stub = TRUE) |>
tab_header(
  title = md("**ECA & CBSA components**"),
  subtitle = md("*Number of Counties*")
) |>
tab_options(
  heading.title.font.size = "medium",
  table.font.size = "small",
  heading.subtitle.font.size = "medium",
  table.width = pct(50)
)

ECAtotal = temp %>%
  group_by(CENTRAL_OUTLYING) %>%
  summarize(total = length(unique(place)))
ECAtotal2 = ECAtotal %>%
  summarize(total = sum(total)) %>%
  mutate(CENTRAL_OUTLYING = "total")
ECAtotal = rbind(ECAtotal, ECAtotal2)

ECAdestination = temp %>%
  filter(eca_cluster_category == "Destination") %>%
  group_by(CENTRAL_OUTLYING) %>%
  summarize(destination = length(unique(place)))
ECAdestination2 = ECAdestination %>%
  summarize(destination = sum(destination)) %>%
  mutate(CENTRAL_OUTLYING = "destination")
ECAdestination = rbind(ECAdestination, ECAdestination2) %>%
  mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "destination", "total", CENTRAL_OUTLYING))

ECAsource = temp %>%
  filter(eca_cluster_category == "Source") %>%
  group_by(CENTRAL_OUTLYING) %>%
  summarize(source = length(unique(place)))
ECAsource2 = ECAsource %>%
  summarize(source = sum(source)) %>%
  mutate(CENTRAL_OUTLYING = "source")
ECAsource = rbind(ECAsource, ECAsource2) %>%
  mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "source", "total", CENTRAL_OUTLYING))

table2 = ECAdestination %>% left_join(y = ECAsource, by = "CENTRAL_OUTLYING") %>%
  left_join(y = ECAtotal, by = "CENTRAL_OUTLYING") %>%
  rename("CBSA"="CENTRAL_OUTLYING")


gt(table2, rownames_to_stub = TRUE) |>
tab_header(
  title = md("**ECA & CBSA components**"),
  subtitle = md("*Number of Counties*")
) |>
tab_options(
  heading.title.font.size = "medium",
  table.font.size = "small",
  heading.subtitle.font.size = "medium",
  table.width = pct(50)
)

table3 = table1 %>%
  mutate(max = max(total), destination = destination / max, source = source / max, total = total / max) %>%
  select(c(CBSA, source, destination, total))

gt(table3, rownames_to_stub = TRUE) |>
tab_header(
  title = md("**ECA & CBSA components**"),
  subtitle = md("*Percent of Counties*")
) |>
tab_options(
  heading.title.font.size = "medium",
  table.font.size = "small",
  heading.subtitle.font.size = "medium",
  table.width = pct(50)
) %>%
  fmt_percent(decimals = 0)

table4 = table2 %>%
  mutate(max = max(total), destination = destination / max, source = source / max, total = total / max) %>%
  select(c(CBSA, source, destination, total))

gt(table4, rownames_to_stub = TRUE) |>
tab_header(
  title = md("**ECA & CBSA components**"),
  subtitle = md("*Percent of Counties*")
) |>
tab_options(
  heading.title.font.size = "medium",
  table.font.size = "small",
  heading.subtitle.font.size = "medium",
  table.width = pct(50)
) %>%
  fmt_percent(decimals = 0)


```

### sums

```{r}
countvars <- c("population", "employment", "establishments", "gdp", "jobs", "payroll")

for (col in countvars) {
  ECAtotal <- temp %>%
    group_by(METRO_MICRO) %>%
    summarize(total = sum(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- ECAtotal %>%
    summarize(total = sum(total)) %>%
    mutate(METRO_MICRO = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(METRO_MICRO) %>%
    summarize(destination = sum(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- ECAdestination %>%
    summarize(destination = sum(destination)) %>%
    mutate(METRO_MICRO = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "destination", "total", METRO_MICRO))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(METRO_MICRO) %>%
    summarize(source = sum(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- ECAsource %>%
    summarize(source = sum(source)) %>%
    mutate(METRO_MICRO = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "source", "total", METRO_MICRO))
  
  table1 <- ECAdestination %>%
    left_join(y = ECAsource, by = "METRO_MICRO") %>%
    left_join(y = ECAtotal, by = "METRO_MICRO") %>%
    rename("CBSA" = "METRO_MICRO")
  
  print(gt(table1, rownames_to_stub = TRUE) |>
            tab_header(
              title = md("**ECA & CBSA components**"),
              subtitle = md(glue("*",col," (n)*"))
            ) |>
            tab_options(
              heading.title.font.size = "medium",
              table.font.size = "small",
              heading.subtitle.font.size = "medium",
              table.width = pct(50)
            )%>%
          fmt_number(suffixing = TRUE))
  
  ECAtotal <- temp %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(total = sum(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- ECAtotal %>%
    summarize(total = sum(total)) %>%
    mutate(CENTRAL_OUTLYING = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(destination = sum(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- ECAdestination %>%
    summarize(destination = sum(destination)) %>%
    mutate(CENTRAL_OUTLYING = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "destination", "total", CENTRAL_OUTLYING))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(source = sum(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- ECAsource %>%
    summarize(source = sum(source)) %>%
    mutate(CENTRAL_OUTLYING = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "source", "total", CENTRAL_OUTLYING))
  
  table2 <- ECAdestination %>%
    left_join(y = ECAsource, by = "CENTRAL_OUTLYING") %>%
    left_join(y = ECAtotal, by = "CENTRAL_OUTLYING") %>%
    rename("CBSA" = "CENTRAL_OUTLYING")
  
  print(gt(table2, rownames_to_stub = TRUE) |>
            tab_header(
              title = md("**ECA & CBSA components**"),
              subtitle = md(glue("*",col," (n)*"))
            ) |>
            tab_options(
              heading.title.font.size = "medium",
              table.font.size = "small",
              heading.subtitle.font.size = "medium",
              table.width = pct(50)
            )%>%
          fmt_number(suffixing = TRUE))
  
  table3 <- table1 %>%
    mutate(max = max(total), destination = destination / max, source = source / max, total = total / max) %>%
    select(c(CBSA, source, destination, total))
  
  print(gt(table3, rownames_to_stub = TRUE) |>
            tab_header(
              title = md("**ECA & CBSA components**"),
              subtitle = md(glue("*",col," (%)*"))
            ) |>
            tab_options(
              heading.title.font.size = "medium",
              table.font.size = "small",
              heading.subtitle.font.size = "medium",
              table.width = pct(50)
            ) %>%
            fmt_percent(decimals = 0))
  
  table4 <- table2 %>%
    mutate(max = max(total), destination = destination / max, source = source / max, total = total / max) %>%
    select(c(CBSA, source, destination, total))
  
  print(gt(table4, rownames_to_stub = TRUE) |>
            tab_header(
              title = md("**ECA & CBSA components**"),
              subtitle = md(glue("*",col," (%)*"))
            ) |>
            tab_options(
              heading.title.font.size = "medium",
              table.font.size = "small",
              heading.subtitle.font.size = "medium",
              table.width = pct(50)
            ) %>%
            fmt_percent(decimals = 0))
}


for (col in countvars) {
  ECAtotal <- temp %>%
    group_by(METRO_MICRO) %>%
    summarize(total = sum(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- ECAtotal %>%
    summarize(total = sum(total)) %>%
    mutate(METRO_MICRO = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(METRO_MICRO) %>%
    summarize(destination = sum(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- ECAdestination %>%
    summarize(destination = sum(destination)) %>%
    mutate(METRO_MICRO = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "destination", "total", METRO_MICRO))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(METRO_MICRO) %>%
    summarize(source = sum(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- ECAsource %>%
    summarize(source = sum(source)) %>%
    mutate(METRO_MICRO = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "source", "total", METRO_MICRO))
  
  table1 <- ECAdestination %>%
    left_join(y = ECAsource, by = "METRO_MICRO") %>%
    left_join(y = ECAtotal, by = "METRO_MICRO") %>%
    rename("CBSA" = "METRO_MICRO")
  
  print(table1)
  
  ECAtotal <- temp %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(total = sum(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- ECAtotal %>%
    summarize(total = sum(total)) %>%
    mutate(CENTRAL_OUTLYING = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(destination = sum(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- ECAdestination %>%
    summarize(destination = sum(destination)) %>%
    mutate(CENTRAL_OUTLYING = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "destination", "total", CENTRAL_OUTLYING))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(source = sum(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- ECAsource %>%
    summarize(source = sum(source)) %>%
    mutate(CENTRAL_OUTLYING = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "source", "total", CENTRAL_OUTLYING))
  
  table2 <- ECAdestination %>%
    left_join(y = ECAsource, by = "CENTRAL_OUTLYING") %>%
    left_join(y = ECAtotal, by = "CENTRAL_OUTLYING") %>%
    rename("CBSA" = "CENTRAL_OUTLYING")
  
  print(table2)
  
  table3 <- table1 %>%
    mutate(max = max(total), destination = destination / max, source = source / max, total = total / max) %>%
    select(c(CBSA, source, destination, total))
  
  print(table3)
  
  table4 <- table2 %>%
    mutate(max = max(total), destination = destination / max, source = source / max, total = total / max) %>%
    select(c(CBSA, source, destination, total))
  
  print(table4)
}

```

### means

```{r}
indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()

for (col in indicators) {
  ECAtotal <- temp %>%
    group_by(METRO_MICRO) %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- temp %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(METRO_MICRO = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(METRO_MICRO) %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(METRO_MICRO = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "destination", "total", METRO_MICRO))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(METRO_MICRO) %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(METRO_MICRO = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "source", "total", METRO_MICRO))
  
  table1 <- ECAdestination %>%
    left_join(y = ECAsource, by = "METRO_MICRO") %>%
    left_join(y = ECAtotal, by = "METRO_MICRO") %>%
    rename("CBSA" = "METRO_MICRO")
  
  print(gt(table1, rownames_to_stub = TRUE) |>
            tab_header(
              title = md("**ECA & CBSA components**"),
              subtitle = md(glue("*",col," (means)*"))
            ) |>
            tab_options(
              heading.title.font.size = "medium",
              table.font.size = "small",
              heading.subtitle.font.size = "medium",
              table.width = pct(50)
            )%>%
          fmt_number(decimals = 1, sep_mark = ","))
  
  ECAtotal <- temp %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- temp %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(CENTRAL_OUTLYING = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(CENTRAL_OUTLYING = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "destination", "total", CENTRAL_OUTLYING))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(CENTRAL_OUTLYING = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "source", "total", CENTRAL_OUTLYING))
  
  table2 <- ECAdestination %>%
    left_join(y = ECAsource, by = "CENTRAL_OUTLYING") %>%
    left_join(y = ECAtotal, by = "CENTRAL_OUTLYING") %>%
    rename("CBSA" = "CENTRAL_OUTLYING")
  
  print(gt(table2, rownames_to_stub = TRUE) |>
            tab_header(
              title = md("**ECA & CBSA components**"),
              subtitle = md(glue("*",col," (means)*"))
            ) |>
            tab_options(
              heading.title.font.size = "medium",
              table.font.size = "small",
              heading.subtitle.font.size = "medium",
              table.width = pct(50)
            )%>%
          fmt_number(decimals = 1, sep_mark = ","))

}

for (col in indicators) {
  ECAtotal <- temp %>%
    group_by(METRO_MICRO) %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- temp %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(METRO_MICRO = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(METRO_MICRO) %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(METRO_MICRO = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "destination", "total", METRO_MICRO))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(METRO_MICRO) %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(METRO_MICRO = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(METRO_MICRO = ifelse(METRO_MICRO == "source", "total", METRO_MICRO))
  
  table1 <- ECAdestination %>%
    left_join(y = ECAsource, by = "METRO_MICRO") %>%
    left_join(y = ECAtotal, by = "METRO_MICRO") %>%
    rename("CBSA" = "METRO_MICRO")
  
  print(table1)
  
  ECAtotal <- temp %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE))
  
  ECAtotal2 <- temp %>%
    summarize(total = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(CENTRAL_OUTLYING = "total")
  
  ECAtotal <- rbind(ECAtotal, ECAtotal2)
  
  ECAdestination <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE))
  
  ECAdestination2 <- temp %>%
    filter(eca_cluster_category == "Destination") %>%
    summarize(destination = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(CENTRAL_OUTLYING = "destination")
  
  ECAdestination <- rbind(ECAdestination, ECAdestination2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "destination", "total", CENTRAL_OUTLYING))
  
  ECAsource <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    group_by(CENTRAL_OUTLYING) %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE))
  
  ECAsource2 <- temp %>%
    filter(eca_cluster_category == "Source") %>%
    summarize(source = mean(!!sym(col), na.rm = TRUE)) %>%
    mutate(CENTRAL_OUTLYING = "source")
  
  ECAsource <- rbind(ECAsource, ECAsource2) %>%
    mutate(CENTRAL_OUTLYING = ifelse(CENTRAL_OUTLYING == "source", "total", CENTRAL_OUTLYING))
  
  table2 <- ECAdestination %>%
    left_join(y = ECAsource, by = "CENTRAL_OUTLYING") %>%
    left_join(y = ECAtotal, by = "CENTRAL_OUTLYING") %>%
    rename("CBSA" = "CENTRAL_OUTLYING")
  
  print(table2)

}


```



# Descriptive statistics
## Counties
### General


```{r}

ECA |>
  count(eca_cluster_category) |>
  gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**Number of counties by ECA component**"),
    subtitle = md(" ")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    table.font.size = "small",
    heading.subtitle.font.size = "medium",
    table.width = pct(50)
  ) %>%
  fmt_markdown()

```

```{r}
# county descriptives

data %>% 
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" & variable != "rural" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("*Dynamism Indicators*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  )

data %>% 
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable == "place" |  variable == "laborforce_part_rate"|variable == "unemp_rate"|variable == "highschool_attainment_rate" | variable == "education_growth" | variable == "ypll75"|variable == "premature_death_growth" | variable == "poverty_rate" | variable == "poverty_growth" | variable == "net_migration_rate") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("*Vitality Indicators*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    table.font.size = "small",
    heading.subtitle.font.size = "medium",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  )


```

### Metro/non-metro status

```{r}
data %>%
  mutate(rural = ifelse(rural == 1, "non-CBSA", "CBSA")) %>%
  rename("population.growth"="population_growth", "employment.growth"="employment_growth", "gdp.growth"="gdp_growth", "establishments.growth"="establishments_growth", "job.growth"="job_growth", "payroll.growth"="payroll_growth", "income.growth"="income_growth", "entry.rate"="entry_rate", "exit.rate"="exit_rate", "wage.growth"="wage_growth", "income.rate"="income_rate") %>%
  select(-eca_membership, -max_trade_share, -eca_cluster_category, -CENTRAL_OUTLYING) %>%
  pivot_wider(names_from = rural,
              values_from = c(population, employment, establishments, gdp, log.population, log.employment, log.establishments, log.gdp, population.growth, employment.growth, establishments.growth, jobs, job.growth, gdp.growth, entry.rate, exit.rate, payroll, payroll.growth, wage, wage.growth, income.rate, income.growth)) %>%
  get_summary_stats(, type = c("full"), show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Dynamism Indicators**, *Metro/Non-metro*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )

data %>%
  mutate(rural = ifelse(rural == 1, "non-CBSA", "CBSA")) %>%
  select(place, laborforce_part_rate, unemp_rate, highschool_attainment_rate, education_growth, ypll75, premature_death_growth, poverty_rate, poverty_growth, net_migration_rate, rural) %>%
  rename("highschool.attainment.rate"="highschool_attainment_rate", "unemp.rate"="unemp_rate", "laborforce.part.rate"="laborforce_part_rate", "education.growth"="education_growth", "premature.death"="ypll75", "premature.death.growth"="premature_death_growth", "poverty.rate"="poverty_rate", "poverty.growth"="poverty_growth", "net.migration.rate"="net_migration_rate")  %>%
  pivot_wider(names_from = rural,
              values_from = c(laborforce.part.rate, unemp.rate, highschool.attainment.rate, education.growth, premature.death, premature.death.growth, poverty.rate, poverty.growth, net.migration.rate)) %>%
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Vitality Indicators**, *Metro/Non-metro*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )

```

### RUC code

```{r}
data %>%
  mutate(RUCC2 = str_c("R","",ruc_code), RUCC2 = ifelse(RUCC2 == "R1", "R1 (Largest Metros)", ifelse(RUCC2 == "R9", "R9 (Smallest Rural)", RUCC2))) %>%
  rename("population.growth"="population_growth", "employment.growth"="employment_growth", "gdp.growth"="gdp_growth", "establishments.growth"="establishments_growth", "job.growth"="job_growth", "payroll.growth"="payroll_growth", "income.growth"="income_growth", "entry.rate"="entry_rate", "exit.rate"="exit_rate", "wage.growth"="wage_growth", "income.rate"="income_rate") %>%
  select(-eca_membership, -max_trade_share, -eca_cluster_category, -CENTRAL_OUTLYING, -rural) %>%
  pivot_wider(names_from = RUCC2,
              values_from = c(population, employment, establishments, gdp, log.population, log.employment, log.establishments, log.gdp, population.growth, employment.growth, establishments.growth, jobs, job.growth, gdp.growth, entry.rate, exit.rate, payroll, payroll.growth, wage, wage.growth, income.rate, income.growth)) %>%
  get_summary_stats(, type = c("full"), show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Vitality Indicators**, *RUC Code*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )

data %>%
  mutate(RUCC2 = str_c("R","",ruc_code), RUCC2 = ifelse(RUCC2 == "R1", "R1 (Largest Metros)", ifelse(RUCC2 == "R9", "R9 (Smallest Rural)", RUCC2))) %>%
  select(place, laborforce_part_rate, unemp_rate, highschool_attainment_rate, education_growth, ypll75, premature_death_growth, poverty_rate, poverty_growth, net_migration_rate, RUCC2) %>%
  rename("highschool.attainment.rate"="highschool_attainment_rate", "unemp.rate"="unemp_rate", "laborforce.part.rate"="laborforce_part_rate", "education.growth"="education_growth", "premature.death"="ypll75", "premature.death.growth"="premature_death_growth", "poverty.rate"="poverty_rate", "poverty.growth"="poverty_growth", "net.migration.rate"="net_migration_rate")  %>%
  pivot_wider(names_from = RUCC2,
              values_from = c(laborforce.part.rate, unemp.rate, highschool.attainment.rate, education.growth, premature.death, premature.death.growth, poverty.rate, poverty.growth, net.migration.rate)) %>%
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Vitality Indicators**, *RUC Code*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )
```


### ECA category

```{r}
data %>%
  rename("population.growth"="population_growth", "employment.growth"="employment_growth", "gdp.growth"="gdp_growth", "establishments.growth"="establishments_growth", "job.growth"="job_growth", "payroll.growth"="payroll_growth", "income.growth"="income_growth", "entry.rate"="entry_rate", "exit.rate"="exit_rate", "wage.growth"="wage_growth", "income.rate"="income_rate") %>%
  select(-eca_membership, -max_trade_share, -rural, -CENTRAL_OUTLYING) %>%
  pivot_wider(names_from = eca_cluster_category,
              values_from = c(population, employment, establishments, gdp, log.population, log.employment, log.establishments, log.gdp, population.growth, employment.growth, establishments.growth, jobs, job.growth, gdp.growth, entry.rate, exit.rate, payroll, payroll.growth, wage, wage.growth, income.rate, income.growth)) %>%
  get_summary_stats(, type = c("full"), show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Vitality Indicators**, *ECAs*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )

data %>%
  select(place, laborforce_part_rate, unemp_rate, highschool_attainment_rate, education_growth, ypll75, premature_death_growth, poverty_rate, poverty_growth, net_migration_rate, eca_cluster_category) %>%
  rename("highschool.attainment.rate"="highschool_attainment_rate", "unemp.rate"="unemp_rate", "laborforce.part.rate"="laborforce_part_rate", "education.growth"="education_growth", "premature.death"="ypll75", "premature.death.growth"="premature_death_growth", "poverty.rate"="poverty_rate", "poverty.growth"="poverty_growth", "net.migration.rate"="net_migration_rate")  %>%
  pivot_wider(names_from = eca_cluster_category,
              values_from = c(laborforce.part.rate, unemp.rate, highschool.attainment.rate, education.growth, premature.death, premature.death.growth, poverty.rate, poverty.growth, net.migration.rate)) %>%
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Vitality Indicators**, *ECAs*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )
```

### CBSA category

```{r}

data %>%
  mutate(CENTRAL_OUTLYING = ifelse(is.na(CENTRAL_OUTLYING), "non-CBSA", CENTRAL_OUTLYING)) %>%
  rename("population.growth"="population_growth", "employment.growth"="employment_growth", "gdp.growth"="gdp_growth", "establishments.growth"="establishments_growth", "job.growth"="job_growth", "payroll.growth"="payroll_growth", "income.growth"="income_growth", "entry.rate"="entry_rate", "exit.rate"="exit_rate", "wage.growth"="wage_growth", "income.rate"="income_rate") %>%
  select(-eca_membership, -max_trade_share, -eca_cluster_category, -rural) %>%
  pivot_wider(names_from = CENTRAL_OUTLYING,
              values_from = c(population, employment, establishments, gdp, log.population, log.employment, log.establishments, log.gdp, population.growth, employment.growth, establishments.growth, jobs, job.growth, gdp.growth, entry.rate, exit.rate, payroll, payroll.growth, wage, wage.growth, income.rate, income.growth)) %>%
  get_summary_stats(, type = c("full"), show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Dynamism Indicators**, *Metro/Non-metro*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )

data %>%
  mutate(CENTRAL_OUTLYING = ifelse(is.na(CENTRAL_OUTLYING), "non-CBSA", CENTRAL_OUTLYING)) %>%
  select(place, laborforce_part_rate, unemp_rate, highschool_attainment_rate, education_growth, ypll75, premature_death_growth, poverty_rate, poverty_growth, net_migration_rate, CENTRAL_OUTLYING) %>%
  rename("highschool.attainment.rate"="highschool_attainment_rate", "unemp.rate"="unemp_rate", "laborforce.part.rate"="laborforce_part_rate", "education.growth"="education_growth", "premature.death"="ypll75", "premature.death.growth"="premature_death_growth", "poverty.rate"="poverty_rate", "poverty.growth"="poverty_growth", "net.migration.rate"="net_migration_rate")  %>%
  pivot_wider(names_from = CENTRAL_OUTLYING,
              values_from = c(laborforce.part.rate, unemp.rate, highschool.attainment.rate, education.growth, premature.death, premature.death.growth, poverty.rate, poverty.growth, net.migration.rate)) %>%
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  separate_wider_delim(variable, delim = "_", names = c("variable", "group")) %>%
  gt::gt(
    rowname_col = "variable",
    groupname_col = "group",
  ) |>
  tab_header(
    title = md("**County Descriptives**"),
    subtitle = md("**Vitality Indicators**, *Metro/Non-metro*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(65),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  )


```

## ECAs
```{r}

# ECA clusters by size
data |>
  count(eca_membership, name = "n_counties") |>
  count(n_counties) |>
  gt(rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**ECAs by number of counties**"),
    subtitle = md(" ")
  ) |>
  tab_options(
    table.font.size = "small",
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.width = pct(50)
  )

```


```{r}
# ECA descriptives

temp1 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE),  highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp1 %>%
  left_join(y=temp2, by="eca_membership") %>%
  mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  get_summary_stats(, type = "common", show = c("n", "mean", "sd", "median", "min", "max")) %>%
  filter(variable != "max_trade_share" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**ECA Descriptives**"),
    subtitle = md("*Dynamism Indicators*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  )

temp1 %>%
  left_join(y=temp2, by="eca_membership") %>%
  get_summary_stats(, type = "common", show = c("n", "mean", "sd", "median", "min", "max")) %>%
  filter(variable == "place" |  variable == "laborforce_part_rate"|variable == "unemp_rate"|variable == "highschool_attainment_rate" | variable == "education_growth" | variable == "ypll75"|variable == "premature_death_growth" | variable == "poverty_rate" | variable == "poverty_growth" | variable == "net_migration_rate") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**ECA Descriptives**"),
    subtitle = md("*Vitality Indicators*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    table.font.size = "small",
    heading.subtitle.font.size = "medium",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  )


```


## CBSAs
```{r}

# ECA clusters by size
CBSA |>
  count(CBSA_CODE, name = "n_counties") |>
  count(n_counties) |>
  gt(rownames_to_stub = TRUE,
) |>
  tab_header(
    title = md("**CBSAs by number of counties**"),
    subtitle = md(" ")
  ) |>
  tab_options(
    table.font.size = "small",
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.width = pct(50)
  )

```

```{r}
# CBSA descriptives

temp1 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE),  highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp1 %>%
  left_join(y=temp2, by="CBSA_CODE") %>%
  mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  get_summary_stats(, type = "common", show = c("n", "mean", "sd", "median", "min", "max")) %>%
  filter(variable != "max_trade_share" &  variable != "laborforce_part_rate" & variable != "unemp_rate" & variable != "highschool_attainment_rate" & variable != "education_growth" & variable != "ypll75" & variable != "premature_death_growth" & variable != "poverty_rate" & variable != "poverty_growth" & variable != "net_migration_rate") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**CBSA Descriptives**"),
    subtitle = md("*Dynamism Indicators*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  )

temp1 %>%
  left_join(y=temp2, by="CBSA_CODE") %>%
  get_summary_stats(, type = "common", show = c("n", "mean", "sd", "median", "min", "max")) %>%
  filter(variable == "place" |  variable == "laborforce_part_rate"|variable == "unemp_rate"|variable == "highschool_attainment_rate" | variable == "education_growth" | variable == "ypll75"|variable == "premature_death_growth" | variable == "poverty_rate" | variable == "poverty_growth" | variable == "net_migration_rate") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**CBSA Descriptives**"),
    subtitle = md("*Vitality Indicators*")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    table.font.size = "small",
    heading.subtitle.font.size = "medium",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  )

```


# Histograms
### Counties
#### General

```{r}

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()

for (i in indicators) {
  
  temp = data %>% mutate(fl = "x")
  
  print((ggplot(temp, aes(x = data[ , i], fill = fl)) +
    geom_density(alpha = 0.4) + 
    theme_pander() + 
    scale_fill_pander() +
    theme(legend.position = "none") +
      ggtitle(i) +
    xlab(i)))
  
  }


```

#### Metro/non-metro

```{r}

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()
data_temp = data %>%
  mutate(rural = ifelse(rural == 1, "non-metro", "metro"))


for (i in indicators) {
  print((ggplot(data_temp, aes(x = data_temp[ , i], fill = rural)) +
    geom_density(alpha = 0.4) + 
    theme_pander() + 
    scale_fill_pander() +
    theme(legend.position = "top") +
      ggtitle(i) +
    xlab(i)))
  
  }


```

#### RUC code

```{r}

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()

temp = data %>% mutate(RUCC2 = str_c("R","",ruc_code), RUCC2 = ifelse(RUCC2 == "R1", "R1 (Largest Metros)", ifelse(RUCC2 == "R9", "R9 (Smallest Rural)", RUCC2)))


for (i in indicators) {
  print(ggplot(temp, aes(x = temp[ , i], y = RUCC2, fill = ..x..)) +
  geom_density_ridges_gradient(scale = 1.8, rel_min_height = 0.01) +
  scale_fill_viridis(option = "G") +
  labs(title = i) +
    theme(
      legend.position="none",
      panel.spacing = unit(0.1, "lines"),
      strip.text.x = element_text(size = 8)
    ) +
    xlab(i) +
    ylab("RUC code"))
  
}


```

#### ECA category

```{r}

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()

temp = data

for (i in indicators) {
  print((ggplot(temp, aes(x = temp[ , i], fill = eca_cluster_category)) +
    geom_density(alpha = 0.4) + 
    theme_pander() + 
    scale_fill_pander() +
    theme(legend.position = "top") +
      ggtitle(i) +
    xlab(i)))
  
  }


```
#### CBSA category

```{r}

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, ruc_code, rural, CBSA_CODE, CENTRAL_OUTLYING)) %>%
  colnames()

temp = data %>%
  mutate(CENTRAL_OUTLYING = ifelse(is.na(CENTRAL_OUTLYING), "non-CBSA", CENTRAL_OUTLYING))
  

for (i in indicators) {
  print((ggplot(temp, aes(x = temp[ , i], fill = CENTRAL_OUTLYING)) +
    geom_density(alpha = 0.4) + 
    theme_pander() + 
    scale_fill_pander() +
    theme(legend.position = "top") +
      ggtitle(i) +
    xlab(i)))
  
  }


```

```{r}


indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, ruc_code, rural, CBSA_CODE, CENTRAL_OUTLYING)) %>%
  colnames()

temp = data %>%
  mutate(CENTRAL_OUTLYING = ifelse(is.na(CENTRAL_OUTLYING), "non-CBSA", CENTRAL_OUTLYING))
  

for (i in indicators) {
  print(ggplot(temp, aes(x = temp[ , i], y = CENTRAL_OUTLYING, fill = ..x..)) +
  geom_density_ridges_gradient(scale = 1.8, rel_min_height = 0.01) +
  scale_fill_viridis(option = "G") +
  labs(title = i) +
    theme(
      legend.position="none",
      panel.spacing = unit(0.1, "lines"),
      strip.text.x = element_text(size = 8)
    ) +
    xlab(i) +
    ylab("CBSA county category"))
  
}


```

### ECAs

```{r}


temp1 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE), highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp3 = temp1 %>%
  left_join(y=temp2, by="eca_membership") %>%
  mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  mutate(employment_growth = ifelse(employment_growth == "NaN", NA, employment_growth),
         establishments_growth = ifelse(establishments_growth == "NaN", NA, establishments_growth),
         gdp_growth = ifelse(gdp_growth == "NaN", NA, gdp_growth),
         net_migration_rate = ifelse(net_migration_rate == "NaN", NA, net_migration_rate),
         laborforce_part_rate = ifelse(laborforce_part_rate == "NaN", NA, laborforce_part_rate),
         unemp_rate = ifelse(unemp_rate == "NaN", NA, unemp_rate),
         job_growth = ifelse(job_growth == "NaN", NA, job_growth),
         entry_rate = ifelse(entry_rate == "NaN", NA, entry_rate),
         exit_rate = ifelse(exit_rate == "NaN", NA, exit_rate),
         wage = ifelse(wage == "NaN", NA, wage),
         wage_growth = ifelse(wage_growth == "NaN", NA, wage_growth),
         income_rate = ifelse(income_rate == "NaN", NA, income_rate),
         income_growth = ifelse(income_growth == "NaN", NA, income_growth),
         highschool_attainment_rate = ifelse(highschool_attainment_rate == "NaN", NA, highschool_attainment_rate),
         education_growth = ifelse(education_growth == "NaN", NA, education_growth),
         ypll75 = ifelse(ypll75 == "NaN", NA, ypll75),
         premature_death_growth = ifelse(premature_death_growth == "NaN", NA, premature_death_growth),
         poverty_growth = ifelse(poverty_growth == "NaN", NA, poverty_growth),
         )


indicators = temp3 %>%
  select(-c(eca_membership)) %>%
  colnames()

for (i in indicators) {
  
  print((ggplot(temp3, aes(x = temp3[[i]], fill = "blue")) +
    geom_density(alpha = 0.4) + 
    theme_pander() + 
    scale_fill_pander() +
    theme(legend.position = "none") +
      ggtitle(i) +
    xlab(i)))
  
  }

```

### CBSAs

```{r}


temp1 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE), highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp3 = temp1 %>%
  left_join(y=temp2, by="CBSA_CODE") %>%
  mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  mutate(employment_growth = ifelse(employment_growth == "NaN", NA, employment_growth),
         establishments_growth = ifelse(establishments_growth == "NaN", NA, establishments_growth),
         gdp_growth = ifelse(gdp_growth == "NaN", NA, gdp_growth),
         net_migration_rate = ifelse(net_migration_rate == "NaN", NA, net_migration_rate),
         laborforce_part_rate = ifelse(laborforce_part_rate == "NaN", NA, laborforce_part_rate),
         unemp_rate = ifelse(unemp_rate == "NaN", NA, unemp_rate),
         job_growth = ifelse(job_growth == "NaN", NA, job_growth),
         entry_rate = ifelse(entry_rate == "NaN", NA, entry_rate),
         exit_rate = ifelse(exit_rate == "NaN", NA, exit_rate),
         wage = ifelse(wage == "NaN", NA, wage),
         wage_growth = ifelse(wage_growth == "NaN", NA, wage_growth),
         income_rate = ifelse(income_rate == "NaN", NA, income_rate),
         income_growth = ifelse(income_growth == "NaN", NA, income_growth),
         highschool_attainment_rate = ifelse(highschool_attainment_rate == "NaN", NA, highschool_attainment_rate),
         education_growth = ifelse(education_growth == "NaN", NA, education_growth),
         ypll75 = ifelse(ypll75 == "NaN", NA, ypll75),
         premature_death_growth = ifelse(premature_death_growth == "NaN", NA, premature_death_growth),
         poverty_growth = ifelse(poverty_growth == "NaN", NA, poverty_growth),
         )


indicators = temp3 %>%
  select(-c(CBSA_CODE)) %>%
  colnames()

for (i in indicators) {
  
  print((ggplot(temp3, aes(x = temp3[[i]], fill = "blue")) +
    geom_density(alpha = 0.4) + 
    theme_pander() + 
    scale_fill_pander() +
    theme(legend.position = "none") +
      ggtitle(i) +
    xlab(i)))
  
  }

```

# Static Maps
## Counties

```{r}
tmap_mode("plot")

data_map <- left_join(df_county_shapes, data, by = "place") %>% filter(STATE_CODE != "02" & STATE_CODE != "15" & STATE_CODE != "72")

state_map = data_map %>%
  dplyr::group_by(STATE_CODE) %>% 
  dplyr::summarise()

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()

for (i in indicators) {
  mdn = median(data_map[[i]])
  
  print(data_map %>% 
  tm_shape() + 
  tm_polygons(col = i, border.alpha = 0.0, style = "cont", id = i,
              palette = c("white","#97c08d","#0f130e"), midpoint = mdn) +
  tm_shape(state_map) +
  tm_layout(legend.title.size = 1.5, legend.position = c("right","bottom")) +
  tm_borders(lwd=1.5))
  
  }

```

## ECAs

```{r}

temp1 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE), highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp3 = temp1 %>%
  left_join(y=temp2, by="eca_membership") %>%
mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  mutate(employment_growth = ifelse(employment_growth == "NaN", NA, employment_growth),
         establishments_growth = ifelse(establishments_growth == "NaN", NA, establishments_growth),
         gdp_growth = ifelse(gdp_growth == "NaN", NA, gdp_growth),
         net_migration_rate = ifelse(net_migration_rate == "NaN", NA, net_migration_rate),
         laborforce_part_rate = ifelse(laborforce_part_rate == "NaN", NA, laborforce_part_rate),
         unemp_rate = ifelse(unemp_rate == "NaN", NA, unemp_rate),
         job_growth = ifelse(job_growth == "NaN", NA, job_growth),
         entry_rate = ifelse(entry_rate == "NaN", NA, entry_rate),
         exit_rate = ifelse(exit_rate == "NaN", NA, exit_rate),
         wage = ifelse(wage == "NaN", NA, wage),
         wage_growth = ifelse(wage_growth == "NaN", NA, wage_growth),
         income_rate = ifelse(income_rate == "NaN", NA, income_rate),
         income_growth = ifelse(income_growth == "NaN", NA, income_growth),
         highschool_attainment_rate = ifelse(highschool_attainment_rate == "NaN", NA, highschool_attainment_rate),
         education_growth = ifelse(education_growth == "NaN", NA, education_growth),
         ypll75 = ifelse(ypll75 == "NaN", NA, ypll75),
         premature_death_growth = ifelse(premature_death_growth == "NaN", NA, premature_death_growth),
         poverty_growth = ifelse(poverty_growth == "NaN", NA, poverty_growth),
         )

data_map <- left_join(df_county_shapes, data, by = "place") %>% filter(STATE_CODE != "02" & STATE_CODE != "15" & STATE_CODE != "72")

state_map = data_map %>%
  dplyr::group_by(STATE_CODE) %>% 
  dplyr::summarise()

indicators = temp3 %>%
  select(-c(eca_membership)) %>%
  colnames()

tmap_mode("plot")

ECA_map = data_map %>%
  dplyr::group_by(eca_membership) %>% 
  dplyr::summarise()

data_map <- left_join(ECA_map, temp3, by = "eca_membership") %>%
  mutate(log.employment = ifelse(log.employment == "-Inf", NA, log.employment),
         log.gdp = ifelse(log.gdp == "-Inf", NA, log.gdp))



for (i in indicators) {
  mdn = median(data_map[[i]])
  
  print(data_map %>% 
  tm_shape() + 
  tm_polygons(col = i, border.alpha = 0.0, style = "cont", id = i,
              palette = c("white","#97c08d","#0f130e"), midpoint = mdn) +
  tm_shape(state_map) +
  tm_layout(legend.title.size = 1.5, legend.position = c("right","bottom")) +
  tm_borders(lwd=1.5))
  
  }


```

## CBSAs

```{r}

temp1 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE), highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp3 = temp1 %>%
  left_join(y=temp2, by="CBSA_CODE") %>%
 mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  mutate(employment_growth = ifelse(employment_growth == "NaN", NA, employment_growth),
         establishments_growth = ifelse(establishments_growth == "NaN", NA, establishments_growth),
         gdp_growth = ifelse(gdp_growth == "NaN", NA, gdp_growth),
         net_migration_rate = ifelse(net_migration_rate == "NaN", NA, net_migration_rate),
         laborforce_part_rate = ifelse(laborforce_part_rate == "NaN", NA, laborforce_part_rate),
         unemp_rate = ifelse(unemp_rate == "NaN", NA, unemp_rate),
         job_growth = ifelse(job_growth == "NaN", NA, job_growth),
         entry_rate = ifelse(entry_rate == "NaN", NA, entry_rate),
         exit_rate = ifelse(exit_rate == "NaN", NA, exit_rate),
         wage = ifelse(wage == "NaN", NA, wage),
         wage_growth = ifelse(wage_growth == "NaN", NA, wage_growth),
         income_rate = ifelse(income_rate == "NaN", NA, income_rate),
         income_growth = ifelse(income_growth == "NaN", NA, income_growth),
         highschool_attainment_rate = ifelse(highschool_attainment_rate == "NaN", NA, highschool_attainment_rate),
         education_growth = ifelse(education_growth == "NaN", NA, education_growth),
         ypll75 = ifelse(ypll75 == "NaN", NA, ypll75),
         premature_death_growth = ifelse(premature_death_growth == "NaN", NA, premature_death_growth),
         poverty_growth = ifelse(poverty_growth == "NaN", NA, poverty_growth),
         )


indicators = temp3 %>%
  select(-c(CBSA_CODE)) %>%
  colnames()

cbsa_map = df_county_shapes %>%
  left_join(y=CBSA, by="place") %>%
  mutate(CBSA_CODE = ifelse(is.na(CBSA_CODE), "RURAL", CBSA_CODE)) %>%
  filter(STATE_CODE != "72" & STATE_CODE != "15" & STATE_CODE != "02") %>%
  dplyr::group_by(CBSA_CODE) %>% 
  dplyr::summarise()

data_map <- left_join(cbsa_map, temp3, by = "CBSA_CODE") %>%
  mutate(log.employment = ifelse(log.employment == "-Inf", NA, log.employment),
         log.gdp = ifelse(log.gdp == "-Inf", NA, log.gdp))


tmap_mode("plot")


for (i in indicators) {
  mdn = median(data_map[[i]])
  
  print(data_map %>% 
  tm_shape() + 
  tm_polygons(col = i, border.alpha = 0.0, style = "cont", id = i,
              palette = c("white","#97c08d","#0f130e"), median = mdn) +
  tm_shape(state_map) +
  tm_layout(legend.title.size = 1.5, legend.position = c("right","bottom")) +
  tm_borders(lwd=1.5))
  
  }


```




# Interactive Maps
## Counties

```{r}
tmap_mode("view")

data_map <- left_join(df_county_shapes, data, by = "place") %>% filter(STATE_CODE != "02" & STATE_CODE != "15" & STATE_CODE != "72")

state_map = data_map %>%
  dplyr::group_by(STATE_CODE) %>% 
  dplyr::summarise()

indicators = data %>%
  select(-c(place, eca_cluster_category, eca_membership, max_trade_share, max_trade_place, CBSA_CODE, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, ruc_code, rural)) %>%
  colnames()

for (i in indicators) {

  mdn = median(data_map[[i]])

  print(data_map %>%
  tm_shape() +
  tm_polygons(col = i, border.alpha = 0.0, style = "cont", id = i,
              palette = c("white","#97c08d","#0f130e"), median = mdn) +
  tm_layout(legend.title.size = 2, legend.position = c("right","bottom")) +
  tm_borders(lwd=0.6))

  }


```

## ECAs

```{r}

temp1 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(eca_membership) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE), highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp3 = temp1 %>%
  left_join(y=temp2, by="eca_membership") %>%
mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  mutate(employment_growth = ifelse(employment_growth == "NaN", NA, employment_growth),
         establishments_growth = ifelse(establishments_growth == "NaN", NA, establishments_growth),
         gdp_growth = ifelse(gdp_growth == "NaN", NA, gdp_growth),
         net_migration_rate = ifelse(net_migration_rate == "NaN", NA, net_migration_rate),
         laborforce_part_rate = ifelse(laborforce_part_rate == "NaN", NA, laborforce_part_rate),
         unemp_rate = ifelse(unemp_rate == "NaN", NA, unemp_rate),
         job_growth = ifelse(job_growth == "NaN", NA, job_growth),
         entry_rate = ifelse(entry_rate == "NaN", NA, entry_rate),
         exit_rate = ifelse(exit_rate == "NaN", NA, exit_rate),
         wage = ifelse(wage == "NaN", NA, wage),
         wage_growth = ifelse(wage_growth == "NaN", NA, wage_growth),
         income_rate = ifelse(income_rate == "NaN", NA, income_rate),
         income_growth = ifelse(income_growth == "NaN", NA, income_growth),
         highschool_attainment_rate = ifelse(highschool_attainment_rate == "NaN", NA, highschool_attainment_rate),
         education_growth = ifelse(education_growth == "NaN", NA, education_growth),
         ypll75 = ifelse(ypll75 == "NaN", NA, ypll75),
         premature_death_growth = ifelse(premature_death_growth == "NaN", NA, premature_death_growth),
         poverty_growth = ifelse(poverty_growth == "NaN", NA, poverty_growth),
         )

data_map <- left_join(df_county_shapes, data, by = "place") %>% filter(STATE_CODE != "02" & STATE_CODE != "15" & STATE_CODE != "72")

state_map = data_map %>%
  dplyr::group_by(STATE_CODE) %>% 
  dplyr::summarise()

indicators = temp3 %>%
  select(-c(eca_membership)) %>%
  colnames()

tmap_mode("view")

ECA_map = data_map %>%
  dplyr::group_by(eca_membership) %>% 
  dplyr::summarise()

data_map <- left_join(ECA_map, temp3, by = "eca_membership") %>%
  mutate(log.employment = ifelse(log.employment == "-Inf", NA, log.employment),
         log.gdp = ifelse(log.gdp == "-Inf", NA, log.gdp))


for (i in indicators) {
  mdn = median(data_map[[i]])

  print(data_map %>%
  tm_shape() +
  tm_polygons(col = i, border.alpha = 0.0, style = "cont", id = i,
              palette = c("white","#97c08d","#0f130e"), midpoint = mdn) +
  tm_layout(legend.title.size = 2, legend.position = c("right","bottom")) +
  tm_borders(lwd=0.6))

  }


```

## CBSAs

```{r}

temp1 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population = sum(population, na.rm = TRUE), employment = sum(employment, na.rm = TRUE), establishments = sum(establishments, na.rm = TRUE), payroll = sum(payroll, na.rm = TRUE), gdp = sum(gdp, na.rm = TRUE), jobs = sum(jobs, na.rm = TRUE)) 
temp2 = data %>% 
  drop_na(population) %>%
  group_by(CBSA_CODE) %>%
  dplyr::summarize(population_growth = weighted.mean(x=population_growth, w=population, na.rm = TRUE), employment_growth = weighted.mean(x=employment_growth, w=population, na.rm = TRUE), establishments_growth = weighted.mean(x=establishments_growth, w=population, na.rm = TRUE), gdp_growth = weighted.mean(x=gdp_growth, w=population, na.rm = TRUE), laborforce_part_rate = weighted.mean(x=laborforce_part_rate, w=population, na.rm = TRUE), unemp_rate = weighted.mean(x=unemp_rate, w=population, na.rm = TRUE), job_growth = weighted.mean(x=job_growth, w=population, na.rm = TRUE), entry_rate = weighted.mean(x=entry_rate, w=population, na.rm = TRUE), exit_rate = weighted.mean(x=exit_rate, w=population, na.rm = TRUE), wage = weighted.mean(x=wage, w=population, na.rm = TRUE), wage_growth = weighted.mean(x=wage_growth, w=population, na.rm = TRUE), income_rate = weighted.mean(x=income_rate, w=population, na.rm = TRUE), income_growth = weighted.mean(x=income_growth, w=population, na.rm = TRUE), highschool_attainment_rate = weighted.mean(x=highschool_attainment_rate, w=population, na.rm = TRUE), education_growth = weighted.mean(x=education_growth, w=population, na.rm = TRUE), ypll75 = weighted.mean(x=ypll75, w=population, na.rm = TRUE), premature_death_growth = weighted.mean(x=premature_death_growth, w=population, na.rm = TRUE), poverty_growth = weighted.mean(x=poverty_growth, w=population, na.rm = TRUE), net_migration_rate = weighted.mean(x=net_migration_rate, w=population, na.rm = TRUE)) 

temp3 = temp1 %>%
  left_join(y=temp2, by="CBSA_CODE") %>%
 mutate(log.population = log(population), log.establishments = log(establishments), log.employment = log(employment), log.gdp = log(gdp)) %>%
  mutate(employment_growth = ifelse(employment_growth == "NaN", NA, employment_growth),
         establishments_growth = ifelse(establishments_growth == "NaN", NA, establishments_growth),
         gdp_growth = ifelse(gdp_growth == "NaN", NA, gdp_growth),
         net_migration_rate = ifelse(net_migration_rate == "NaN", NA, net_migration_rate),
         laborforce_part_rate = ifelse(laborforce_part_rate == "NaN", NA, laborforce_part_rate),
         unemp_rate = ifelse(unemp_rate == "NaN", NA, unemp_rate),
         job_growth = ifelse(job_growth == "NaN", NA, job_growth),
         entry_rate = ifelse(entry_rate == "NaN", NA, entry_rate),
         exit_rate = ifelse(exit_rate == "NaN", NA, exit_rate),
         wage = ifelse(wage == "NaN", NA, wage),
         wage_growth = ifelse(wage_growth == "NaN", NA, wage_growth),
         income_rate = ifelse(income_rate == "NaN", NA, income_rate),
         income_growth = ifelse(income_growth == "NaN", NA, income_growth),
         highschool_attainment_rate = ifelse(highschool_attainment_rate == "NaN", NA, highschool_attainment_rate),
         education_growth = ifelse(education_growth == "NaN", NA, education_growth),
         ypll75 = ifelse(ypll75 == "NaN", NA, ypll75),
         premature_death_growth = ifelse(premature_death_growth == "NaN", NA, premature_death_growth),
         poverty_growth = ifelse(poverty_growth == "NaN", NA, poverty_growth),
         )


indicators = temp3 %>%
  select(-c(CBSA_CODE)) %>%
  colnames()

cbsa_map = df_county_shapes %>%
  left_join(y=CBSA, by="place") %>%
  mutate(CBSA_CODE = ifelse(is.na(CBSA_CODE), "RURAL", CBSA_CODE)) %>%
  filter(STATE_CODE != "72" & STATE_CODE != "15" & STATE_CODE != "02") %>%
  dplyr::group_by(CBSA_CODE) %>% 
  dplyr::summarise()

data_map <- left_join(cbsa_map, temp3, by = "CBSA_CODE") %>%
  mutate(log.employment = ifelse(log.employment == "-Inf", NA, log.employment),
         log.gdp = ifelse(log.gdp == "-Inf", NA, log.gdp))

tmap_mode("view")


for (i in indicators) {
  mdn = median(data_map[[i]])

  print(data_map %>%
  tm_shape() +
  tm_polygons(col = i, border.alpha = 0.0, style = "cont", id = i,
              palette = c("white","#97c08d","#0f130e"), midpoint = mdn) +
  tm_layout(legend.title.size = 2, legend.position = c("right","bottom")) +
  tm_borders(lwd=0.6))

  }


```




# Retired Code

<!-- # Scatterplots -->
<!-- ## ECAs -->

<!-- <!-- ```{r} --> -->


<!-- scatter = eca_comp %>% -->
<!--   separate_wider_delim(eca_cluster_category, delim = " ", names = c("x", "eca_cluster_category")) %>% -->
<!--   select(-x) -->

<!-- ggplot(scatter, aes(sink_population, source_population, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("population") + xlab("population") -->
<!-- ggplot(scatter, aes(sink_establishments, source_establishments, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("establishments") + xlab("establishments") -->
<!-- ggplot(scatter, aes(sink_employment, source_employment, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("employment") + xlab("employment") -->
<!-- ggplot(scatter, aes(sink_output, source_output, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("output") + xlab("output") -->

<!-- ggplot(scatter, aes(sink_population.grow.rate, source_population.grow.rate, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("population.grow.rate") + xlab("population.grow.rate") -->
<!-- ggplot(scatter, aes(sink_establishments.grow.rate, source_establishments.grow.rate, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("establishments.grow.rate") + xlab("establishments.grow.rate") -->
<!-- ggplot(scatter, aes(sink_employment.grow.rate, source_employment.grow.rate, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("employment.grow.rate") + xlab("employment.grow.rate") -->
<!-- ggplot(scatter, aes(sink_output.grow.rate, source_output.grow.rate, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("output.grow.rate") + xlab("output.grow.rate") -->

<!-- ggplot(scatter, aes(sink_log.population, source_log.population, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.population") + xlab("log.population") -->
<!-- ggplot(scatter, aes(sink_log.establishments, source_log.establishments, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.establishments") + xlab("log.establishments") -->
<!-- ggplot(scatter, aes(sink_log.employment, source_log.employment, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.employment") + xlab("log.employment") -->
<!-- ggplot(scatter, aes(sink_log.output, source_log.output, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.output") + xlab("log.output") -->

<!-- ggplot(scatter, aes(sink_bachelors, source_bachelors, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("bachelors") + xlab("bachelors") -->

<!-- ggplot(scatter, aes(sink_lfpr, source_lfpr, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("lfpr") + xlab("lfpr") -->

<!-- ggplot(scatter, aes(sink_poverty, source_poverty, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("poverty") + xlab("poverty") -->

<!-- ggplot(scatter, aes(sink_premature.death, source_premature.death, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("premature.death") + xlab("premature.death") -->

<!-- ggplot(scatter, aes(sink_net.migration, source_net.migration, colour =factor(eca_cluster_category))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("net.migration") + xlab("net.migration") -->




<!-- ``` -->

<!-- ## CBSAs -->

<!-- ```{r} -->

<!-- scatter_cbsa = cbsa_comp %>% -->
<!--   drop_na(central_outlying) -->

<!-- ggplot(scatter_cbsa, aes(central_population, population, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("population") + xlab("population") -->
<!-- ggplot(scatter_cbsa, aes(central_establishments, establishments, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("establishments") + xlab("establishments") -->
<!-- ggplot(scatter_cbsa, aes(central_employment, employment, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("employment") + xlab("employment") -->
<!-- ggplot(scatter_cbsa, aes(central_output, output, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("output") + xlab("output") -->

<!-- ggplot(scatter_cbsa, aes(central_population.grow.rate, population.grow.rate, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("population.grow.rate") + xlab("population.grow.rate") -->
<!-- ggplot(scatter_cbsa, aes(central_establishments.grow.rate, establishments.grow.rate, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("establishments.grow.rate") + xlab("establishments.grow.rate") -->
<!-- ggplot(scatter_cbsa, aes(central_employment.grow.rate, employment.grow.rate, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("employment.grow.rate") + xlab("employment.grow.rate") -->
<!-- ggplot(scatter_cbsa, aes(central_output.grow.rate, output.grow.rate, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("output.grow.rate") + xlab("output.grow.rate") -->

<!-- ggplot(scatter_cbsa, aes(central_log.population, log.population, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.population") + xlab("log.population") -->
<!-- ggplot(scatter_cbsa, aes(central_log.establishments, log.establishments, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.establishments") + xlab("log.establishments") -->
<!-- ggplot(scatter_cbsa, aes(central_log.employment, log.employment, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.employment") + xlab("log.employment") -->
<!-- ggplot(scatter_cbsa, aes(central_log.output, log.output, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("log.output") + xlab("log.output") -->

<!-- ggplot(scatter_cbsa, aes(central_bachelors, bachelors, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("bachelors") + xlab("bachelors") -->

<!-- ggplot(scatter_cbsa, aes(central_lfpr, lfpr, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("lfpr") + xlab("lfpr") -->

<!-- ggplot(scatter_cbsa, aes(central_poverty, poverty, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("poverty") + xlab("poverty") -->

<!-- ggplot(scatter_cbsa, aes(central_premature.death, premature.death, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("premature.death") + xlab("premature.death") -->

<!-- ggplot(scatter_cbsa, aes(central_net.migration, net.migration, colour =factor(central_outlying))) + geom_point() + geom_smooth() + theme_pander() + scale_color_pander() + theme(legend.position = "top") + ggtitle("net.migration") + xlab("net.migration") -->




<!-- ``` -->


