---
title: "Paper outputs"
format: html
params:
  year: 2012
  year_range: !expr c(2012, 2017) # or c(2012, 2015, 2017) or c(2010:2020)
  reg_factors: !expr c("entry_rate", "exit_rate", "establishments_gr", "wage", "wage_gr", "jobs_gr", "payroll_gr", "unemp_rate", "laborforce_part_rate", "employment_gr", "poverty_rate", "income_rate", "poverty_rate_gr", "income_rate_gr", "population_gr",  "ypll75", "highschool_attainment_rate", "net_migration_rate") 
  reg_factor_funs: !expr c("call_establishments", "call_wage", "call_jobs", "call_payroll", "call_employment", "call_poverty_rate", "call_income_rate", "call_population", "call_gdp")
---

This notebook generates outputs directly used in the paper.

```{r}
library(logger)
library(tidyverse)
library(sandwich)
library(modelsummary)
library(tmap)

library(moments)
library(PerformanceAnalytics)
library(correlation)

library(estimatr)
library(margins)

library(rstatix)
library(ggthemes)
library(ggridges)
library(viridis)
library(tmap)
library(gt)
library(webshot2)


source("projects/eca_paa/dataprep.R", local = (dp <- new.env()))
source("R/trade_flows.R", local = (trade_flows <- new.env()))
source("R/geography.R", local = (geo <- new.env()))

call_geo <- function() {
  df <- geo$call_geog(2013) |>
    rename_with(str_to_lower)
  d <- geo$pubdata$get_state_df(FALSE) |>
    rename_with(str_to_lower) |>
    select(code, contiguous, bea_region_name) |>
    rename(state_code = code)
  df <- left_join(df, d, "state_code")
  df
}

# initialize params from notebook header
params
```


# CBSA 2020 counts

In the introduction of the paper.

```{r}
source("R/geography.R", local = (geo <- new.env()))

d1 <- geo$pubdata$get_county_df(2020, FALSE, "20m") |>
  rename_with(str_to_lower) |>
  rename(stcty = code) |>
  select(stcty)

d2 <- geo$pubdata$get_cbsa_delin_df(2020)  |>
  rename_with(str_to_lower) |>
  mutate(stcty = paste0(state_code, county_code)) |>
  select(stcty, cbsa_code, metro_micro, central_outlying)

stopifnot(all(d2$stcty %in% d1$stcty))
d3 <- full_join(d1, d2, "stcty")

d4 <- d3 |>
  group_by(metro_micro, cbsa_code) |>
  summarize(size = n(), .groups = "drop")

# number of counties
d3 |>
  count(metro_micro) |>
  mutate(pct = round(100 * n / sum(.data[["n"]]), 1))

# number of CBSAs
d4 |> count(metro_micro)

# number of single-county micros
d4 |>
  filter(metro_micro == "micro") |>
  count(size)

```

## 2013

```{r}
geo$pubdata$get_cbsa_delin_df(2013)  |>
  rename_with(str_to_lower) |>
  distinct(cbsa_code) |>
  nrow()
```


# dairy and cheese table

```{r}
source("R/place_output.R", local = (place_output <- new.env()))

d1 <- place_output$call_output(2012, "commodity", "det", "infogroup")
d2 <- place_output$call_intermediate(2012, "supply", "domestic", "commodity", "det", "infogroup")
d3 <- place_output$call_intermediate(2012, "demand", "domestic", "commodity", "det", "infogroup")
d4 <- inner_join(d1, d2, join_by(indcode, place)) |>
  inner_join(d3, join_by(indcode, place))

# two counties, two industries
d4 |>
  filter(place %in% c("55117", "55081"), indcode %in% c("112120", "311513")) |>
  mutate(across(where(is.double), \(x) round(x / 1000, 1)))

x <- dp$call_space_df(2012)
x |> filter(place == "55117")
```

# Hennepin

## ECA vs CBSA

```{r}


df <- dp$call_proj_df(params$year) %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  mutate(income_rate = income_rate/1000) %>%
  mutate(payroll = payroll*1000) %>%
  mutate(gdp = gdp*1000)


x <- dp$temporal_permutations(params$year_range)
tmp <- df$place %>% as.data.frame() %>% `colnames<-`(c("place")) 
for (y in 1:nrow(x)){
  paste(x[y,1], x[y,2]) %>% print()
  for (i in params$reg_factor_funs){
     tmp <- dp$growth_rate(x[y,1], x[y,2], dp[[i]]) %>% 
       mutate(grow_rate = replace(grow_rate, which(abs(grow_rate) == 200), NA)) %>% 
       rename_at('grow_rate', ~paste0(substring(i, 6), "_gr")) %>% 
       left_join(tmp, ., by = "place")
  }
}

df <- left_join(df, tmp, by = "place")

data <- df %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  select(place, NAME, STATE_CODE, COUNTY_CODE, COUNTY, STATE_NAME, STATE, CBSA_CODE, cbsa_members_count, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, cbsa_rural_category, ruc_code, geometry, center, eca_cluster_category, eca_central_out_xtab, eca_cbsa_xtab, sink_filter, cbsa_by_eca, metro_micro_sink, eca_membership, cbsa_of_eca, population, employment, jobs, laborforce_part_rate, unemp_rate, payroll, wage, income_rate, establishments, entry_rate, exit_rate, gdp, poverty_rate, highschool_attainment_rate, ypll75, net_migration_rate, establishments_gr, wage_gr, jobs_gr, payroll_gr, employment_gr, poverty_rate_gr, income_rate_gr, population_gr)



ECA_n = "27053"
cbsa_n = data %>% filter(eca_membership == ECA_n & eca_cluster_category == "Cluster Sink") %>% select(CBSA_CODE)
cbsa_n = cbsa_n$CBSA_CODE
st_n = substr(ECA_n,1,2)

data_map <- data

comp_map = data_map %>% 
  filter(STATE_CODE != "02" & STATE_CODE != "72" & STATE_CODE != "15" )  %>%
#  filter(STATE_CODE == st_n) %>%
  filter(STATE_CODE == "27" | STATE_CODE == "55") %>%
  mutate(
    comp = ifelse(
      (place == ECA_n & CBSA_CODE == cbsa_n & eca_central_out_xtab == "Central Sink"), "ECA dest, own CBSA center",
      ifelse(
        (CENTRAL_OUTLYING != "rural" & CBSA_CODE != cbsa_n & eca_membership == ECA_n), "ECA source, other CBSA", 
        ifelse(
          (eca_membership != ECA_n & CBSA_CODE == cbsa_n), "other ECA, same CBSA",
          ifelse(
            (eca_cbsa_xtab == "Rural Source" & eca_membership == ECA_n), "ECA source, non-CBSA", 
            ifelse(
              (eca_cbsa_xtab == "Nonrural Source" & CBSA_CODE == cbsa_n & eca_membership == ECA_n), "ECA source, same CBSA",
              if_else(eca_membership == ECA_n, "here", "other ECA"))))))) %>%
  mutate(comp = ordered(comp, c(
    "ECA dest, own CBSA center", 
    "ECA source, non-CBSA", 
    "ECA source, same CBSA", 
    "ECA source, other CBSA", 
    "other ECA, same CBSA", 
    "other ECA")))



# comp_map |> filter(eca_membership == ECA_n) |> View()
MyPalette <- c("#97c08d", "#3d85c6", "#f5cba3", "#f5f2a3", "grey89", "white")

tmap_mode("plot")

comp_map %>%
  tm_shape() + 
  tm_polygons(col = "comp", title = "CBSA Statuses
Hennepin County ECA", border.alpha = 0.4, style = "cat", palette = MyPalette) +
  tm_layout(legend.title.size = 1.0, legend.position = c("RIGHT","TOP"),
            title = "", frame = FALSE)

```


## step 1

exports from rural source county

```{r}


focus_county <- "55005"
industry_code <- "all_industries"

if (industry_code == "all_industries" || grepl("^[[:alnum:]]+$", industry_code)) { # single code or all
  x <- trade_flows$call_trade_flows(industry_code)
} else if (grepl(",", industry_code)) { # comma-separated list of codes
  x <- 0
  for (ind_code in str_split_1(industry_code, ",")) {
    x <- x + trade_flows$call_trade_flows(ind_code)
  }
} else { # regex
  all_codes <- trade_flows$call_industry_codes()
  x <- 0
  for (ind_code in grep(industry_code, all_codes, value = TRUE)) {
    x <- x + trade_flows$call_trade_flows(ind_code)
  }
}
d <- data.frame(
  place = rownames(x),
  exports = x[focus_county, ],
  imports = x[, focus_county]
) |>
  mutate(exports = na_if(exports, 0), imports = na_if(imports, 0))
df <- call_geo() %>%
  left_join(d, "place") %>%
  mutate(tooltip = glue("{name} {place} | imp {imports} | exp {exports}")) |>
  mutate(exports = if_else(exports < 1000, NA, exports))

tmap_mode("plot")
tm_shape(filter(df, contiguous, state %in% c("WI", "MN"))) +
  tm_polygons("exports", border.alpha = 0.4, colorNA = "white", palette = c("white", "#97c08d")) +
  tm_shape(filter(df, place == focus_county)) +
  tm_fill("#3d85c6") +
  tm_layout(title = "", frame = FALSE)


```


## step 2

source and destination

```{r}
d <- comp_map %>%
  mutate(comp1 = if_else(place %in% c("55005", "27053"), comp, NA))

d %>%
  tm_shape() + 
  tm_polygons(col = "comp1", border.alpha = 0.4, style = "cat", palette = MyPalette, colorNA = "white") +
  tm_layout(legend.show = FALSE, title = "", frame = FALSE)
```


## step 3

all sources

```{r}
pal <- MyPalette # c("#97c08d", "#3d85c6", "#f5cba3", "#f5f2a3", "grey89", "white")
pal[3:4] <- pal[2]
pal[5] <- "white"

comp_map %>%
  tm_shape() + 
  tm_polygons(col = "comp", border.alpha = 0.4, style = "cat", palette = pal, colorNA = "white") +
  tm_layout(legend.show = FALSE, title = "", frame = FALSE)
```



# ??

```{r}
dest_fips <- "27053"

# distance
d1 <- dp$call_dist_mat(2012)[, dest_fips] |>
  set_units(mi) |>
  as_tibble(rownames = "place") |>
  mutate(distance = drop_units(value), .keep = "unused")

d2 <- dp$call_eca_df() |>
  filter(eca_membership == dest_fips) |>
  rename(place = fips) |>
  left_join(dp$call_population(2012), "place") |>
  left_join(d1, "place") |>
  left_join(dp$call_cbsa(2013), "place")



d2 |>
  group_by(eca_cluster_category) |>
  summarize(
    n = n(),
    pop_sum = sum(population),
    pop_avg = mean(population),
    dist_avg = mean(distance),
    trade_avg = mean(max_trade_share) * 100
  )


d2 |> count(eca_cluster_category, CENTRAL_OUTLYING)
  
```


## max trade share distribution

```{r}
d <- dp$call_eca_df()

ggplot(d, aes(max_trade_share)) +
  geom_histogram(binwidth = 0.025)
```



```{r}


data |>
  rename_with(str_to_lower) |>
  mutate(cbsa = if_else(
    metro_micro == "metro" & central_outlying == "central", 
    "metro central", if_else(
      metro_micro == "metro" & central_outlying == "outlying",
      "metro outlying", "other")
    ))

data |>
  rename_with(str_to_lower) |>
  mutate(metro_micro = replace_na(metro_micro, "non-core"),
         central_outlying = replace_na(central_outlying, "non-core")) |>
  count(metro_micro, central_outlying, eca_cluster_category) |>
  pivot_wider(id_cols = c(metro_micro, central_outlying), values_from = "n", names_from = "eca_cluster_category") |>
  View()

```




# dairy and cheese supply demand


```{r}
source("R/place_output.R", local = (place_output <- new.env()))
source("R/visualization.R", local = (visual <- new.env()))

industry_code <- "^112120"

ihs_trans <- function(){trans_new("ihs", function(x){asinh(x)}, function(x){sinh(x)} )}
  
  key = list(
    year = 2012,
    ilevel = "det", # c("det", "sum", "sec")
    class_system = "commodity", # c("industry", "commodity")
    paradigm = "domestic", # c("factor", "domestic", "capital")
    bus_data = "infogroup", # c("cbp_imp", "cbp_raw", "infogroup")
    verbose = FALSE,
    cluster_level = "det", # c("sec", "sum", "det")
    cbsa = FALSE,
    cluster_subset = industry_code, # NULL
    trim = "^(60|66|69|78)|(999)$", 
    spatial = TRUE)
  
  df <- place_output$call_extraction_table(
    year = key$year,
    ilevel = key$ilevel,
    class_system = key$class_system,
    paradigm = key$paradigm,
    bus_data = key$bus_data,
    verbose = key$verbose,
    cluster_level = key$cluster_level,
    cbsa = key$cbsa,
    cluster_subset = key$cluster_subset,
    trim = key$trim,
    spatial = key$spatial)
  
  
key = list(
    spatial_dataframe = df,
    fill_variable = "extract", # column from spatial_dataframe
    year = 2012,
    cluster_subset = industry_code, # NULL
    cluster_level = "det", # c("sec", "sum", "det")
    scale_style = "inverse_hyperbolic_sine", # c("inverse_hyperbolic_sine", "full_spectrum_midpoint", "constant_spread_midpoint", "constant_spread_spectrum")
    interactive = TRUE)
  
  visual$flow_potential_map(
    spatial_dataframe = key$spatial_dataframe,
    fill_variable = key$fill_variable,
    year = key$year,
    cluster_subset = key$cluster_subset,
    cluster_level = key$cluster_level,
    scale_style = key$scale_style,
    interactive = key$interactive)
```


# trade flows


```{r}
source("R/trade_flows.R", local = (trade_flows <- new.env()))

focus_county <- params$map_tradeflow_county
focus_county <- "55081"
industry_code <- params$map_tradeflow_ind
industry_code <- "112120"
# industry_code <- "1111A0,1111B0"
# industry_code <- "^112.*$"

if (industry_code == "all_industries" || grepl("^[[:alnum:]]+$", industry_code)) { # single code or all
  x <- trade_flows$call_trade_flows(industry_code)
} else if (grepl(",", industry_code)) { # comma-separated list of codes
  x <- 0
  for (ind_code in str_split_1(industry_code, ",")) {
    x <- x + trade_flows$call_trade_flows(ind_code)
  }
} else { # regex
  all_codes <- trade_flows$call_industry_codes()
  x <- 0
  for (ind_code in grep(industry_code, all_codes, value = TRUE)) {
    x <- x + trade_flows$call_trade_flows(ind_code)
  }
}
d <- data.frame(
  place = rownames(x),
  exports = x[focus_county, ],
  imports = x[, focus_county]
) |>
  mutate(exports = na_if(exports, 0), imports = na_if(imports, 0))
df <- call_geo() %>%
  left_join(d, "place") %>%
  mutate(tooltip = glue("{name} {place} | imp {imports} | exp {exports}")) |>
  mutate(exports = if_else(exports < 1000, NA, exports))

p1 <- tm_shape(filter(df, contiguous)) + tm_fill("imports", id = "tooltip") +
  tm_shape(filter(df, place == focus_county)) + tm_fill("blue", id = "tooltip") +
  tm_shape(filter(geo$pubdata$get_state_df(TRUE), CONTIGUOUS)) + tm_borders() +
  tm_layout(main.title = glue("Imports of \"{industry_code}\" to {focus_county}"))
print(p1)

p2 <- tm_shape(filter(df, contiguous)) + tm_fill("exports", id = "tooltip") +
  tm_shape(filter(df, place == focus_county)) + tm_fill("blue", id = "tooltip") +
  tm_shape(filter(geo$pubdata$get_state_df(TRUE), CONTIGUOUS)) + tm_borders() +
  tm_layout(main.title = glue("Exports of \"{industry_code}\" from {focus_county}"))

tmap_mode("view")
print(p2)
```


# summary tables

data assembly


```{r}

df <- dp$call_proj_df(params$year) %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  mutate(income_rate = income_rate/1000) %>%
  mutate(payroll = payroll*1000) %>%
  mutate(gdp = gdp*1000)

x <- dp$temporal_permutations(params$year_range)
tmp <- df$place %>% as.data.frame() %>% `colnames<-`(c("place")) 
for (y in 1:nrow(x)){
  paste(x[y,1], x[y,2]) %>% print()
  for (i in params$reg_factor_funs){
     tmp <- dp$growth_rate(x[y,1], x[y,2], dp[[i]]) %>% 
       mutate(grow_rate = replace(grow_rate, which(abs(grow_rate) == 200), NA)) %>% 
       rename_at('grow_rate', ~paste0(substring(i, 6), "_gr")) %>% 
       left_join(tmp, ., by = "place")
  }
}
df <- left_join(df, tmp, by = "place")

data <- df %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  select(place, NAME, STATE_CODE, COUNTY_CODE, COUNTY, STATE_NAME, STATE, CBSA_CODE, cbsa_members_count, CBSA_TITLE, METRO_MICRO, CENTRAL_OUTLYING, cbsa_rural_category, ruc_code, geometry, center, eca_cluster_category, eca_central_out_xtab, eca_cbsa_xtab, sink_filter, cbsa_by_eca, metro_micro_sink, eca_membership, cbsa_of_eca, population, employment, jobs, laborforce_part_rate, unemp_rate, payroll, wage, income_rate, establishments, entry_rate, exit_rate, gdp, poverty_rate, highschool_attainment_rate, ypll75, net_migration_rate, establishments_gr, wage_gr, jobs_gr, payroll_gr, employment_gr, poverty_rate_gr, income_rate_gr, population_gr, gdp_gr)

# reading indicators into ECA
df1 = data %>% 
  st_drop_geometry() %>% 
  select(place, where(is.numeric)) %>%
  select(-cbsa_members_count)
```


### Table 1

```{r}

t1 = df1 %>% 
  select(-gdp_gr) %>%
  relocate(place, population, population_gr, employment, employment_gr, laborforce_part_rate, unemp_rate, jobs, jobs_gr, establishments, establishments_gr, payroll, payroll_gr, wage, wage_gr, income_rate, income_rate_gr, entry_rate, exit_rate, gdp, poverty_rate, poverty_rate_gr, ypll75, highschool_attainment_rate, net_migration_rate) %>%
  get_summary_stats(, type = "full", show = c("n", "mean", "sd", "min", "q1", "median", "q3", "max")) %>%
  filter(variable != "max_trade_share" & variable != "rural") %>%
  column_to_rownames(var = "variable") |>
  gt::gt(table1, rownames_to_stub = TRUE) |>
  tab_header(
    title = md("**Table 1.** Summary statistics of outcome variables"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(sep_mark = ",", drop_trailing_zeros = TRUE) %>%
  fmt_number(rows = c("payroll", "gdp"), sep_mark = ",", suffixing = c(NA, "M", NA, NA), drop_trailing_zeros = TRUE) 

print(t1)
# t1 %>%
  # gtsave(filename = "projects/eca_paa/tables/t1.html", inline_css = TRUE)

```


### Table 2

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("all_source"="source", "all_destination"="destination")


temp_metro = temp %>%
  filter(METRO_MICRO == "metro") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("metro_source"="source", "metro_destination"="destination")

temp_micro = temp %>%
  filter(METRO_MICRO == "micro") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("micro_source"="source", "micro_destination"="destination")

temp_rural = temp %>%
  filter(METRO_MICRO == "rural") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("rural_source"="source", "rural_destination"="destination")

temp_final = temp_all %>%
  left_join(y = temp_metro, by = c("var", "measure")) %>%
  left_join(y = temp_micro, by = c("var", "measure")) %>%
  left_join(y = temp_rural, by = c("var", "measure")) %>% 
  filter(measure != "pct") %>%
  select(-measure)

temp_pct = temp_all %>%
  left_join(y = temp_metro, by = c("var", "measure")) %>%
  left_join(y = temp_micro, by = c("var", "measure")) %>%
  left_join(y = temp_rural, by = c("var", "measure")) %>% 
  filter(measure == "count") %>%
  mutate(all = all_destination + all_source, metro_destination = 100 * metro_destination / all,
         micro_destination = 100 * micro_destination / all,
         rural_destination = 100 * rural_destination / all,
         metro_source = 100 * metro_source / all,
         micro_source = 100 * micro_source / all,
         rural_source = 100 * rural_source / all,
         all_destination = 100 * all_destination / all,
         all_source = 100 * all_source / all,
         across(var, str_replace, ', count', ', pct')
         ) %>%
  select(-all, -measure)
  
x <- c("counties, count", "counties, pct", 
           "population, count", "population, mean", "population, pct",
           "employment, count", "employment, mean", "employment, pct",
           "establishments, count", "establishments, mean", "establishments, pct",
           "jobs, count", "jobs, mean", "jobs, pct",
           "payroll, count", "payroll, mean", "payroll, pct",
           "gdp, count", "gdp, mean", "gdp, pct")

t2 = rbind(temp_final, temp_pct) %>%
  slice(match(x, var)) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 2.** Aggregate and average size of outcome variables by CBSA type"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE) %>%
  fmt_number(rows = c("gdp, count", "gdp, mean", "payroll, count", "payroll, mean"), decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE, suffixing = c(NA, "M", NA, NA))

print(t2)
# t2 %>%
#   gtsave(filename = "projects/eca_paa/tables/t2.html", inline_css = TRUE)

```


### Table 2A

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("all_source"="source", "all_destination"="destination")


temp_metro.central = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("metro.central_source"="source", "metro.central_destination"="destination")

temp_metro.outlying = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("metro.outlying_source"="source", "metro.outlying_destination"="destination")


temp_micro.central = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("micro.central_source"="source", "micro.central_destination"="destination")

temp_micro.outlying = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(counties_count = length(unique(place)), population_count = sum(population, na.rm = TRUE), employment_count = sum(employment, na.rm = TRUE), jobs_count = sum(jobs, na.rm = TRUE), establishments_count = sum(establishments, na.rm = TRUE), payroll_count = sum(payroll, na.rm = TRUE), gdp_count = sum(gdp, na.rm = TRUE), population_mean = mean(population, na.rm = TRUE), employment_mean = mean(employment, na.rm = TRUE), jobs_mean = mean(jobs, na.rm = TRUE), establishments_mean = mean(establishments, na.rm = TRUE), payroll_mean = mean(payroll, na.rm = TRUE), gdp_mean = mean(gdp, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(counties_pct = 100 * counties_count / sum(counties_count, na.rm = TRUE),
         population_pct = 100 * population_count / sum(population_count, na.rm = TRUE),
         employment_pct = 100 * employment_count / sum(employment_count, na.rm = TRUE),
         jobs_pct = 100 * jobs_count / sum(jobs_count, na.rm = TRUE),
         establishments_pct = 100 * establishments_count / sum(establishments_count, na.rm = TRUE),
         payroll_pct = 100 * payroll_count / sum(payroll_count, na.rm = TRUE),
         gdp_pct = 100 * gdp_count / sum(gdp_count, na.rm = TRUE),
         eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  mutate(var = str_c(var, ", ", measure)) %>%
  rename("micro.outlying_source"="source", "micro.outlying_destination"="destination")

temp_final = temp_all %>%
  left_join(y = temp_metro.central, by = c("var", "measure")) %>%
  left_join(y = temp_metro.outlying, by = c("var", "measure")) %>%
  left_join(y = temp_micro.central, by = c("var", "measure")) %>%
  left_join(y = temp_micro.outlying, by = c("var", "measure")) %>%
  filter(measure != "pct") %>%
  select(-measure)

temp_pct = temp_all %>%
  left_join(y = temp_metro.central, by = c("var", "measure")) %>%
  left_join(y = temp_metro.outlying, by = c("var", "measure")) %>%
  left_join(y = temp_micro.central, by = c("var", "measure")) %>%
  left_join(y = temp_micro.outlying, by = c("var", "measure")) %>%
  filter(measure == "count") %>%
  mutate(all = all_destination + all_source, metro.central_destination = 100 * metro.central_destination / all,
         micro.central_destination = 100 * micro.central_destination / all,
         metro.outlying_destination = 100 * metro.outlying_destination / all,
         micro.outlying_destination = 100 * micro.outlying_destination / all,
         metro.central_source = 100 * metro.central_source / all,
         micro.central_source = 100 * micro.central_source / all,
         metro.outlying_source = 100 * metro.outlying_source / all,
         micro.outlying_source = 100 * micro.outlying_source / all,
         all_destination = 100 * all_destination / all,
         all_source = 100 * all_source / all,
         across(var, str_replace, ', count', ', pct')
         ) %>%
  select(-all, -measure)
  
x <- c("counties, count", "counties, pct", 
           "population, count", "population, mean", "population, pct",
           "employment, count", "employment, mean", "employment, pct",
           "establishments, count", "establishments, mean", "establishments, pct",
           "jobs, count", "jobs, mean", "jobs, pct",
           "payroll, count", "payroll, mean", "payroll, pct",
           "gdp, count", "gdp, mean", "gdp, pct")

t2a = rbind(temp_final, temp_pct) %>%
  slice(match(x, var)) %>%
  select(-all_destination, -all_source) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 2A.** Aggregate and average size of outcome variables by CBSA county centrality"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE) %>%
  fmt_number(rows = c("gdp, count", "gdp, mean", "payroll, count", "payroll, mean"), decimals = 1, sep_mark = ",", drop_trailing_zeros = TRUE, suffixing = c(NA, "M", NA, NA))


print(t2a)
# t2a %>%
#   gtsave(filename = "projects/eca_paa/tables/t2a.html", inline_css = TRUE)

```


### Table 3

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("all_source"="source", "all_destination"="destination") %>%
  drop_na()


temp_metro = temp %>%
  filter(METRO_MICRO == "metro") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("metro_source"="source", "metro_destination"="destination") %>%
  drop_na()

temp_micro = temp %>%
  filter(METRO_MICRO == "micro") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("micro_source"="source", "micro_destination"="destination") %>%
  drop_na()

temp_rural = temp %>%
  filter(METRO_MICRO == "rural") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("rural_source"="source", "rural_destination"="destination") %>%
  drop_na()

x <- c("population.gr", "employment.gr", "laborforce.part.rate", "unemp.rate", "jobs.gr", "establishments.gr", "entry.rate", "exit.rate", "payroll.gr", "wage", "wage.gr", "income.rate", "income.rate.gr", "poverty.rate", "poverty.rate.gr", "ypll75", "highschool.attainment.rate", "net.migration.rate")


t3 = temp_all %>%
  left_join(y = temp_metro, by = c("var", "measure")) %>%
  left_join(y = temp_micro, by = c("var", "measure")) %>%
  left_join(y = temp_rural, by = c("var", "measure")) %>% 
  select(-measure) %>%
  slice(match(x, var)) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 3.** Mean measures of county growth by CBSA type"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",")


print(t3)
# t3 %>%
#   gtsave(filename = "projects/eca_paa/tables/t3.html", inline_css = TRUE)

```


### Table 3A

```{r}

temp = data %>%
  st_drop_geometry()


temp_all = temp %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("all_source"="source", "all_destination"="destination") %>%
  drop_na()


temp_metro.central = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("metro.central_source"="source", "metro.central_destination"="destination") %>%
  drop_na()

temp_metro.outlying = temp %>%
  filter(METRO_MICRO == "metro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("metro.outlying_source"="source", "metro.outlying_destination"="destination") %>%
  drop_na()


temp_micro.central = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "central") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("micro.central_source"="source", "micro.central_destination"="destination") %>%
  drop_na()

temp_micro.outlying = temp %>%
  filter(METRO_MICRO == "micro" & CENTRAL_OUTLYING == "outlying") %>%
  group_by(eca_cluster_category) %>%
  summarize(population.gr_mean = mean(population_gr, na.rm = TRUE), employment.gr_mean = mean(employment_gr, na.rm = TRUE), jobs.gr_mean = mean(jobs_gr, na.rm = TRUE), establishments.gr_mean = mean(establishments_gr, na.rm = TRUE), payroll.gr_mean = mean(payroll_gr, na.rm = TRUE), laborforce.part.rate_mean = mean(laborforce_part_rate, na.rm = TRUE), unemp.rate_mean = mean(unemp_rate, na.rm = TRUE), entry.rate_mean = mean(entry_rate, na.rm = TRUE), exit.rate_mean = mean(exit_rate, na.rm = TRUE), wage_mean = mean(wage, na.rm = TRUE), wage.gr_mean = mean(wage_gr, na.rm = TRUE), income.rate.gr_mean = mean(income_rate_gr, na.rm = TRUE), poverty.rate_mean = mean(poverty_rate, na.rm = TRUE), income.rate_mean = mean(income_rate, na.rm = TRUE), ypll75_mean = mean(ypll75, na.rm = TRUE), highschool.attainment.rate_mean = mean(highschool_attainment_rate, na.rm = TRUE), net.migration.rate_mean = mean(net_migration_rate, na.rm = TRUE), poverty.rate.gr_mean = mean(poverty_rate_gr, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Sink", "destination", "source")) %>%
  pivot_longer(cols = !eca_cluster_category,
    names_to = c("var", "measure"), names_sep = "_") %>%
  pivot_wider(names_from = eca_cluster_category, values_from = value) %>%
  rename("micro.outlying_source"="source", "micro.outlying_destination"="destination") %>%
  drop_na()

x <- c("population.gr", "employment.gr", "laborforce.part.rate", "unemp.rate", "jobs.gr", "establishments.gr", "entry.rate", "exit.rate", "payroll.gr", "wage", "wage.gr", "income.rate", "income.rate.gr", "poverty.rate", "poverty.rate.gr", "ypll75", "highschool.attainment.rate", "net.migration.rate")


t3a = temp_all %>%
  left_join(y = temp_metro.central, by = c("var", "measure")) %>%
  left_join(y = temp_metro.outlying, by = c("var", "measure")) %>%
  left_join(y = temp_micro.central, by = c("var", "measure")) %>%
  left_join(y = temp_micro.outlying, by = c("var", "measure")) %>%
  select(-measure) %>%
  select(-all_destination, -all_source) %>%
  slice(match(x, var)) %>%
  gt(data, rowname_col = "var") %>%
  tab_spanner_delim(delim = "_") %>%
  tab_header(
    title = md("**Table 3A. Mean measures of county growth by CBSA centrality**"),
    subtitle = md("")
  ) |>
  tab_options(
    heading.title.font.size = "medium",
    heading.subtitle.font.size = "medium",
    table.font.size = "small",
    table.width = pct(50),
    column_labels.font.weight = "bold"
  ) %>%
  fmt_number(decimals = 1, sep_mark = ",")

print(t3a)
# t3a %>%
#   gtsave(filename = "projects/eca_paa/tables/t3a.html", inline_css = TRUE)

```



# regressions


## dataframe

```{r}

params

df <- dp$call_proj_df(params$year) %>% 
  mutate(eca_center_distance = dp$meters2miles(eca_center_distance)/100) %>% 
  mutate(wage = wage/1000) %>% 
  mutate(income_rate = income_rate/1000) %>% 
  mutate(ypll75 = ypll75/100000) %>% 
  mutate(eca_cluster_category = ifelse(eca_cluster_category == "Cluster Source", "Source", "Destination"))
  
df$metro_micro_destination <- df$metro_micro_sink
  df$metro_micro_destination[df$metro_micro_destination == "Sink and Metro "] <-  "Destination and Metro"
    df$metro_micro_destination[df$metro_micro_destination == "Sink and Micro"] <-  "Destination and Micro"
      df$metro_micro_destination[df$metro_micro_destination == "Sink only"] <-  "Destination Only"
      
x <- dp$temporal_permutations(params$year_range)
tmp <- df$place %>% as.data.frame() %>% `colnames<-`(c("place")) 
for (y in 1:nrow(x)){
  paste(x[y,1], x[y,2]) %>% print()
  for (i in params$reg_factor_funs){
     tmp <- dp$growth_rate(x[y,1], x[y,2], dp[[i]]) %>% 
       mutate(grow_rate = replace(grow_rate, which(abs(grow_rate) == 200), NA)) %>% 
       rename_at('grow_rate', ~paste0(substring(i, 6), "_gr")) %>% 
       left_join(tmp, ., by = "place")
  }
}
df <- left_join(df, tmp, by = "place")


for (i in params$reg_factors ){
  if (!paste0("sink_value_", i) %in% names(df)){
    df <- df[df$place == df$eca_membership , c("place", i)] %>% 
      st_drop_geometry() %>% 
      `colnames<-`(c("eca_membership", paste0("sink_value_", i))) %>% 
      {left_join(df, ., by = "eca_membership")}
  }
}
```



## univariate

source_outcome ~ destination_outcome

```{r}
 

coef_names <- c(
  "Entry Rate",
  "Exit Rate", 
  "Establishment Growth",
  "Wage", 
  "Wage Growth", 
  "Job Growth", 
  "Payroll Growth", 
  "Unemployment Rate", 
  "Laborforce Rate", 
  "Employment Growth", 
  "Poverty Rate", 
  "Income Rate", 
  "Poverty Growth", 
  "Income Growth", 
  "Population Growth", 
  "YPLL75", 
  "Highschool Graduation Rate", 
  "Net Migration Rate")


specif <- list()
df_mod <- list()
mvc <- list()
for (i in params$reg_factors){
  x1 <- paste0("sink_value_", i)
  clust <- "eca_membership"
  df_reg <- df[df$cbsa_rural_category == "rural" & df$eca_cluster_category != "Cluster Sink", ] %>% 
    st_drop_geometry()
  df_mod[[i]] <- df_reg %>% 
    select(i, x1, clust) %>% 
    na.omit() %>% 
    rename(destination_value = x1) 
  fm <- as.formula(paste(i, "~", "destination_value"))
  specif[[i]] <- lm(fm, data = df_mod[[i]])
  mvc[[i]] <- vcovCL(x = specif[[i]], type = "HC2", cluster = df_mod[[i]][["eca_membership"]])
}

ssf <- 1:7
specif[ssf] %>% 
  `names<-`(coef_names[ssf]) %>%  
  {msummary(., 
            vcov = mvc[ssf], 
            estimate = "{estimate}{stars}", 
            coef_map = c("(Intercept)" = "(Intercept)",
                         "destination_value" = "Destination Value"),
            output = "tmp/reg_table1.docx")}
ssf <- 8:14
specif[ssf] %>% 
  `names<-`(coef_names[ssf]) %>%  
  {msummary(., 
            vcov = mvc[ssf], 
            estimate = "{estimate}{stars}", 
            coef_map = c("(Intercept)" = "(Intercept)",
                         "destination_value" = "Destination Value"),
            output = "tmp/reg_table2.docx")}

ssf <- 15:18
specif[ssf] %>% 
  `names<-`(coef_names[ssf]) %>%  
  {msummary(., 
            vcov = mvc[ssf], 
            estimate = "{estimate}{stars}", 
            coef_map = c("(Intercept)" = "(Intercept)",
                         "destination_value" = "Destination Value"),
            output = "tmp/reg_table3.docx")}

```


### coef plot

```{r}
df_coef <- specif %>%
  map(\(x) broom::tidy(x, conf.int = TRUE)) %>%
  list_rbind(names_to = "outcome") %>%
  left_join(data.frame(outcome = params$reg_factors, outlab = coef_names), "outcome") %>%
  mutate(outlab = ordered(outlab, levels = coef_names))

df_coef

df_coef %>%
  filter(term == "destination_value") %>%
  ggplot() +
  geom_point(aes(outlab, estimate)) +
  geom_errorbar(aes(outlab, ymin = conf.low, ymax = conf.high), width = 0.2) +
  ylim(-0.1, 0.8) +
  geom_hline(yintercept = 0, linetype = 2) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1), axis.title = element_blank())
```




## distance interaction

source_outcome ~ destination_outcome * distance

```{r}

specif <- list()
df_mod <- list()
mvc <- list()
for (i in params$reg_factors){
  x1 <- paste0("sink_value_", i)
  x2 <- "eca_center_distance"
  clust <- "eca_membership"
  df_reg <- df[df$cbsa_rural_category == "rural" & df$eca_cluster_category != "Cluster Sink", ] %>% 
    st_drop_geometry()
  df_mod[[i]] <- df_reg %>% 
    select(i, x1, x2, clust) %>% 
    na.omit() %>% 
    rename(destination_value = x1) %>%
    rename(eca_distance = x2)
  fm <- as.formula(paste(i, "~", "destination_value", "*", "eca_distance"))
  specif[[i]] <- lm(fm, data = df_mod[[i]])
  mvc[[i]] <- vcovCL(x = specif[[i]], type = "HC2", cluster = df_mod[[i]][["eca_membership"]])
}

ssf <- 1:7
specif[ssf] %>% 
  `names<-`(coef_names[ssf]) %>%  
  {msummary(., 
            vcov = mvc[ssf], 
            estimate = "{estimate}{stars}", 
            coef_map = c("(Intercept)" = "(Intercept)",
                         "destination_value" = "Destination Value",
                         "eca_distance" = "Distance", 
                         "destination_value:eca_distance" = "Dest. Value x Distance"),
            output = "tmp/reg_table4.docx")}


```


### marginal effects plots

```{r}
library(margins)
library(patchwork)

display_names <- list(
  `Wage Growth` = "Wage growth",
  `YPLL75` = "Years of potential life lost",
  `Highschool Graduation Rate` = "High school graduation rate"
)

# for (co in c("Wage Growth", "Highschool Graduation Rate")) {
for (co in coef_names[1:3]) {

  i <- match(co, coef_names)

me <- margins_summary(model = specif[[i]], 
                        variables = "destination_value", 
                        at = list(eca_distance = 0:15), 
                        vcov = mvc[[i]])
  p <- ggplot(me, aes(x = eca_distance, y = AME, ymin = lower, ymax = upper)) +
    geom_ribbon(fill = "#332288", alpha = .2) +
    geom_line(color = "#332288") +
    geom_hline(yintercept = 0) +
    theme_minimal() +
    labs(title = display_names[[coef_names[i]]],
         x = "Distance (miles)",
         y = "Marginal effect") +
    scale_x_continuous(labels = label_comma(scale = 100)) +
    scale_y_continuous(limits = c(-0.5, 1))
    
  denx <- ggplot(df_mod[[i]], aes(eca_distance)) + 
    geom_histogram(color = "grey", fill = "white", bins = 50) +
    scale_x_continuous(limits = c(0, 15)) +
    theme_void()
    
  
  stack_plots <- p + plot_spacer() + denx + 
      plot_layout(
        ncol = 2, 
        nrow = 2, 
        widths = c(4, 1),
        heights = c(4, 1) ) 

  suppressWarnings(print(stack_plots))
}


```
