---
title: "Circularity Shiny Dashboard - data preparation"
format: html
---

# top

```{r}
library(glue)
library(tidyverse)
library(arrow)
library(tigris)
library(sf)
library(assertr)

options(tigris_use_cache = TRUE)

source("R/place_io.R", local = (place_io <- new.env()))
source("R/circularity.R", local = (circularity <- new.env()))
source("R/dataprep_cbp.R", local = (cbp <- new.env()))
source("R/pubdatapy.R", local = (pubdatapy <- new.env()))
source("R/geography.R", local = (geography <- new.env()))


# pubdatapy$build_price_index()
df_price_idx = pubdatapy$opath$price_index %>%
  read_parquet() %>%
  arrange(year) %>%
  mutate(price_idx = gdp_price_index / last(gdp_price_index)) %>%
  select(year, price_idx)

deflate_price = function(year, x) {
  data.frame(year, x) %>%
    left_join(df_price_idx, "year") %>%
    mutate(y = x / price_idx) %>%
    pull(y)
}


data <- list()

```


# Debugging shims

```{r}
input <- list(
  circularity = "retention",
  outcome = "emp",
  highlight = "non-metro"
)
selected_sate <- \() "55"
selected_county <- \() "55025"

```


# Geography

```{r}

df_shape_st <- sf::st_read("/vsizip/data/raw/geo/cb_2013_us_state_20m.zip") %>%
  rename_with(tolower)
df_shape_cty = counties(cb = TRUE, resolution = "20m", year = 2013) %>%
  rename_with(tolower)

data$shp_st <- df_shape_st %>%
  select(geoid)

data$st_names <- df_shape_st %>%
  pull(name, name = "geoid")


  
```


# out-sup-dem, circ

```{r}

df_osd = 
  place_io$outsupdem(2012, "det", "cbp_imp") %>%
  mutate(
    sec_code = str_sub(com_code, 1, 2),
    sec_code = ordered(
      case_match(
        sec_code,
        c("11", "21") ~ "AFM",
        c("31", "32", "33") ~ "MFG",
        c("52", "53") ~ "FIRE",
        c("54", "55", "56") ~ "PROF",
        .default = "OTHER"),
      levels = c("AFM", "MFG", "FIRE", "PROF", "OTHER")
  )) %>%
  summarize(across(c(output, supply, demand), sum), .by = c("place", "sec_code")) %>%
  pivot_longer(c(output, supply, demand))

df_cir = circularity$circularity_indicators(2012, "cbp_imp")
df_cir =
  df_shape_cty %>%
  select(place = geoid, name) %>%
  inner_join(df_cir, by = "place")

# data$osd = df_osd
data$cir = df_cir

```


# outcomes




```{r}
years <- c(2010, 2019)

df_bus <-
  years %>%
  set_names() %>%
  map(\(y) {
    cbp$opath$cbp_ %>%
      glue(geo = "county", year = y, imputed = FALSE) %>%
      open_dataset() %>%
      filter(naics == "") %>%
      select(place, est, emp, pay = ap) %>%
      collect()
  }) %>%
  bind_rows(.id = "year") %>%
  mutate(year = as.numeric(year)) %>%
  # only keep counties without suppression
  filter(n() == 2, min(emp) > 0, .by = "place") %>%
  mutate(pay = deflate_price(year, pay))

# state aggregates
df_bus <- df_bus %>%
  mutate(place = paste0(str_sub(place, 1, 2), "000")) %>%
  summarize(across(c(est, emp, pay), sum), .by = c(year, place)) %>%
  bind_rows(df_bus)

# national aggregate
df_bus <- df_bus %>%
  mutate(place = "00000") %>%
  summarize(across(c(est, emp, pay), sum), .by = c(year, place)) %>%
  bind_rows(df_bus)


df_bus_gr <-
  df_bus %>%
  arrange(place, year) %>%
  mutate(
    across(c(est, emp, pay), \(x) 2 * (x - lag(x)) / (x + lag(x)), .names = "{.col}_gr"),
    across(c(est, emp, pay), \(x) (x + lag(x)) / 2),
    .by = "place"
  ) %>%
  filter(year == years[2]) %>%
  select(!year)

df_cbsa <-
  geography$pubdata$get_cbsa_delin_df(2013) %>%
  rename_with(tolower) %>%
  select(state_code, county_code, metro_micro) %>%
  mutate(place = paste0(state_code, county_code))

  
df_scat <-
  df_bus_gr %>%
  inner_join(df_cir, "place") %>%
  mutate(st = str_sub(place, 1, 2)) %>%
  left_join(df_cbsa, by = "place") %>%
  mutate(metro = case_match(metro_micro, "metro" ~ TRUE, .default = FALSE))

data$scat = df_scat

df_scat
```

# circ-growth scatterplot


```{r}
gr_var = paste0(input$outcome, "_gr")
pal <- switch(
  input$highlight,
  both = c("black", "black"),
  metro = c("gray", "black"),
  "non-metro" = c("black", "gray")
)


p1 <- data$scat %>%
  filter(st == "01") %>%
  ggplot() +
  geom_point(aes(retention, emp_gr), color = "blue")

p1 +
  geom_point(aes(retention, emp_gr), color = "red", data = filter(data$scat, st == "55"))

p1 + ggplot(data$scat)


base_plot <- 
  ggplot(data$scat, aes(.data[[input$circularity]], .data[[gr_var]])) +
  geom_point(size = 0.3, alpha = 0.3) +
  scale_y_continuous(labels = scales::label_percent(), limits = c(-0.5, 0.5))

base_plot


data$scat %>%
  filter(st == selected_state()) %>%
  ggplot() +
  geom_point(aes(.data[[input$circularity]], .data[[gr_var]], size = .data[[input$outcome]], color = metro)) +
  scale_color_manual(values = pal) +
  geom_point(aes(.data[[input$circularity]], .data[[gr_var]], size = .data[[input$outcome]]),
             color = "red", data = filter(data$scat, place == selected_county())) +
  labs(title = paste0("Circularity and economic growth in ", data$st_names[selected_state()], ", 2010-2019")) +
  ylab(paste(input$outcome, "growth")) + 
  xlab(input$circularity) +
  scale_y_continuous(labels = scales::label_percent()) +
  theme(legend.position = "none", aspect.ratio = 3/4)


```

# data table

```{r}

df_cir1 <- df_cir %>%
  st_drop_geometry() %>%
  select(place, retention, autonomy) %>%
  drop_na()

# state aggregates
df_cir1 <- df_cir1 %>%
  mutate(place = paste0(str_sub(place, 1, 2), "000")) %>%
  summarize(across(c(retention, autonomy), mean), .by = place) %>%
  bind_rows(df_cir1)

# national aggregate
df_cir1 <- df_cir1 %>%
  mutate(place = "00000") %>%
  summarize(across(c(retention, autonomy), mean), .by = place) %>%
  bind_rows(df_cir1)

x1 <- df_shape_st %>%
  st_drop_geometry() %>%
  mutate(place = paste0(statefp, "000")) %>%
  select(place, name, st = statefp, abbr = stusps)

x2 <- counties(cb = TRUE, resolution = "20m", year = 2013) %>%
  st_drop_geometry() %>%
  rename_with(tolower) %>%
  select(place = geoid, name, st = statefp) %>%
  left_join(select(x1, st, abbr), by = "st") %>%
  mutate(name = paste0(name, ", ", abbr))

x3 <- bind_rows(
    tibble(place = "00000", name = "United States"),
    x1,
    x2
  ) %>%
  select(place, name)



data$table <-
  df_bus_gr %>%
  left_join(df_cir1, by = "place") %>%
  left_join(x3, by = "place") %>%
  select(place, name, retention, autonomy, est, est_gr, emp, emp_gr, pay, pay_gr)


data$table

```





# Save data to disk

```{r}
saveRDS(data, "projects/circ_dash/circ_shiny.rds")

```






