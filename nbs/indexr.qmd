---
title: "Index for R"
format: html
---


# Data packaging

`zip_pack()` and `zip_unpack()` functions from utilities module can be used to package a list of data files and unpack them to same locations in a different environment.


```{r}
source("R/basic_utilities.R", local = (util <- new.env()))
source("R/dataprep_bea_io.R", local = (bea_io <- new.env()))
source("R/geography.R", local = (geo <- new.env()))
source("R/dataprep_cbp.R", local = (cbp <- new.env()))
source("R/dataprep_infogroup.R", local = (ig <- new.env()))
source("R/dataprep_agcensus.R", local = (agcen <- new.env()))

# pack all outputs from 5 dataprep modules, excluding parquet'd establishment-level infogroup
# list(bea_io$opath, geo$opath, cbp$opath, ig$opath["county_"], agcen$opath, dataprep$opath["population"]) |> 
#   list_c() |> list_c() |> # cat paths from all lists into single vector
#   util$zip_pack("tmp/bea_cbp_geo_ig_ag_pop_v240123.zip", files = _, overwrite = TRUE)
# unpack
# util$zip_unpack("tmp/bea_cbp_geo_ig_ag_v231109.zip", overwrite = TRUE)


```



# BEA IO tables

```{r}
source("R/dataprep_bea_io.R", local = (bea_io <- new.env()))


# test module functions
# bea_io$clear_outputs()
# bea_io$test_pubdata()
# bea_io$test_dataprep()

# example usage
bea_io$pubdata$get_naics_concord(2017)
bea_io$pubdata$get_use(2017, "det", TRUE)$table
bea_io$call_b_matrix(2017, "det")[1:5, 1:5]


```

# Geography


```{r}
source("R/geography.R", local = (geo <- new.env()))


# test module functions
# geo$clear_outputs()
# geo$test_pubdata()
# geo$test_dataprep()

# example usage
geo$call_cbsa_concord(2013)

```


# CBP

```{r}
source("R/dataprep_cbp.R", local = (cbp <- new.env()))

# testing
# cbp$clear_outputs()
# cbp$test_naics_years()

# example usage
cbp$call_cbp(2012, "county", FALSE)

```



# InfoGroup


```{r}
source("R/dataprep_infogroup.R", local = (ig <- new.env()))

# build enhanced parquet dataset
ig$prep_enh()

# build county aggregates
ig$prep_county_agg(1997:2017)

# example: county soybean processing
open_dataset(glue(ig$opath$county_, .envir = list(year = 2012))) |>
  filter(naics == "311224") |>
  arrange(st, cty) |>
  collect()

```

# Census of Agriculture

Farm sales


```{r}
source("R/dataprep_agcensus.R", local = (agcen <- new.env()))

# testing
# agcen$test_all()

# county output of BEA detail agricultural industries
agcen$call_agoutput(2012, "county")


```


# Place output

```{r}
source("R/place_output.R", local = (place_output <- new.env()))

# testing
# place_output$test_all()

# county output
place_output$call_output(year = 2012, class_system = "commodity", ilevel = "det", bus_data = "infogroup")

# county demand
place_output$call_intermediate(
  year = 2012, 
  schedule = "demand", 
  paradigm = "domestic", 
  class_system = "commodity", 
  ilevel = "det",
  bus_data = "infogroup")

# county supply
place_output$call_intermediate(
  year = 2012, 
  schedule = "supply", 
  paradigm = "domestic", 
  class_system = "commodity", 
  ilevel = "det",
  bus_data = "infogroup")

```


# Population

```{r}
source("R/dataprep.R", local = (dataprep <- new.env()))

dataprep$call_population()

```


# Trade flows

```{r}
source("R/trade_flows.R", local = (tf <- new.env()))


```

# Dynamism

```{r}
source("R/basic_utilities.R", local = (util <- new.env()))
source("R/dataprep.R", local = (dataprep <- new.env()))
source("R/geography.R", local = (geo <- new.env()))
source("R/visualization.R", local = (visual <- new.env()))

# for(y in 2003:2016){
#   dataprep$call_econ_dynam_ind(year = y)
# }

# util$zip_pack("tmp/econ_dynamism_v240221.zip", dataprep$opath$econ_dynam_ind_, overwrite = TRUE)
# util$zip_unpack("tmp/econ_dynamism_v240221.zip", overwrite = TRUE)

year = 2012
df <- dataprep$call_econ_dynam_ind(year)
df
geo$call_geog(year) %>% left_join(., df, by = "place") %>%
  {visual$nominal_choro_map(., "employment")}

```


# Prosperity


## premature death

```{r}
source("R/dataprep_prosperity.R", local = (prosperity <- new.env()))

prosperity$call_premature_death_df()

```



## unemployment rate

```{r}
source("R/dataprep_prosperity.R", local = (prosperity <- new.env()))

prosperity$call_unemployment_rate_df()

```


## net migration rate 

```{r}
source("R/dataprep_prosperity.R", local = (prosperity <- new.env()))

prosperity$call_netmigration_df()


```



## population growth

```{r}
# calculate ad hoc

```


## education

```{r}
source("R/dataprep_prosperity.R", local = (prosperity <- new.env()))

prosperity$call_education_df()

```


## labor force participation rate

```{r}
source("R/dataprep_prosperity.R", local = (prosperity <- new.env()))

prosperity$call_lfpr_df()

```


## saipe

```{r}
source("R/dataprep_prosperity.R", local = (prosperity <- new.env()))

prosperity$call_saipe_df()


```




