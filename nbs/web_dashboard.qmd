---
title: "APL website dashboard"
format: html
---

Prepare data for a web dashboard.

```{r}
library(tidyverse)

library(reticulate)
reticulate::use_condaenv("rurec")

pubdata <- new.env()
pubdata$geography <- reticulate::import("rurec.pubdata.geography")
pubdata$pop <- reticulate::import("rurec.pubdata.population")
pubdata$bea_io <- reticulate::import("rurec.pubdata.bea_io")

source(repo_path("nbs/r_backend_functions.R"), local = (circ_fns <- new.env()))

repo_path <- rprojroot::find_rstudio_root_file
```




```{r}
d_eca <- readRDS(repo_path("data/nifa_2023/infogroup_trade_flows_total.rds")) %>%
  (\(x) x / rowSums(x)) %>%
  circ_fns$absorption_maximum_match(0.05) %>%
  ungroup() %>%
  rename(county_fips = place)

d_out <- readRDS(repo_path("cache/infogroup_output_cty_det.rds"))
```



```{r}
df <- pubdata$geography$get_state_df(geometry = FALSE) %>%
  rename_with(str_to_lower) %>%
  filter(contiguous) %>%
  select(code, abbr) %>%
  rename(state_code = code)

d <- pubdata$geography$get_county_df() %>%
  rename_with(str_to_lower)
df <- left_join(df, d, join_by(state_code)) %>%
  rename(county_fips = code) %>%
  mutate(county_name = paste(name, abbr, sep = ", "))

d <- pubdata$pop$get_df() %>%
  filter(st != "00", cty != "000", year == 2012) %>%
  mutate(county_fips = paste0(st, cty)) %>%
  select(county_fips, pop) %>%
  rename(county_pop = pop)
df <- left_join(df, d, join_by(county_fips))

df <- left_join(df, d_eca, join_by(county_fips)) %>%
  rename(eca_code = eca_membership, eca_level = cluster_members_count) %>%
  select(county_fips, county_name, county_pop, eca_code, eca_level)

d <- df %>%
  select(county_fips, county_name) %>%
  rename(eca_code = county_fips, eca_name = county_name)
df <- left_join(df, d, join_by(eca_code))

d <- d_out %>%
  colSums() %>%
  round() %>%
  as_tibble(rownames = "county_fips") %>%
  rename(county_output = value)
df <- left_join(df, d, join_by(county_fips))

concord_sec_det <- circ_fns$call_industry_concordance() %>%
  rename_with(str_to_lower) %>%
  select(sector, detail) %>%
  distinct()
d <- d_out %>%
  t() %>%
  as_tibble(rownames = "county_fips") %>%
  pivot_longer(!county_fips, names_to = "detail", values_to = "output") %>%
  left_join(concord_sec_det, join_by(detail)) %>%
  group_by(county_fips, sector) %>%
  summarize(county_output = sum(output), .groups = "drop") %>%
  pivot_wider(id_cols = county_fips, names_from = sector, names_prefix = "county_output_", values_from = county_output)
df <- left_join(df, d, join_by(county_fips))


d <- df %>%
  group_by(eca_code) %>%
  summarize(eca_pop = sum(county_pop), eca_output = sum(county_output),
            across(starts_with("county_output_"), sum)) %>%
  rename_with(~ sub("county_output_", "eca_output_", .x))
df <- left_join(df, d, join_by(eca_code))

d <- df %>%
  select(county_fips, county_name, county_pop, county_output, eca_code, eca_level, eca_name, eca_pop, eca_output, starts_with("eca_output_"))
write_csv(d, repo_path("data/web_dashboard.csv"))

```

Industry code descriptions.

```{r}
jsonlite::toJSON(
  data.frame(
    code = names(pubdata$bea_io$get_sup(2012L, "sec", FALSE)), 
    description = names(pubdata$bea_io$get_sup(2012L, "sec", TRUE))
  ),
  pretty = TRUE
)


```


