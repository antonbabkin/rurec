---
title: "Connectedness and economic growth"
format: 
  html:
    toc: true
    code-fold: true
    df-print: paged
    embed-resources: true
    warning: false
---

Exploring relationship between county economic growth and different measures of supply chain connectedness.


```{r preamble}
#| output: false
library(rlog)
library(tidyverse)
library(ggplot2)
library(ggside)
library(huxtable)
library(patchwork)
library(margins)

library(reticulate)
reticulate::use_condaenv("rurec")

pubdata <- new.env()
pubdata$geography <- reticulate::import("rurec.pubdata.geography")
pubdata$cbsa <- reticulate::import("rurec.pubdata.geography_cbsa")
pubdata$bea_nipa <- reticulate::import("rurec.pubdata.bea_nipa")
pubdata$bea_io <- reticulate::import("rurec.pubdata.bea_io")

root_dir <- rprojroot::find_rstudio_root_file()

source(file.path(root_dir, "rurec/reticulate_extras.R"))
source(file.path(root_dir, "nbs/rural_typology_r_functions.R"), local = (conn_fns <- new.env()))
source(file.path(root_dir, "rurec/reseng.R"), local = (reseng <- new.env()))

source(file.path(root_dir, "nbs/misc/depreciate/r_backend_functions.R"), local = (conn_backend <- new.env()))

ggplot2::theme_set(theme_minimal())
Sys.setenv("LOG_LEVEL" = "DEBUG")


# Convert between nominal and real dollars.
.deflator <- pubdata$bea_nipa$get_price_index_df() %>%
  rename(deflator = purchases_price_index) %>%
  select(deflator) %>%
  mutate(deflator = deflator / .["2020", "deflator"])

nom2real <- function(nom, year) {
  nom / .deflator[as.character(year), "deflator"]
}

real2nom <- function(real, year) {
  real * .deflator[as.character(year), "deflator"]
}

# test
# y <- rep(2019:2021, 2)
# n <- rep(100, length(y))
# r <- nom2real(n, y)
# n1 <- real2nom(r, y)
# n == n1
```



# Data prep

Prepare parts that will be combined into analysis dataframe.

## county id

```{r}
data_prep <- new.env()

data_prep$county_id <- function() {
  # county fips and name
  year <- 2013L
  df <- pubdata$geography$get_county_df(year = year, geometry = FALSE) %>%
    rename_with(str_to_lower) %>%
    rename(stcty = code, cty_name = name, st = state_code)
  
  # state name and abbr
  d <- pubdata$geography$get_state_df(geometry = FALSE) %>%
    rename_with(str_to_lower) %>%
    select(code, name, abbr) %>%
    rename(st = code, st_name = name, st_abbr = abbr)
  df <- left_join(df, d, "st")
  
  df <- df %>%
    select(stcty, st_name, st_abbr, cty_name)
  
  df
}

head(data_prep$county_id())
```


## employment


### farm labor

"Hired labor" from ag census 2002, 2007, 2012 and 2017. Linear interpolation between censal years, repeated values 3 years before (1999-2001) and 2 years after (2018-2020).


```{r}

data_prep$county_farm_emp <- reseng$cache(function() {
  ds <- arrow::open_dataset(as.character(agcen$PATH$proc), partitioning = c("YEAR"))
  df <- ds %>%
    rename_with(str_to_lower) %>%
    filter(agg_level_desc == "COUNTY", domain_desc == "TOTAL",
           short_desc %in% c("LABOR, HIRED - OPERATIONS WITH WORKERS",
                             "LABOR, HIRED - NUMBER OF WORKERS")) %>%
    mutate(stcty = str_c(state_fips_code, county_code)) %>%
    select(year, stcty, short_desc, value) %>%
    collect() %>%
    mutate(short_desc = case_when(
      short_desc == "LABOR, HIRED - OPERATIONS WITH WORKERS" ~ "est",
      short_desc == "LABOR, HIRED - NUMBER OF WORKERS" ~ "emp"
    )) %>% 
    pivot_wider(names_from = short_desc)

  y_min <- 2002
  y_max <- 2017
  d <- expand.grid(list(year = (y_min - 3):(y_max + 3), stcty = unique(df$stcty)))
  df <- left_join(d, df, by = c("year", "stcty"))
  
  # interpolate and extrapolate intra-censal years
  # if only one non-NA value exists in the entire history, it will be still propagated regardless of gap length
  df <- df %>% 
    group_by(stcty) %>% 
    mutate(
      emp = round(zoo::na.approx(emp, year, na.rm = FALSE, rule = 2)),
      est = round(zoo::na.approx(est, year, na.rm = FALSE, rule = 2)))
  
  return(df)
}, file.path(root_dir, "cache/data_prep_county_farm_emp.rds"))
# file.remove(file.path(root_dir, "cache/data_prep_county_farm_emp.rds"))

head(data_prep$county_farm_emp())
```


Total employment, including farm labor.


```{r}

data_prep$county_emp <- reseng$cache(function() {
  ds <- arrow::open_dataset(as.character(qcew$PATH$proc), partitioning = c("year"))
  years <- 2001:2020
  df <- ds %>%
    filter(agglvl_code == "71", # County, Total -- by ownership sector
           own_code == "5", # Private
           year %in% years) %>%
    select(year, area_fips, annual_avg_estabs, annual_avg_emplvl) %>%
    rename(stcty = area_fips, est = annual_avg_estabs, emp = annual_avg_emplvl) %>%
    collect()
  
  d <- prep_data_county_farm_emp()
  df <- left_join(df, d, by = c("year", "stcty"), suffix = c("", "_farm"))
  df <- df %>%
    mutate(est = est + est_farm, emp = emp + emp_farm) %>%
    select(!c(est_farm, emp_farm))
  df
}, file.path(root_dir, "cache/data_prep_county_emp.rds"))
# file.remove(file.path(root_dir, "cache/data_prep_county_emp.rds"))

head(data_prep$county_emp())
```

## rurality

CBSA definition, rural = non-metro.

```{r}

data_prep$rurality <- function() {
  
  # full list of county FIPS
  df <- data_prep$county_id() %>%
    select(stcty)
  
  # CBSA counties
  cbsa_delin_year <- 2009
  d <- pubdata$cbsa$get_cbsa_delin_df(cbsa_delin_year) %>%
    rename_with(str_to_lower) %>%
    mutate(stcty = str_c(state_code, county_code)) %>%
    select(stcty, cbsa_code, cbsa_title, metro_micro)
  
  df <- left_join(df, d, "stcty") %>%
    mutate(rural = replace_na(metro_micro != "metro", TRUE))
  
  df
}

head(data_prep$rurality())
```


## output

```{r}

data_prep$county_output_by_year <- reseng$cache(function(year, ilevel) {
  d <- conn_backend$commodity_output_matrix(year, ilevel = ilevel)
  d <- d %>%
    as_tibble(rownames = "ind") %>%
    pivot_longer(!ind, names_to = "stcty", values_to = "output_nom") %>%
    mutate(year = year) %>%
    select(year, stcty, ind, output_nom) %>%
    mutate(output = nom2real(output_nom, year))
  d
}, file.path(root_dir, "cache/county_output/{ilevel}_{year}.rds"))
# file.remove(file.path(root_dir, "cache/county_output/det_2020.rds"))

data_prep$county_output <- function(ilevel) {
  years <- c(2012, 2017)
  d <- lapply(years, data_prep$county_output_by_year, ilevel = ilevel)
  d <- do.call(rbind, d)
  d
}

head(data_prep$county_output("sec"))

```

## intermediate S&D

County supply and demand for intermediate commodities.

```{r}
#' County intermediate supply by BEA industry (detail)
data_prep$intermed_supply_by_ind <- reseng$cache(function(year) {
  d <- conn_backend$commodity_factor_supply_matrix(year)
  d %>%
    as_tibble(rownames = "ind") %>%
    pivot_longer(!ind, names_to = "stcty", values_to = "intermed_supply_nom") %>%
    mutate(year = year) %>%
    select(year, stcty, ind, intermed_supply_nom) %>%
    mutate(intermed_supply = nom2real(intermed_supply_nom, year))
}, file.path(root_dir, "cache/intermed_supply/det_{year}.rds"))



#' County intermediate demand by BEA industry (detail)
data_prep$intermed_demand_by_ind <- reseng$cache(function(year) {
  d <- conn_backend$commodity_factor_demand_matrix(year)
  d %>%
    as_tibble(rownames = "ind") %>%
    pivot_longer(!ind, names_to = "stcty", values_to = "intermed_demand_nom") %>%
    mutate(year = year) %>%
    select(year, stcty, ind, intermed_demand_nom) %>%
    mutate(intermed_demand = nom2real(intermed_demand_nom, year))
}, file.path(root_dir, "cache/intermed_demand/det_{year}.rds"))

#' County intermediate supply and demand, total and agriculture&mining, aggregated from BEA detail industry
data_prep$intermed_sup_dem <- function() {
  one_year <- function(year) {
    d1 <- data_prep$intermed_demand_by_ind(year) %>%
      select(stcty, ind, intermed_demand)
    d2 <- data_prep$intermed_supply_by_ind(year) %>%
      select(stcty, ind, intermed_supply)
    d <- inner_join(d1, d2, c("stcty", "ind"))
    d <- d %>% 
      replace_na(list(intermed_supply = 0, intermed_demand = 0)) %>%
      mutate(
        excess_intermed_supply = pmax(0, intermed_supply - intermed_demand),
        excess_intermed_demand = pmax(0, intermed_demand - intermed_supply),
        agmine = str_starts(ind, "11") | str_starts(ind, "21")
      )
    d1 <- d %>%
      group_by(stcty) %>%
      summarize(
        intermed_supply = sum(intermed_supply),
        intermed_demand = sum(intermed_demand),
        excess_intermed_supply = sum(excess_intermed_supply),
        excess_intermed_demand = sum(excess_intermed_demand)
      )
    d2 <- d %>%
      filter(str_starts(ind, "11") | str_starts(ind, "21")) %>%
      group_by(stcty) %>%
      summarize(
        agmine_excess_intermed_supply = sum(excess_intermed_supply),
        agmine_excess_intermed_demand = sum(excess_intermed_demand)
      )
    inner_join(d1, d2, "stcty") %>% 
      mutate(year = year)
  }
  
  years <- c(2012, 2017)
  d <- lapply(years, one_year)
  do.call(rbind, d)
}


head(data_prep$intermed_sup_dem())

```




## connectedness

```{r}
data_prep$imped <- reseng$cache(function(kind, par) {
  tiger_year = 2017
  if (kind == "dprox") {
    dist <- conn_fns$miles2meters(as.integer(par))
    x <- conn_fns$dprox_mat(tiger_year = tiger_year, boundary_limit = dist)
  } else if (kind == "gauss") {
    dist <- conn_fns$miles2meters(as.integer(par))
    x <- conn_fns$gaus_impedance_mat(tiger_year = tiger_year, rms_width = dist)
  }
  x
}, file.path(root_dir, "cache/imped/{kind}_{par}.rds"))

#' Calculate connectedness, ECA-1 class and match
#' @param year Year of county output.
#' @param imped_key Impedance key of form "kind-par", e.g. "dprox-300".
#' Use "none" for no impedance.
data_prep$conn <- reseng$cache(function(year, imped_key) {
  if (imped_key == "none") {
    imped_mat <- NULL
  } else {
    x <- str_split_1(imped_key, "-")
    imped_mat <- data_prep$imped(x[1], x[2])
  }
  # todo: why connectedness() needs tiger_year and scale?
  conn_fns$connectedness(cbp_year = as.character(year), impedance = imped_mat, tiger_year = 2017, scale = "20m") %>%
    ungroup() %>%
    rename(stcty = place) %>%
    mutate(year = year, .before = stcty)
}, file.path(root_dir, "cache/conn/{year}_{imped_key}.rds"))

head(data_prep$conn(2007, "none"))
```


```{r}
#| eval: false
# pre-calculate and cache
for (y in c(2002, 2007, 2012, 2017)) {
  x <- data_prep_conn(y, "none")
  for (i in c("dprox", "gauss")) {
    for (p in c(100, 300, 500)) {
      x <- data_prep_conn(y, glue("{i}-{p}"))
    }
  }
}

```



# Connectedness metric

## distribution by method

`max_absorption_alpha`:

- distance restriction shifts distribution to the left
- distributions are almost identical between binary ("dprox") and Gaussian impedance

```{r}
d <- c("none", "dprox-300", "gauss-300", "dprox-100", "gauss-100") %>%
  map(~ (data_prep_conn(year = 2017, imped_key = .x) %>%
           mutate(conn_meth = .x, .before = year))) %>%
  do.call(rbind, .)

d %>%
  group_by(conn_meth) %>%
  summarize(across(max_absorption_alpha, list(mean = mean, sd = sd, min = min, q25 = ~ quantile(.x, 0.25),
                               med = median, q75 = ~ quantile(.x, 0.75), max = max))) %>%
  rename_with(~ str_remove(.x, "max_absorption_alpha_"))

ggplot(d, aes(max_absorption_alpha)) + geom_density(aes(color = conn_meth))
```


## change over time

- grows from 2002 to 2007, then falls in 2012, then grows again to 2017
- same trend by impedance type
- same trend by rurality
- might be driven by changing CBP data suppression methods
- rural areas are more connected
- trend not uniform, a lot of counties go in either direction


```{r}
d <- list()
for (y in c(2002, 2007, 2012, 2017)) {
  for (i in c("none", "dprox-300")) {
    d[[length(d) + 1]] <- data_prep_conn(year = y, imped_key = i) %>%
      mutate(conn_meth = i, .before = year)
  }
}
d <- do.call(rbind, d)
d1 <- data_prep_rurality() %>% select(stcty, rural)
d <- inner_join(d, d1, "stcty")

ggplot(d) + geom_density(aes(max_absorption_alpha, color = as.factor(year), linetype = conn_meth))

d1 <- d %>% filter(conn_meth == "dprox-300")
ggplot(d1) + geom_density(aes(max_absorption_alpha, color = as.factor(year), linetype = rural))

d1 <- d %>%
  pivot_wider(id_cols = c(stcty, conn_meth, rural), 
              names_from = year, names_prefix = "conn_", 
              values_from = max_absorption_alpha) %>%
  drop_na()
ggplot(d1) + geom_point(aes(conn_2007, conn_2017, color = rural), size = 0.2) + facet_wrap(vars(conn_meth))
```


# Analysis

## dataframe

```{r}
# employment and estabs
years <- seq(2012, 2017, 5)
df <- data_prep$county_emp() %>%
  filter(year %in% years)

# names and FIPS
d <- data_prep$county_id()
df <- inner_join(df, d, "stcty")

# CBSA rurality
d <- data_prep$rurality()
df <- inner_join(df, d, "stcty")

# total and agmine output
d <- data_prep$county_output("sec") %>%
  filter(year %in% years) %>%
  group_by(year, stcty)
d1 <- d %>%
  summarize(output = sum(output), .groups = "drop")
df <- inner_join(df, d1, c("year", "stcty"))
d1 <- d %>%
  filter(ind %in% c("11", "21")) %>%
  summarize(agmine_output = sum(output), .groups = "drop")
df <- inner_join(df, d1, c("year", "stcty"))

# intermediates
d <- data_prep$intermed_sup_dem()
df <- inner_join(df, d, c("year", "stcty")) %>%
  mutate(intermed_pct = 100 * intermed_supply / output)

# annualized growth rates
df <- df %>%
  arrange(stcty, year) %>%
  group_by(stcty) %>%
  mutate(across(c(est, emp, output), 
                ~ 100 * (1 + 2 * (.x - lag(.x)) / (.x + lag(.x))) ^ (1 / (year - lag(year))) - 100, 
                .names = "{.col}_gr")) %>%
  ungroup()

dfa_stub <- df

# connectedness
dfa_conn <- list()

f <- function(d) {
  d %>%
  arrange(stcty, year) %>%
  group_by(stcty) %>%
  mutate(conn_gr = (conn - lag(conn)) / (year - lag(year))) %>%
  ungroup()
}
  
## max output absorption with no impedance
dfa_conn[["output, max abs, no imped"]] <- years %>%
  map(~ data_prep$conn(year = .x, imped_key = "none")) %>%
  do.call(rbind, .) %>%
  select(year, stcty, max_absorption_alpha) %>%
  rename(conn = max_absorption_alpha) %>%
  f()

## max output absorption with dprox-300 impedance
dfa_conn[["output, max abs, dprox-300"]] <- years %>%
  map(~ data_prep$conn(year = .x, imped_key = "dprox-300")) %>%
  do.call(rbind, .) %>%
  select(year, stcty, max_absorption_alpha) %>%
  rename(conn = max_absorption_alpha) %>%
  f()
```


```{r}
#| eval: false
# save dataframe for use in other analyses

d <- dfa_stub %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty")) %>%
  rename(conn_maxabs_output = conn, conn_maxabs_output_gr = conn_gr)

write.csv(d, file.path(root_dir, "data/conn_growth_analysis.csv"), row.names = FALSE)
```


## correlations

- negative emp vs rural and ag share
- positive rural vs ag share and conn
- negative emp vs conn

```{r}
df <- dfa_stub
d <- dfa_conn[["output, max abs, no imped"]] %>%
  rename(conn_noimp = conn)
df <- inner_join(df, d, c("year", "stcty"))
d <- dfa_conn[["output, max abs, dprox-300"]] %>%
  rename(conn_dprox300 = conn)
df <- inner_join(df, d, c("year", "stcty"))
df <- df %>%
  select(est, emp, rural, output_share_ind11, conn_noimp, conn_dprox300)
cor(df, use = "complete.obs")
```


## intermediatedness

`intermed_supply / output`

- Sometimes goes over 100%, why?
- Rurality turns around relationship between intermediatedness and size and agmine share
  - rural counties with high intermed_pct are bigger and have more ag/mining
  - the opposite relationship in metro
- Relationship with growth ambiguous, varies by year and rurality

```{r}

dfa_stub %>%
  ggplot(aes(intermed_pct, output, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 100) + scale_y_log10() +
  facet_wrap(vars(year))

dfa_stub %>%
  ggplot(aes(intermed_pct, emp, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 100) + scale_y_log10() +
  facet_wrap(vars(year))

dfa_stub %>%
  mutate(agmine_pct = 100 * agmine_output / output) %>%
  ggplot(aes(intermed_pct, agmine_pct, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 100) + ylim(0, 100) +
  facet_wrap(vars(year))

dfa_stub %>%
  mutate(agmine_pct = 100 * agmine_output / output) %>%
  ggplot(aes(output, agmine_pct, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 100) + ylim(0, 100) + scale_x_log10() +
  facet_wrap(vars(year))

dfa_stub %>%
  filter(year > 2002) %>%
  ggplot(aes(intermed_pct, output_gr, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 100) + ylim(-20, 20) +
  facet_wrap(vars(year))

dfa_stub %>%
  filter(year > 2002) %>%
  ggplot(aes(intermed_pct, emp_gr, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 100) + ylim(-20, 20) +
  facet_wrap(vars(year))

```


## intermed S&D

- data issue: agg supply < agg demand
- smaller counties more likely to demand more than they supply
  - holds for both full and excess
  - relationship weaker in rural counties
  

```{r}

# aggregate supply < demand
dfa_stub %>%
  group_by(year) %>%
  summarize(across(c(intermed_supply, intermed_demand, excess_intermed_supply, excess_intermed_demand), sum)) %>%
  mutate(intermed_sd_ratio = intermed_supply / intermed_demand,
         excess_intermed_sd_ratio = excess_intermed_supply / excess_intermed_demand)

dfa_stub %>%
  ggplot(aes(intermed_supply, intermed_demand, color = rural)) +
  geom_point(size = 0.1) +
  facet_wrap(vars(year)) +
  geom_abline(intercept = 0, slope = 1) +
  scale_x_log10() + scale_y_log10()

dfa_stub %>%
  mutate(intermed_ds_ratio = intermed_demand / intermed_supply) %>%
  ggplot(aes(output, intermed_ds_ratio, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  facet_wrap(vars(year)) +
  ylim(0, 4) +
  scale_x_log10()

dfa_stub %>%
  ggplot(aes(excess_intermed_supply, excess_intermed_demand, color = rural)) +
  geom_point(size = 0.1) +
  facet_wrap(vars(year)) +
  geom_abline(intercept = 0, slope = 1) +
  scale_x_log10() + scale_y_log10()


dfa_stub %>%
  mutate(excess_intermed_ds_ratio = excess_intermed_demand / excess_intermed_supply) %>%
  ggplot(aes(output, excess_intermed_ds_ratio, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  facet_wrap(vars(year)) +
  ylim(0, 5) +
  scale_x_log10()

dfa_stub %>%
  filter(year > 2002) %>%
  mutate(excess_intermed_ds_ratio = excess_intermed_demand / excess_intermed_supply) %>%
  ggplot(aes(excess_intermed_ds_ratio, output_gr, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 5) + ylim(-5, 10) +
  facet_wrap(vars(year))

dfa_stub %>%
  filter(year > 2002) %>%
  mutate(excess_intermed_ds_ratio = excess_intermed_demand / excess_intermed_supply) %>%
  ggplot(aes(excess_intermed_ds_ratio, emp_gr, color = rural)) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  xlim(0, 5) + ylim(-7, 7) +
  facet_wrap(vars(year))

# inverse hyperbolic 
```


## conn and size

Scatterplots of connectedness metrics vs county employment.

- big counties are always metro and have low connectedness
- significant variation in smaller counties, which can be both metro and nonmetro
- negative correlation is weaker with impedance
- no notable visual difference between years


```{r}
d <- dfa_stub %>%
  inner_join(dfa_conn[["output, max abs, no imped"]], c("year", "stcty")) %>%
  filter(year == 2017)

ggplot(d, aes(emp, conn, color = rural)) + 
  geom_point(size = 0.2) +
  geom_smooth() +
  scale_x_log10() +
  labs(title = "no imped")

d <- dfa_stub %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty")) %>%
  filter(year == 2017)

ggplot(d, aes(emp, conn, color = rural)) + 
  geom_point(size = 0.2) +
  geom_smooth() +
  scale_x_log10() +
  labs(title = "dprox-300")

```


## conn and agriculture

- ag output share is larger in rural
- high ag counties are smaller
- high ag are more connected

```{r}
d <- dfa_stub %>%
  filter(year == 2017) %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty"))

ggplot(d) +
  geom_density(aes(output_share_ind11, color = rural))

cor(select(d, emp, output_share_ind11, conn), use = "complete.obs") %>% round(2)

ggplot(d, aes(output_share_ind11, emp, color=rural)) + 
  geom_point(size = 0.4) +
  geom_smooth() +
  scale_y_log10()

ggplot(d, aes(output_share_ind11, conn, color=rural)) + 
  geom_point(size = 0.4) +
  geom_smooth()

```

## estab avg size

Counties with smaller average establishments are more connected, but this is likely because these are also smaller counties.

```{r}
d <- dfa_stub %>%
  filter(year == 2017) %>%
  mutate(est_size = emp / est) %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty"))

ggplot(d) +
  geom_density(aes(est_size, color = rural))

cor(select(d, rural, est, emp, est_size, conn), use = "complete.obs") %>% round(2)

ggplot(d, aes(est_size, emp, color=rural)) + 
  geom_point(size = 0.3) +
  geom_smooth() +
  scale_x_continuous(limits = c(0, 30)) +
  scale_y_log10()

ggplot(d, aes(est_size, conn, color=rural)) + 
  geom_point(size = 0.3) +
  scale_x_continuous(limits = c(0, 30)) +
  geom_smooth()

```


## growth

Annualized employment growth over 5 years following t.

- Relationship between connectedness and growth is usually negative.
- Exception in 2007 with slightly positive slope, more so in metro, and U-shaped in rural.

```{r}
d <- dfa_stub %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty")) %>%
  drop_na(conn, est_gr, emp_gr)

rbind(
  d %>% group_by(year) %>%
    summarize(as.data.frame(as.list(summary(emp_gr))), .groups = "drop") %>%
    mutate(rural = "ALL", .after = year),
  d %>% group_by(year, rural) %>%
    summarize(as.data.frame(as.list(summary(emp_gr))), .groups = "drop")
)

ggplot(d) + 
  geom_density(aes(emp_gr, color = as.factor(year))) + 
  xlim(-10, 10)

ggplot(d, aes(conn, emp_gr, color = rural)) +
  geom_point(size = .2) +
  geom_smooth() +
  scale_y_continuous(limits = c(-10, 10)) +
  facet_wrap(vars(year)) +
  theme(legend.position = c(.9, .9))


```




# Growth regressions

Connectedness is bad for growth when growth is positive (2002-2007 and 2012-2017), but good when negative (2007-2012).



```{r}
d <- dfa_stub %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty")) %>%
  drop_na(conn, est_gr, emp_gr) %>%
  mutate(year = as.factor(year))

ms <- list()

ms[["base"]] <- lm(emp_gr ~ 0 + year * rural, data = d, weights = emp)
ms[["conn"]] <- lm(emp_gr ~ 0 + year * (rural + conn), data = d, weights = emp)
ms[["rural*conn"]] <- lm(emp_gr ~ 0 + year * rural * conn, data = d, weights = emp)
ms[["conn*ag"]] = lm(emp_gr ~ 0 + year * (rural + conn) + conn * output_share_ind11, data = d, weights = emp)
ms[["ag"]] = lm(emp_gr ~ 0 + year * (rural + conn) + year * output_share_ind11, data = d, weights = emp)
ms[["ag*conn*year"]] = lm(emp_gr ~ 0 + year * (rural + conn) + year * output_share_ind11 * conn, data = d, weights = emp)
huxreg(ms)

```

Marginal effects of connectedness in different specifications are very much the same.

```{r}

me <- list()
for (m in c("conn", "rural*conn", "ag", "conn*ag", "ag*conn*year")) {
  me[[m]] <- margins_summary(ms[[m]], variables = "conn", at = list(year = levels(d$year))) %>%
    select(year, AME, lower, upper) %>%
    mutate(model = m)
}
me <- do.call(rbind, me)

me
ggplot(me, aes(year)) +
  geom_boxplot(aes(middle = AME, ymax = upper, upper = upper, ymin = lower, lower = lower), stat = "identity") +
  facet_wrap(vars(model))
```


## quantile reg

It looks like effect of connectedness on growth may be different when growth is negative and positive.
Quantile regression can be used to evaluate this.

Quantile regression shows that the negative effect of connectedness is stronger for slower growing counties.
This is particularly visible in 2007, where faster growing counties grow even faster if they are more strongly connected.

```{r}
d <- dfa_stub %>%
  inner_join(dfa_conn[["output, max abs, dprox-300"]], c("year", "stcty")) %>%
  drop_na(conn, est_gr, emp_gr) %>%
  mutate(year = as.factor(year))

ggplot(d, aes(conn, emp_gr)) +
  geom_point(size = 0.1) +
  ylim(-10, 10) +
  geom_quantile(quantiles = 1:4/5) +
  facet_wrap(vars(year))
```





# Future ideas

- Include other conn methods: factor supply and trade balancing.
- Second level ECA connectedness.
- Include intermediatedness as explanatory variable.
- Robust standard errors for panel reg.
- County fixed effects.
- Total output as control variable.
- Add county GDP for size and growth.


```{r}
#| eval: false
c1 <- one_hierarchical_connectedness("2017")
```


# Exploration and scratch work

## Intermediatedness

There is significant variation among sectors in the share of output that is used as intermediate input.

"Intermediatedness": share of county's output used as intermediate input.

*Side note about trade margins.*  
The big difference in Retail and Wholesale trade sectors between "Total Commodity Output" in Supply table and "Total use of products" in Use table is "Trade margins".  
Total product supply (purchaser prices) = Total product supply (basic prices) + trade margins + taxes.  
Trade margins are huge negative numbers in trade, and big positive numbers in manufacturing.


```{r, bea-sectors}
#| eval: false
bea_io <- reticulate::import("rurec.pubdata.bea_io")

y <- 2021L
d1 <- bea_io$get_sup(y, 'sec', TRUE)[1:15, ] %>%
  as_tibble(rownames = "commodity") %>%
  rename(output = `Total Commodity Output`) %>%
  mutate(output_share = output / sum(.$output)) %>%
  select(commodity, output, output_share)

d2 <- bea_io$get_use(y, 'sec', TRUE)[1:15, ] %>%
  as_tibble(rownames = "commodity") %>%
  rename(use = `Total use of products`, intermed = `Total Intermediate`) %>%
  mutate(intermed_share = intermed / use) %>%
  select(commodity, intermed, use, intermed_share)

d <- inner_join(d1, d2, by = "commodity")
d %>% arrange(desc(output_share))
```


Is absorption strongly correlated with weighted industry intermediate-ness?


```{r}
#| eval: false
# county-by-industry output
df <- county_industry_output %>% 
  as_tibble(rownames = "industry") %>%
  pivot_longer(!industry, names_to = "stcty", values_to = "output") %>%
  filter(output > 0) %>%
  select(stcty, industry, output) %>%
  arrange(stcty, industry)

# intermediate output share by industry (detail)
d <- io_use_det %>%
  as_tibble(rownames = "industry") %>%
  slice_head(n = 401) %>%     # last industry "S00203: Other state and local government enterprises"
  mutate(intermed_share = T001 / T019) %>% 
  replace_na(list(intermed_share = 0)) %>%
  # select(industry, T001, T019, intermed_share)
  select(industry, intermed_share)

# d %>% filter(intermed_share == 0) %>% View

# merge and fill missing values
df <- left_join(df, d, by = "industry")

# missing: 23 (Construction) and 331314 (Secondary smelting and alloying of aluminum)
# df %>% filter(is.na(intermed_share)) %>% count(industry)

# missing replacement
# "331314" is same commodity as "331313", but different industry
shr_331313 <- filter(d, industry == "331313")$intermed_share
# "23" maps to CBP only on sector level
shr_23 <- bea_io$get_use(2012L, 'sec') %>% 
  as_tibble(rownames = "industry") %>%
  filter(industry == "23") %>%
  transmute(shr = T001 / T019) %>%
  as.numeric()

df <- df %>%
  mutate(intermed_share = case_when(
    industry == "331314" ~ shr_331313,
    industry == "23" ~ shr_23,
    TRUE ~ intermed_share
  ))

stopifnot(!is.na(df$intermed_share))

# average intermed share by county
df <- df %>% 
  group_by(stcty) %>% 
  summarise(intermed_share = sum(intermed_share * output) / sum(output))

# absorption
d <- county_conn %>%
  ungroup() %>%
  rename(stcty = place) %>%
  select(stcty, max_absorption_alpha)
df <- inner_join(df, d, by = "stcty")

ggplot(df, aes(intermed_share, max_absorption_alpha)) + 
  geom_point() +
  geom_xsidehistogram() +
  geom_ysidehistogram() +
  coord_fixed(ratio = 1)
```


Yes, there is strong correlation between absorption share and an output-weighted "intermediatedness".
In other words, counties dominated by industries that are not much used as intermediate commodities do not have high absorption shares.

This will all change once we switch from total output to factor supply.


## Agricultural employment

Employment in NAICS-11 is not covered well by CBP or BDS.
In this section, we compare total agricultural employment across alternative sources.

### BDS

BDS only covers non-farm activity.
National data available down to 4-digit NAICS, county data only at 2-digit (sector).

```{r}
#| eval: false
bds <- reticulate::import("rurec.pubdata.bds")
d0 <- bds$get_df("sec")
df_bds <- d0 %>%
  filter(sector == "11") %>%
  rename(est = estabs) %>%
  select(year, est, emp) %>% 
  pivot_longer(c(est, emp))

ggplot(df_bds, aes(year, value)) + geom_line() +  ylim(c(0, NA)) + facet_wrap(vars(name), scales = "free_y")
```

### CBP

CBP switches from SIC to NAICS in 1998. Why such discontinuity??


```{r}
#| eval: false
cbp <- reticulate::import("rurec.pubdata.cbp")
dn <- cbp$get_parquet("us")

df <- dn %>%
  filter(lfo == "-", (year < 1998 & industry == "07") | (year >= 1998 & industry == "11")) %>%
  select(year, emp, est) %>%
  pivot_longer(c(emp, est))

df_cbp <- df
rm(dn, df)

ggplot(df_cbp, aes(year, value)) + geom_line() + ylim(c(0, NA)) + facet_wrap(vars(name), scales = "free_y")
```

### QCEW

```{r}
#| eval: false
qcew <- reticulate::import("rurec.pubdata.qcew")
ds <- arrow::open_dataset(as.character(qcew$PATH$proc), partitioning = c("year"))
df_qcew <- ds %>%
  filter(agglvl_code == "14", # National, by NAICS Sector -- by ownership sector
         own_code == "5", # Private
         industry_code == "11") %>%
  select(year, annual_avg_estabs, annual_avg_emplvl) %>%
  rename(est = annual_avg_estabs, emp = annual_avg_emplvl) %>%
  collect() %>%
  pivot_longer(c(est, emp))

rm(ds)
ggplot(df_qcew, aes(year, value)) + geom_line() + ylim(c(0, NA)) + facet_wrap(vars(name), scales = "free_y")
```


### Ag census

We begin by looking at farms with hired workers - count and number of workers.
Other variables to consider are number of farm operators, unpaid labor and contract labor.

```{r}
#| eval: false
agcen <- reticulate::import("rurec.pubdata.agcensus")
ds <- arrow::open_dataset(as.character(agcen$PATH$proc), partitioning = c("YEAR"))
d0 <- ds %>%
  rename_with(str_to_lower) %>%
  filter(agg_level_desc == "NATIONAL", domain_desc == "TOTAL") %>%
  select(year, short_desc, value) %>%
  collect()

df_agcen <- d0 %>% filter(short_desc %in% c(
  "LABOR, HIRED - OPERATIONS WITH WORKERS",
  "LABOR, HIRED - NUMBER OF WORKERS"
  )) %>%
  mutate(short_desc = case_when(
    short_desc == "LABOR, HIRED - OPERATIONS WITH WORKERS" ~ "est",
    short_desc == "LABOR, HIRED - NUMBER OF WORKERS" ~ "emp"
  )) %>%
  rename(name = short_desc)

rm(ds, d0)
df_agcen
```


### Summary

- Establishments: CBP/BDS = 20k, QCEW = 100k, farms = 500k.
- Employment: CBP/BDS = 170k, QCEW = 1.2m, farms = 2.7m.

QCEW will be used as source of county employment data, with addition of farm labor from ag census.

```{r}
#| eval: false
df <- rbind(mutate(df_bds, source = "BDS"),
            mutate(df_cbp, source = "CBP"),
            mutate(df_qcew, source = "QCEW"),
            mutate(df_agcen, source = "AgCen"))

options(scipen=999)

df %>% 
  filter(year %in% seq(2002, 2017, 5)) %>%
  pivot_wider(id_cols = c(year, source)) %>%
  arrange(year, source)

ggplot(df, aes(year, value, color = source)) +
  geom_line() +
  ylim(c(0, NA)) +
  facet_wrap(vars(name), scale = "free_y")
```


