---
title: "InfoGroup aggregation"
format: html
---

Convert raw InfoGroup data from CSV to parquet and construct aggregate statistics at different geographic levels.

```{r}
library(tidyverse)
library(arrow)
library(glue)
library(logger)

ggplot2::theme_set(theme_minimal())

library(reticulate)
reticulate::use_condaenv("rurec")
pubdata <- new.env()
pubdata$bds <- reticulate::import("rurec.pubdata.bds")

proj_path <- rprojroot::find_rstudio_root_file

source(proj_path("rurec/reseng.R"), local = (reseng <- new.env()))


PATH = list(
  raw = "~/work/data/infogroup/{year}_Business_Academic_QCQ.csv.gz",
  pq = proj_path("data/infogroup/parquet"),
  pqe = proj_path("data/infogroup/parquete"),
  county = proj_path("data/infogroup/county_agg/{year}.rds")
)

log_threshold("DEBUG")
```

# Convert to parquet

## single year

```{r}

load_year <- function(year) {
  
  p <- file.path(PATH$pq, glue("{year}/part.pq"))
  if (file.exists(p)) {
    log_debug(glue("Load {p}"))
    return(arrow::read_parquet(p))
  }
  
  state_codes <- c("AL" ~ "01", "AK" ~ "02", "AZ" ~ "04", "AR" ~ "05", "CA" ~ "06", "CO" ~ "08", "CT" ~ "09", "DE" ~ "10", "DC" ~ "11", "FL" ~ "12", "GA" ~ "13", "HI" ~ "15", "ID" ~ "16", "IL" ~ "17", "IN" ~ "18", "IA" ~ "19", "KS" ~ "20", "KY" ~ "21", "LA" ~ "22", "ME" ~ "23", "MD" ~ "24", "MA" ~ "25", "MI" ~ "26", "MN" ~ "27", "MS" ~ "28", "MO" ~ "29", "MT" ~ "30", "NE" ~ "31", "NV" ~ "32", "NH" ~ "33", "NJ" ~ "34", "NM" ~ "35", "NY" ~ "36", "NC" ~ "37", "ND" ~ "38", "OH" ~ "39", "OK" ~ "40", "OR" ~ "41", "PA" ~ "42", "RI" ~ "44", "SC" ~ "45", "SD" ~ "46", "TN" ~ "47", "TX" ~ "48", "UT" ~ "49", "VT" ~ "50", "VA" ~ "51", "WA" ~ "53", "WV" ~ "54", "WI" ~ "55", "WY" ~ "56", "AS" ~ "60", "GU" ~ "66", "MP" ~ "69", "PR" ~ "72", "VI" ~ "78")
  
  d <- read_csv(
    glue(PATH$raw),
    col_types = cols_only(
      ABI = "i",
      `State` = "c",
      `County Code` = "c", 
      `Primary NAICS Code` = "c", 
      `Employee Size (5) - Location` = "i", 
      `Sales Volume (9) - Location` = "i"
    )
  ) %>%
    rename(
      abi = ABI,
      st = `State`,
      cty = `County Code`, 
      naics = `Primary NAICS Code`, 
      emp = `Employee Size (5) - Location`, 
      sales = `Sales Volume (9) - Location`
    ) %>%
    mutate(naics = str_sub(naics, 1, 6)) %>%
    mutate(st = case_match(st, !!!state_codes)) %>%
    replace_na(list(emp = 0, sales = 0))
  
  dir.create(dirname(p), showWarnings = FALSE, recursive = TRUE)
  arrow::write_parquet(d, p)
  log_debug(glue("Save {p}"))
  return(d)
}


prep_all_years <- function() {
  log_tictoc("start")
  for (y in 1997:2017) {
    load_year(y)
    log_tictoc("finish", y)
  }
}

# prep_all_years()


```

## entry and exit


```{r}
log_tictoc("start")
year_first <- 1997
year_last <- 2017
for (y in year_first:year_last) {
  # y <- 1997
  if (y == year_first) {
    d0 <- load_year(y) %>% mutate(entry = NA)
  } else {
    d0 <- d1 %>% mutate(entry = !(abi %in% d0$abi))
  }
  
  if (y == year_last) {
    d0 <- d0 %>% mutate(exit = NA)
  } else {
    d1 <- load_year(y + 1)
    d0 <- d0 %>% mutate(exit = !(abi %in% d1$abi))
  }
  
  p <- file.path(PATH$pqe, glue("{y}/part.pq"))
  dir.create(dirname(p), showWarnings = FALSE, recursive = TRUE)
  arrow::write_parquet(d0, p)
  log_debug(glue("Save {p}"))
  log_tictoc("finish ", y)
}


```

# Aggregations

## national est, emp, entry and exit

```{r}
ds <- arrow::open_dataset(PATH$pqe, partitioning = "year")

d <- ds %>%
  group_by(year) %>%
  summarize(est = n(), entry = sum(entry), exit = sum(exit), emp = sum(emp), sales = sum(sales)) %>%
  collect() %>%
  arrange(year) %>%
  mutate(entry_rate = 200 * entry / (est + lag(est)), exit_rate = 200 * lag(exit) / (est + lag(est))) %>%
  mutate(data = "infogroup")

d1 <- pubdata$bds$get_df("") %>%
  rename(est = estabs, entry_rate = estabs_entry_rate, exit_rate = estabs_exit_rate) %>%
  select(year, est, emp, entry_rate, exit_rate) %>%
  filter(year %in% 1997:2017) %>%
  mutate(data = "bds")

d2 <- bind_rows(d, d1)

ggplot(d2, aes(year, est / 1e6, color = data)) +
  geom_line() +
  ylim(0, 20) + labs(title = "Number of establishments, mln", y = "est")

ggplot(d2, aes(year, emp / 1e6, color = data)) +
  geom_line() +
  ylim(0, 200) + labs(title = "Employment, mln", y = "emp")


d3 <- d2 %>%
  pivot_longer(cols = c(entry_rate, exit_rate)) %>%
  select(year, data, name, value)

ggplot(d3, aes(year, value, color = data, linetype = name)) +
  geom_line() +
  ylim(0, 30) + labs(title = "Entry and exit rates, %", y = "rate")

```

## by county-NAICS

```{r}
ds <- arrow::open_dataset(PATH$pqe, partitioning = "year")
p <- dirname(PATH$county)
if (!dir.exists(p)) dir.create(p)

for (year in 1997:2017) {
  d <- ds %>% 
    filter(year == !!year) %>%
    group_by(st, cty, naics) %>%
    summarize(sales = sum(sales), emp = sum(emp), .groups = "drop") %>%
    collect()
  p <- glue(PATH$county)
  write_rds(d, p, compress = "gz", version = 3)
  log_debug(glue("County agg {year} saved to {p}"))
}


```



