# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/nbs/geo_gazetteer.ipynb (unless otherwise specified).

__all__ = ['init', 'download_data', 'build_state_data', 'data', 'get_mapping']

# Cell
import pandas as pd

# Cell
data = {}

def init():
    if data:
        return
    download_data()
    build_state_data()

def download_data():
    df = pd.read_excel('https://www2.census.gov/programs-surveys/popest/geographies/2019/all-geocodes-v2019.xlsx',
                       skiprows=4, dtype='str')
    data['all-geocodes'] = df

    df = pd.read_csv('https://www2.census.gov/geo/docs/maps-data/data/gazetteer/2020_Gazetteer/2020_Gaz_counties_national.zip',
                     sep='\t', dtype='str')
    data['gaz-counties'] = df

def build_state_data():
    df = data['all-geocodes']
    df = df[df['Summary Level'] == '040']
    df = df.rename(columns={'Area Name (including legal/statistical area description)': 'STATE_NAME',
                            'State Code (FIPS)': 'STATE_CODE'})
    df = df[['STATE_CODE', 'STATE_NAME']]
    df0 = df

    df = data['gaz-counties']
    df = df.rename(columns={'USPS': 'STATE_ABBR'})
    df = df.drop_duplicates('STATE_ABBR')
    df['STATE_CODE'] = df['GEOID'].str[:2]
    df = df[['STATE_ABBR', 'STATE_CODE']]

    df = df0.merge(df, 'outer', 'STATE_CODE', indicator=True)
    assert (df['_merge'] == 'both').all()
    del df['_merge']

    data['states'] = df

# Cell
def get_mapping(key, val):
    init()
    if key.startswith('STATE'):
        df = data['states']
    else:
        raise Exception(f'Unknown field: {key}')
    return dict(df[[key, val]].itertuples(False))