[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rural Economy",
    "section": "",
    "text": "Project structure\n\nPublic datasets preparation: CBP, BDS, BEA IO tables, Census population estimates, NAICS classification.\nGeographic data: working with shapefiles of administrative units.\nRurality definitions: Census, OMB, ERS.\nAgricultural and food industries (AFI) definitions.\nInfoGroup data preparation.\nDynamics: summary statistics by geography and sector.\n\n\n\nControl panel"
  },
  {
    "objectID": "geography.html",
    "href": "geography.html",
    "title": "Geographic gazetteer",
    "section": "",
    "text": "Describe, retrieve and prepare dataframes with geographic boundaries of various geographic units of the USA."
  },
  {
    "objectID": "geography.html#shapefile-format",
    "href": "geography.html#shapefile-format",
    "title": "Geographic gazetteer",
    "section": "Shapefile format",
    "text": "Shapefile format\nWikipedia\nCensus Bureau shapefiles come as zipped folders and can be read directly with geopandas.\n\nXML metadata\nMost zipped shapefile folders contain XML documents with metadata. Helper functions here parse these files for inspection. In later years files ending with .iso.xml adhere to ISO standards and can be more easily parsed for feature descriptions."
  },
  {
    "objectID": "geography.html#scale",
    "href": "geography.html#scale",
    "title": "Geographic gazetteer",
    "section": "Scale",
    "text": "Scale\nShapefiles are available in different scale. TIGER is the most precise, then follows 1:500,000, then 1:5,000,000, and 1:20,000,000 is the lowest resolution.\nShapefile revisions change from year to year. Between year differences are clearly visible in all scales except TIGER.\nTable below compares boundaries of Tolland County, Connecticut, taken from shapefiles in different years and scales. “Length” column is is boundary length in shape units (degrees), and “points” is the total number of points in the polygon.\n\n\n\n\n  \n    \n      scale\n      length\n      points\n    \n  \n  \n    \n      tiger 2010\n      1.877432\n      2152\n    \n    \n      tiger 2020\n      1.877094\n      2097\n    \n    \n      500k 2010\n      1.852025\n      201\n    \n    \n      500k 2020\n      1.854092\n      236\n    \n    \n      5m 2010\n      1.767873\n      50\n    \n    \n      20m 2010\n      1.623553\n      27\n    \n  \n\n\n\nMap below visualizes boundary differences.\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook"
  },
  {
    "objectID": "geography.html#changes-over-time",
    "href": "geography.html#changes-over-time",
    "title": "Geographic gazetteer",
    "section": "Changes over time",
    "text": "Changes over time\nMajor changes to tract codes and shapes change after decennial censuses, with smaller changes in between years.\nThe first four digits of the tract code are “permanent.” When tracks get large (+8000 residents), tracts are split and 2 digit tag is used (same with the split of splits):\n\n\n\n1990\n2000\n2010\n\n\n\n\n1000\n1000.01\n1000.03\n\n\n1000\n1000.01\n1000.04\n\n\n1000\n1000.02\n1000.05\n\n\n1000\n1000.02\n1000.06\n\n\n\nThe naming convention for merges (population falls below 1,200) and boundary revisions are less clear-cut.\nWhen changes (splits, merges, redefinitions) occur, the relationship of new tracts to old tracts is crosswalked.\nThere is a master file, as well as two files that provided the identifiers of tracts that were “substantially changed” between decennials. The two files of significantly changed census tracts consist only of a list of census tracts that exhibited a change of 2.5-percent or greater. Tract relationships may be one-to-one, many-to-one, one-to-many, or many-to-many.\nRelationship files are currently available for 2010 (relative to 2000) and 2000 (relative to 1990).\n\n2010: data, metadata.\n2000: data, metadata.\n\n\nSplit\nAll tracts in \\(y_1\\) are a partition of a single tract in \\(y_0\\).\n\n\nJoin\nAll tracts in \\(y_0\\) are a partition of a single tract in \\(y_1\\).\n\n\nOther reshape\nArbitrary change in boundaries between two or more adjacent tracts. May include multiple splits, joins and boundary shifts."
  },
  {
    "objectID": "rurality.html",
    "href": "rurality.html",
    "title": "Defining rurality",
    "section": "",
    "text": "There are many different defitions of rurality, both within research community and in public policy. A recent systematic literature review (Nelson et al. 2021) identified 65 research articles with different rurality definitions. A selection of definitions is presented here. In many cases, non-rural is defined first, and everything outside of it is considered rural. Figure 4 visually compares what apprears to be rural in Wisconsin under different definitions.\nTwo major definitions which the Federal government uses to identify the rural status of an area are the Census Bureau’s “Urban Area” and the OMB’s “Core-Based Statistical Area”."
  },
  {
    "objectID": "rurality.html#rural-urban-commuting-area-ruca",
    "href": "rurality.html#rural-urban-commuting-area-ruca",
    "title": "Defining rurality",
    "section": "Rural-Urban Commuting Area (RUCA)",
    "text": "Rural-Urban Commuting Area (RUCA)\nSub-county division used by RUCA classification allows to identify parts of metro counties that are not strongly connected to respective urban areas. Likewise, there are parts of non-metro counties that are highly connected to an adjacent metro county, but are not big enough to make the entire county qualify for metro criteria.\nRural areas, derived from RUCA codes, often cross CBSA-based rural boundaries, as can be visually seen in Figure 4.\n\n\n\nPrimary RUCA codes, 2010 revision.\n  \n    \n      RUCA_CODE\n      RUCA_SHORT\n      RUCA_DESC\n    \n  \n  \n    \n      1\n      metro core\n      Metropolitan area core: primary flow within an urbanized area (UA)\n    \n    \n      2\n      metro high comm\n      Metropolitan area high commuting: primary flow 30% or more to a UA\n    \n    \n      3\n      metro low comm\n      Metropolitan area low commuting: primary flow 10% to 30% to a UA\n    \n    \n      4\n      micro core\n      Micropolitan area core: primary flow within an Urban Cluster of 10,000 to 49,999 (large UC)\n    \n    \n      5\n      micro high comm\n      Micropolitan high commuting: primary flow 30% or more to a large UC\n    \n    \n      6\n      micro low comm\n      Micropolitan low commuting: primary flow 10% to 30% to a large UC\n    \n    \n      7\n      UC core\n      Small town core: primary flow within an Urban Cluster of 2,500 to 9,999 (small UC)\n    \n    \n      8\n      UC high comm\n      Small town high commuting: primary flow 30% or more to a small UC\n    \n    \n      9\n      UC low comm\n      Small town low commuting: primary flow 10% to 30% to a small UC\n    \n    \n      10\n      rural\n      Rural areas: primary flow to a tract outside a UA or UC\n    \n    \n      99\n      NA\n      Not coded: Census tract has zero population and no rural-urban identifier information\n    \n  \n\n\n\n\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\nFigure 3: Classification of tracts in central Wisconsin, 2010 RUCA revision."
  },
  {
    "objectID": "io_for_dummies.html",
    "href": "io_for_dummies.html",
    "title": "IO for Dummies",
    "section": "",
    "text": "IO FundamentalsIO ExtentionsRegional IORegional IO ExtentionsNotes\n\n\nIntroduction\nI-O analysis, or “inter-industry analysis,” is an economic tool that measures the relationships between various industries in the economy. The framework measures flows of products from each of the sectors (as a producer/seller) to each of the sectors (as a purchaser/buyer); these interindustry flows, or transactions (or intersectoral flows – the terms industry and sector are often used interchangeably in input–output analysis) are measured for a particular time period (usually a year) and in monetary terms.\nFundamental Relationships\nAssume that the economy can be categorized into \\(n\\) sectors and denote the total output (production) of sector \\(i\\), \\(x_{i}\\). In addition, there are sales to purchasers who are external or exogenous to the industrial sectors that constitute the producers in the economy e.g., households, government, and foreign trade. The demand of these external units, is referred to as final demand. Denote total final demand for sector \\(i\\)’s product, \\(f_{i}\\). The accounting equation for the way sector \\(i\\) distributes its product to other sectors and to final demand is given by:\n\\[\\begin{equation}\nx_{i} = z_{i1} + ... + z_{ij} + ... + z_{in} + f_{i} = \\sum^{n}_{j=1} z_{ij} + f_{i}\n\\end{equation}\\]\nThe \\(z_{ij}\\) terms represent monetary transactions between pairs of sectors or interindustry sales (intermediate sales) by sector \\(i\\) to all sectors \\(j\\) (including itself, when \\(j = i\\)). This single equation represents sector \\(i\\)’s output. Similarly, there are output equations for each of the \\(n\\) sectors in the economy.\n\\[\\begin{align*}\n& x_{1} = z_{11} + ... + z_{1j} + ... + z_{1n} + f_{1} \\\\\n& \\vdots \\\\\n& x_{i} = z_{i1} + ... + z_{ij} + ... + z_{in} + f_{i} \\\\\n& \\vdots \\\\\n& x_{n} = z_{n1} + ... + z_{nj} + ... + z_{nn} + f_{n} \\\\\n\\end{align*}\\]\nThe total output, interindustry sales, and final demand are given by:\n\\[\\begin{equation}\n\\mathbf{x} =\n  \\begin{bmatrix}\n  x_{1} \\\\\n  \\vdots \\\\\n  x_{n} \\\\\n  \\end{bmatrix}, \\; \\;\n\\mathbf{Z} =\n  \\begin{bmatrix}\n    z_{11} & \\dots & z_{1n}\\\\\n    \\vdots & \\ddots & \\vdots\\\\\n    z_{n1} & \\dots & z_{nn} \\\\\n  \\end{bmatrix}\n, \\; \\text{  and } \\; \\;\n\\mathbf{f} =\n  \\begin{bmatrix}\n    f_{1} \\\\\n    \\vdots \\\\\n    f_{n} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nwith the output equations for distribution of each sector’s sales summarized in matrix notation as:\n\\[\\mathbf{x} = \\mathbf{Zi} + \\mathbf{f}\\]\nwhere \\(\\mathbf{i}\\) represent a column vector of 1’s. (Postmultiplication of a matrix by \\(\\mathbf{i}\\) creates a column vector whose elements are the row sums of the matrix. Similarly, premultiplication of a matrix by \\(\\mathbf{i'}\\) creates a row vector whose elements are the column sums of the matrix.)\nThe magnitudes of the interindustry flows can be recorded in a table, with sectors of origin (producers) listed on the left and the same sectors, now destinations (purchasers), listed across the top. From the column point of view, these show each sector’s inputs; from the row point of view the figures are each sector’s outputs; hence the name input–output table.\n\\[\\begin{equation}\n\\begin{matrix}\n&  & 1 & \\dots & j & \\dots & n \\\\\n\\hline\n1 & & z_{11} & \\dots & z_{1j} & \\dots & z_{1n} \\\\\n\\vdots & & \\vdots &  & \\vdots &  & \\vdots \\\\\ni & & z_{i1} & \\dots & z_{ij} & \\dots & z_{in} \\\\\n\\vdots & & \\vdots &  & \\vdots &  & \\vdots \\\\\nn & & z_{n1} & \\dots & z_{nj} & \\dots & z_{nn} \\\\\n\\hline\n\\end{matrix}\n\\end{equation}\\]\nTechnical Coefficients\nIn input–output studies, a fundamental assumption is that the interindustry flows from \\(i\\) to \\(j\\) depend entirely on the total output of sector \\(j\\) for that same time period. The quantity of the output of sector \\(i\\) absorbed by sector \\(j\\) per unit of its total output is identified as \\(a_{ij}\\) and called the input coefficient of sector \\(i\\)’s product in sector \\(j\\).\n\\(a_{ij} = z_{ij} / x_{j}\\)\nA complete table of input coefficients is called a structural matrix, given by: \\(\\mathbf{A} = \\left[a_{ij}\\right]\\). This ratio is also called the technical coefficient; the terms input–output coefficient and direct input coefficient are also used. This ratio specifies the required amount of industry \\(i\\)’s commodity used to produce of one unit of industry \\(j\\)’s commodity, or how much of the \\(i\\)th commodity is used for the production of each unit of the \\(j\\)th commodity. Therefore the \\(n \\times n\\) matrix of technical coefficients can be represented as\n\\[\\mathbf{A} = \\mathbf{Z\\hat{x}}^{-1}\\] where the “hat” over a vector denotes a diagonal matrix with the elements of the vector along the main diagonal i.e.,\n\\[\\begin{equation}\n\\mathbf{\\hat{x}^{-1}} =\n  \\begin{bmatrix}\n    \\dfrac{1}{x_{1}} & \\dots & 0\\\\\n    \\vdots & \\ddots & \\vdots\\\\\n    0 & \\dots & \\dfrac{1}{x_{n}} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nand the inverse must satisfy the usual requirement \\((\\mathbf{\\hat{x}})(\\mathbf{\\hat{x}})^{-1} = \\mathbf{I}\\).\nNote input–output analysis requires that a sector use inputs in fixed proportions. The form of the production function inherent in input–output systems are isoquant “curves” that exhibit constant output. Such Leontief production functions require inputs in fixed proportions where a fixed amount of each input is required to produce one unit of output. Given a set of fixed technical coefficients, the accounting equations for the distribution of total output to other sectors and to final demand can be rewritten as\n\\[\\begin{align*}\n& x_{1} = a_{11}x_{1} + ... + a_{1j}x_{i} + ... + a_{1n}x_{n} + f_{1} \\\\\n& \\vdots \\\\\n& x_{i} = a_{i1}x_{1} + ... + a_{ij}x_{i} + ... + a_{in}x_{n} + f_{i} \\\\\n& \\vdots \\\\\n& x_{n} = a_{n1}x_{1} + ... + a_{nj}x_{i} + ... + a_{nn}x_{n} + f_{n} \\\\\n\\end{align*}\\]\nOr in matrix notation as\n\\[\\mathbf{x} = \\mathbf{Ax} + \\mathbf{f}\\]\nThese equations serve to make explicit the dependence of interindustry flows on the total outputs of each sector.\nIO Analysis\nIn input–output analysis, one may pose the question: If the demands of the exogenous sectors were forecast to be some specific amounts next year, how much output from each of the sectors would be necessary to supply these final demands? From the point of view of this equation, the \\(f_{1} \\dots f_{n}\\) are known numbers, the \\(a_{ij}\\) are known coefficients, and the \\(f_{1} \\dots f_{n}\\) are to be found. Rearranging to answer the question gives:\n\\[\\begin{align*}\n& \\left(1- a_{11}\\right)x_{1} - ... - a_{1j}x_{i} - ... - a_{1n}x_{n} = f_{1} \\\\\n& \\vdots \\\\\n& a_{i1}x_{1} - ... - \\left(1- a_{ij}\\right)x_{i} - ... - a_{in}x_{n} = f_{i} \\\\\n& \\vdots \\\\\n& a_{n1}x_{1} - ... - a_{nj}x_{i} - ... - \\left(1- a_{nn}\\right)x_{n} = f_{n} \\\\\n\\end{align*}\\]\nOr in matrix notation as\n\\[\\left(\\mathbf{I} - \\mathbf{A}\\right)\\mathbf{x} = \\mathbf{f}\\] If \\(\\left(\\mathbf{I} - \\mathbf{A}\\right)\\) is singular; that is, \\(\\left(\\mathbf{I} - \\mathbf{A}\\right)^{-1}\\) exists, then the solution is given by \\[\\mathbf{x} = \\left(\\mathbf{I} - \\mathbf{A}\\right)^{-1}\\mathbf{f} = \\mathbf{Lf}\\] where \\(\\left(\\mathbf{I} - \\mathbf{A}\\right)^{-1} = \\mathbf{L} = \\left[l_{ij}\\right]\\) is known as the Leontief inverse or the total requirements matrix. Also recognizing that \\(\\partial{x_{i}}/\\partial{f_{j}} = l_{ij}\\), this equation makes clear the dependence of gross output on the value of final demand.\nThe input–output model allows us to deal equally easily with changes in demands and outputs instead of levels. Assuming that technology is unchanged \\(\\mathbf{A}^{base} = \\mathbf{A}^{new} = \\mathbf{A}\\) and \\(\\mathbf{L}^{base} = \\mathbf{L}^{new} = \\mathbf{L}\\), so \\(\\mathbf{x}^{base} = \\mathbf{Lf}^{base}\\) and \\(\\mathbf{x}^{new} = \\mathbf{Lf}^{new}\\); letting \\(\\Delta \\mathbf{x} = \\mathbf{x}^{new} - \\mathbf{x}^{base}\\) and \\(\\Delta \\mathbf{f} = \\mathbf{f}^{new} - \\mathbf{f}^{base}\\) provides\n\\[\\Delta \\mathbf{x} = \\mathbf{Lf}^{new} - \\mathbf{Lf}^{base} = \\mathbf{L}\\Delta\\mathbf{f}\\]\n\n\nCommodity-by-Industry Approach in Input–Output Models\nTo explicitly account for “non-characteristic” production such as secondary products and by-products a “commodity–industry” format was developed. This format allows for the fact that an industry may produce more than one commodity. The underlying motivational observation is that industries use commodities to make commodities. It is commodities that are the inputs to industrial processes and that are used to satisfy final demands. An industry can be thought of as defined by its primary product (commodity) but some industries also produce additional commodities as secondary products. In order to highlight the differentiation between commodities and industries, assume that the commodity index, \\(i\\), runs from 1 to \\(m\\) and the industry index, \\(j\\), runs from 1 to \\(n\\).\nThis more realistic classification scheme accounts for industrial production by commodity type rather than industry category. More recent studies, including the US National Tables complied for years since 1972, redefine all secondary production by establishing a set of “commodity-by-industry” accounts. In national accounting parlance, the commodity-by-industry interindustry transactions tables are also often referred to as Make or Supply, and Use tables. The core of modern I-O accounts consists of these two basic national-accounting tables.\nUse and Make Tables\nThe Use table shows the uses of commodities by intermediate and final users. The rows in the Use table present the commodities or products, and the columns display the industries and final users that utilize them. The sum of the entries in a row is the output of that commodity. The columns show the products consumed by each industry and the three components of “value added”—compensation of employees, taxes on production and imports less subsidies, and gross operating surplus. Value added is the difference between an industry’s output and the cost of its intermediate inputs, and total value added is equal to GDP. The sum of the entries in a column is that industry’s output.\nThe “industries use commodities” part of the “industries use commodities to make commodities” observation is quantified in the Use matrix \\(\\underset{(c \\times i)}{\\mathbf{U}} = [u_{ij}]\\) where \\(u_{ij}\\) is the value of purchases of commodity \\(i\\) by industry \\(j\\).\nIn conjunction with total industry output, \\(\\mathbf{x}\\), the parallel to the ordinary technical coefficient, \\(a_{ij}\\), is\n\\[b_{ij} = u_{ij}/x_{j}\\] Or in matrix notation as\n\\[\\mathbf{B} = \\mathbf{U\\hat{x}}^{-1}\\]\nThe Use matrix, \\(\\mathbf{U}\\) is constructed in dimensions of commodities (rows) by industries (columns) and, in matrix terms, the accounting identities are \\(\\mathbf{q} = \\mathbf{Ui} + \\mathbf{e}\\) and \\(\\mathbf{x'} = \\mathbf{i'U} + \\mathbf{v'}\\), where \\(\\mathbf{q}\\) is the vector of total commodity outputs, \\(\\mathbf{e}\\) is the vector of commodity final demands, \\(\\mathbf{v'}\\) is the (row) vector of total value-added inputs, \\(\\mathbf{x}\\), and is the vector of total industry outputs. The dimensions of \\(\\mathbf{B}\\) are therefore commodities-by-industries.\nThe Make table shows the production of commodities by industries, \\(\\underset{(i \\times c)}{\\mathbf{V}} = [v_{ij}]\\). The rows present the industries, and the columns display the commodities that the industries produce. Looking across a row, all the commodities produced by that industry are identified, and the sum of the entries is that industry’s output. Looking down a column, all the industries producing that commodity are identified, and the sum of the entries is the output of that commodity. Define the Make matrix (or output matrix) as \\(\\mathbf{V}\\), the row sums of which comprise the vector of total industry output, \\(\\mathbf{x} = \\mathbf{Vi}\\), and the column sums of which comprise total commodity output, \\(\\mathbf{q'} = \\mathbf{i'V}\\).\nAccounting Equations\nIn the commodity–industry framework, both total industry output (\\(\\mathbf{x}\\)) and total commodity output (\\(\\mathbf{q}\\)) are accounted for. From the data in the Make matrix, total output of any industry is found by summing over all commodities produced by that industry. These totals are the row sums of \\(\\mathbf{V}\\),\n\\[\\begin{equation}\nx_{j} = v_{j1} + ... + v_{jm}\n\\end{equation}\\]\nOr in matrix notation as\n\\[\\mathbf{x} = \\mathbf{Vi}\\]\ntotal output of any commodity can be found by summing over all industries that produce the commodity. These totals are the column sums of \\(\\mathbf{V}\\).\n\\[\\begin{equation}\nq_{j} = v_{1j} + ... + v_{nj}\n\\end{equation}\\]\nOr in matrix notation as\n\\[\\mathbf{q'} = \\mathbf{i'V} \\;  \\; \\text{ or } \\;\\;   \\mathbf{q} = \\mathbf{V'i}\\] Alternatively, from the Use matrix\n\\[\\begin{equation}\nq_{j} = u_{j1} + ... + u_{jn} + e_{j}\n\\end{equation}\\]\nOr in matrix notation as\n\\[\\mathbf{q} = \\mathbf{Ui} + \\mathbf{e}\\] The commodity–industry approach employs the input matrix, \\(\\mathbf{B}\\), from the Use table, where \\(\\mathbf{U} = \\mathbf{B\\hat{x}}\\) much in the same way as the input \\(\\mathbf{A}\\) matrix of technical coefficients, giving\n\\[\\mathbf{q} = \\mathbf{Bx} + \\mathbf{e}\\] akin to the ordinary \\(\\mathbf{x} = \\mathbf{Ax} + \\mathbf{f}\\) specification. However, unlike the ordinary specification one cannot generate a total requirements matrix (Leontief inverse) because of the presence of both commodity output (\\(\\mathbf{q}\\)) on the left-hand side and industry output (\\(\\mathbf{x}\\)) on the right-hand side.\nOne solution to this problem is to find an expression transforming industry outputs, \\(\\mathbf{x}\\), to commodity outputs, \\(\\mathbf{q}\\) – or, alternatively, to transform commodity outputs (and commodity final demand, \\(\\mathbf{e}\\)) into industry terms. The data needed for such transformations are to be found in the Make matrix, whose row sums are industry outputs and whose column sums are commodity outputs.\nTechnology and Total Requirement Matrices\nThe direct requirements table shows the amount of a commodity that is required by an industry to produce a dollar of the industry’s output. Total requirements tables show the relationship between final uses and gross output. There are three variations of total requirements tables. The commodity-by-commodity total requirements table shows the production required, both directly and indirectly, of the commodity at the beginning of each row per dollar of delivery to final use of the commodity at the top of the column. The industry-by-commodity total requirements table shows the production required, both directly and indirectly, from the industry at the beginning of the row per dollar of delivery to final use of the commodity at the top of the column. The industry-by-industry total requirements table shows the production required, both directly and indirectly, from the industry at the beginning of the row per dollar of delivery to final use of the industry at the top of the column.\nDefine \\(d_{ij} = v_{ij}/q_{j}\\), so that \\(d_{ij}\\) denotes the fraction of total commodity \\(j\\) output that was produced by industry \\(i\\). Therefore a matrix of commodity output proportions, \\(\\underset{(i \\times c)}{\\mathbf{D}} = [d_{ij}]\\) is denoted as\n\\[\\mathbf{D} = \\mathbf{V\\hat{q}}^{-1}\\] \\(\\mathbf{D}\\) is often called the market shares matrix, and by definition, each column sum in \\(\\mathbf{D}\\) is unity.\nDefine \\(c_{ij} = v_{ij}/x_{i}\\), so that \\(c_{ij}\\) denotes the fraction of total industry \\(i\\) output that is in the form of commodity \\(j\\). These industry output proportions, \\(\\underset{(c \\times i)}{\\mathbf{C}} = [c_{ij}]\\) are denoted as\n\\[\\mathbf{C} = \\mathbf{V'\\hat{x}}^{-1}\\] \\(\\mathbf{C}\\) is often called the product mix matrix or the commodity mix matrix, and \\(\\mathbf{V'}\\) is refered to as the supply matrix. By definition, each column sum in \\(\\mathbf{D}\\) is unity.\nThese output matrices offer two possible sources from which to generate the technology and total requirement matrices from the Make/Use tables. Let the Direct Requirements Matrices be given by\n\\[\\begin{equation}\n\\underset{(i \\times i)}{\\mathbf{A}_{C}}  = \\mathbf{C}^{-1}\\mathbf{B} \\; \\text{, } \\; \\;\n%\n\\underset{(i \\times i)}{\\mathbf{A}_{I}}  = \\mathbf{D}\\mathbf{B} \\; \\text{, } \\; \\;\n%\n\\underset{(c \\times c)}{\\mathbf{A}_{C}}  = \\mathbf{B}\\mathbf{C}^{-1} \\; \\text{, and } \\; \\;\n%\n\\underset{(c \\times c)}{\\mathbf{A}_{I}}  = \\mathbf{B}\\mathbf{D}\n\\end{equation}\\]\nCommodity-Demand Driven Models\nUsing \\(\\mathbf{D}\\), one can derive the commodity-by-commodity total requirements matrix, connecting commodity final demand to commodity output by:\n\\[\\mathbf{q} = \\left(\\mathbf{I} - \\mathbf{BD}\\right)^{-1}\\mathbf{e}\\] and the industry-by-commodity total requirements matrix, connecting commodity final demand to industry output by:\n\\[\\mathbf{x} = [\\mathbf{D}\\left(\\mathbf{I} - \\mathbf{BD}\\right)^{-1}]\\mathbf{e}\\]\nUsing \\(\\mathbf{D}\\), one can derive the commodity-by-commodity total requirements matrix, connecting commodity final demand to commodity output by:\n\\[\\mathbf{q} = (\\left(\\mathbf{I} - \\mathbf{BC}\\right)^{-1})^{-1}\\mathbf{e}\\] and the industry-by-commodity total requirements matrix, connecting commodity final demand to industry output by:\n\\[\\mathbf{x} = [\\mathbf{C}^{-1}(\\mathbf{I} - \\mathbf{BC}^{-1})^{-1}]\\mathbf{e}\\]\nIndustry-Demand Driven Models\nIt is also possible to derive total requirements matrices for industry-demand driven models, replacing \\(\\mathbf{e}\\) by an equivalent expression involving \\(\\mathbf{f}\\) in appropriate equations\nUsing \\(\\mathbf{D}\\), one can derive the industry-by-industry total requirements matrix, connecting industry final demand to industry output by:\n\\[\\mathbf{q} = \\left(\\mathbf{I} - \\mathbf{DB}\\right)^{-1}\\mathbf{f}\\] and the industry-by-commodity total requirements matrix, connecting commodity final demand to industry output by:\n\\[\\mathbf{x} = [\\mathbf{D}^{-1}\\left(\\mathbf{I} - \\mathbf{DB}\\right)^{-1}]\\mathbf{f}\\]\nUsing \\(\\mathbf{D}\\), one can derive the commodity-by-commodity total requirements matrix, connecting commodity final demand to commodity output by:\n\\[\\mathbf{q} = ((\\mathbf{I} - \\mathbf{C}^{-1} \\mathbf{B})^{-1})^{-1}\\mathbf{f}\\] and the industry-by-commodity total requirements matrix, connecting commodity final demand to industry output by:\n\\[\\mathbf{x} = [\\mathbf{C}(\\mathbf{I} - \\mathbf{C}^{-1}\\mathbf{B})^{-1}]\\mathbf{f}\\]\n\n\nInput–Output Models at the Regional Level\nThere are at least two basic features of a regional economy that influence the characteristics of a regional input–output study.\nFirst, although the national input–output coefficients are averages of data from individual producers in specific regions, the structure of production in a particular region may be identical to or it may differ markedly from the national input–output tables. Secondly, the smaller the economic area the more dependent that area’s economy is on trade with “outside” areas – transactions that cross the region’s borders – both for sales of regional outputs and purchases of inputs needed for production. That is, exports will be relatively more important and a higher proportion of inputs will be imported from outside the region.\nSingle-Region Models\nLet superscript \\(r\\) designate “region \\(r\\)” in the same way that subscript \\(i\\) denotes “sector \\(i\\).” Thus, just as \\(X_{i}\\) denotes the gross output of sector \\(i\\), let \\(\\mathbf{x^{r}} = [x^{r}_{i}]\\) denote the vector of gross output of sectors in region \\(r\\). Similarly, \\(\\mathbf{f^{r}} = [f^{r}_{i}]\\) represents the vector of exogenous demand for goods made in region \\(r\\).\nThe problem is that only a national technical coefficients matrix, \\(\\mathbf{A}\\), is available, but what is needed is a matrix showing inputs from firms in the region to production in that region. Denote this matrix by \\(\\mathbf{A^{rr}} = [a^{rr}_{ij}]\\), where \\(a^{rr}_{ij}\\) is the amount of input from sector \\(i\\) in \\(r\\) per dollar’s worth of output of sector \\(j\\) in \\(r\\). For now assume that local producers use the same production recipes as the national coefficients table, meaning that the technology of production in each sector in region \\(r\\) is the same as in the nation as a whole. To translate regional final demands into outputs of regional firms (\\(\\mathbf{x^{r}}\\)), the national coefficients matrix must be modified to produce \\(\\mathbf{A^{rr}}\\) (locally produced goods in local production).\nRegional Supply Percentages\nOne option is through the use of estimated regional supply percentages, one for each sector in the regional economy, designed to show the percentage of the total required outputs from each sector that could be expected to originate within the region. One way to estimate these percentages requires knowledge of (1) total regional output of each sector \\(i\\), \\(x^{r}_{i}\\), (2) exports of the product of each sector \\(i\\) from region \\(r\\), \\(e^{r}_{i}\\), and (3) imports of good \\(i\\) into region \\(r\\), \\(m^{r}_{i}\\). Then, one can form an expression for the proportion of the total amount of good \\(i\\) available in region \\(r\\) that was produced in \\(r\\) (the regional supply proportion of good \\(i\\)). Denote this by \\(p^{r}_{i}\\), where\n\\[p^{r}_{i} = \\frac{x^{r}_{i} - e^{r}_{i}}{x^{r}_{i} - e^{r}_{i} + m^{r}_{i}}\\]\nThe numerator is the locally produced amount of \\(i\\) that is available to purchasers in \\(r\\); the denominator is the total amount of \\(i\\) available in \\(r\\), either produced locally or imported. (Thus \\(p^{r}_{i} \\times 100\\) is an estimate of the regional supply percentage for sector \\(i\\) in region \\(r\\) i.e., the percentage of good \\(i\\) available in \\(r\\) that was produced there.) Each element in the \\(i\\)th row of the national coefficients matrix could be multiplied by \\(p^{r}_{i}\\) to generate a row of locally produced direct input coefficients of good \\(i\\) to each local producer. Arranging these proportions in an \\(n\\)-element column vector, \\(\\mathbf{p^{r}}\\), then a working estimate of the regional matrix will be \\(\\mathbf{A^{rr} = \\hat{p}^{r}A}\\).\nRegional Coefficients\nIn even very disaggregated national input–output tables sectors are made up of a variety of products. And firms within that sector, located in various regions of the country, will produce only a small number of those products. This illustrates the so-called product-mix problem in input–output; firms classified in the same sector actually produce different sets of products. The most straightforward way to avoid this problem is to survey firms in the region and construct what is called a survey-based regional input–output table.\nLet \\(z^{rr}_{ij}\\) denote the dollar flow of goods from sector \\(i\\) in region \\(r\\) to sector \\(j\\) in region \\(r\\). Just as the order of subscripts is “from–to” with respect to sectors, the order of superscripts indicates “from–to” with respect to geographic locations. Given a complete set of data on \\(z^{rr}_{ij}\\) for all \\(n\\) sectors in the regional economy, and also data on gross outputs (\\(x^{r}_{j}\\)) of each sector in the region, a set of regional input coefficients could be derived as\n\\[a^{rr}_{ij} = \\frac{z^{rr}_{ij}} {x^{r}_{j}}\\]\nLet \\(\\underset{(n \\times n)}{\\mathbf{Z^{rr}}} = [z^{rr}_{ij}]\\) and \\(\\underset{(n \\times 1)}{\\mathbf{x^{r}}} = [x^{r}_{j}]\\); then the regional input coefficients matrix is\n\\[\\mathbf{A^{rr}} = \\mathbf{Z^{rr}\\left(\\hat{x}^{r}\\right)^{-1} }\\]\nThis matrix is approximated in the formula above by \\(\\mathbf{\\hat{p}^{r}A}\\). Note that this specification utilizes intraregional information only.\nThe impact on regional production of a final-demand change in region \\(r\\) is found as\n\\[\\mathbf{x^{r}} = (\\mathbf{I} - \\mathbf{A^{rr})^{-1}f^{r} }\\]\nMany-Region Input–Output Models\nSingle-region models, of the sort just described, represent one approach to modeling a regional economy in input–output terms. What they fail to do, however, is to recognize in an operational way the interconnections between regions. The one region of interest (region \\(r\\)) is “disconnected” from the rest of the country within which it is located, in the sense that its production recipes are reflected in an intraregional matrix, \\(\\mathbf{A^{rr}}\\). A fundamental problem in many-region input–output modeling is therefore estimation of transactions between regions. One approach, the interregional model, requires a complete (ideal) set of both intra- and interregional data.\nLet \\(z^{rr}_{ij}\\) denote the dollar flow of goods from sector \\(i\\) in region \\(r\\) to sector \\(j\\) in region \\(r\\). For the two-region case, this means knowing \\(\\mathbf{x^{r}} = [x^{r}_{i}]\\), \\(\\mathbf{x^{s}} = [x^{s}_{i}]\\), \\(\\mathbf{Z^{rr}} = [z^{rr}_{ij}]\\), \\(\\mathbf{Z^{ss}} = [z^{ss}_{ij}]\\), \\(\\mathbf{Z^{sr}} = [z^{sr}_{ij}]\\) - recording transactions from sector \\(i\\) in region \\(r\\) to sector \\(j\\) in region \\(s\\) – \\(\\mathbf{Z^{rs}} = [z^{rs}_{ij}]\\) – in which flows from \\(s\\) to \\(r\\) are captured. It is the last two matrices that cause the most trouble. In practice, it is never the case that one has such detailed information, and the requirements grow quickly with the number of regions – a three-region model has six interregional matrices, a four-region model has 12, and so on.\nMany alternative forms of many-region input–output models exist. Chronologically they are\n\nthe interregional input–output model (IRIO) structure (often labeled the “Isard model”),\nthe intranational input–output model (often referred to as a “balanced regional model”),\nthe multiregional input–output model (MRIO) (often labeled a “Chenery–Moses model”),\nand a gravity-model approach of interregional flows in a connected region input–output model.\n\nTwo-Region Interregional Input–Output Model\nUsing \\(r\\) and \\(s\\), for the two regions, let there be three producing sectors (1, 2, 3) in region \\(r\\) and two (1, 2) in region \\(s\\). Suppose that one has information for region \\(r\\) on both intraregional flows, \\(z^{rr}_{ij}\\), and interregional flows, \\(z^{sr}_{ij}\\). There will be nine of the former and six of the latter. Suppose, that the same kind of information is available on the use of inputs by firms located in region \\(s\\), \\(z^{rs}_{ij}\\) and \\(z^{ss}_{ij}\\). This complete table of intraregional and interregional data can be represented as\n\\[\\begin{equation}\n\\mathbf{Z = \\begin{bmatrix}\n      \\mathbf{Z^{rr}} & \\mathbf{Z^{rs}}\\\\\n      \\mathbf{Z^{sr}} & \\mathbf{Z^{ss}}\n      \\end{bmatrix} }\n\\end{equation}\\]\nThe columns of \\(\\mathbf{Z}\\) represent purchases of locally produced inputs and inputs from the other region, by firms in both regions. The rows of \\(\\mathbf{Z}\\) represent sales by firms to each sector in their region and how much they sold to sectors in the other region. Note, the off-diagonal matrices of explicit interregional linkages, \\(\\mathbf{Z^{rs}}\\) and \\(\\mathbf{Z^{sr}}\\), need not be square. The on-diagonal matrices of intraregional linkages, \\(\\mathbf{Z^{rr}}\\) and \\(\\mathbf{Z^{ss}}\\), are always square. The elements in \\(\\mathbf{Z^{rs}}\\) represent “exports” from region \\(r\\) and simultaneously “imports” to region \\(s\\), it is usual in regional input–output work to refer to these as interregional trade (or simply trade) flows and to use the terms export and import when dealing with foreign trade crossing national boundaries.\nIn the two-region interregional input–output model, the part of \\(f_{i}\\) that represents sales of sector \\(i\\)’s product to the productive sectors in the other region (but not to consumers in the other region) is removed from the final-demand category and specified explicitly. For our two-region example, the output of sector 1 in region \\(r\\) would be expressed as\n\\[x^{r}_{1} = z^{rr}_{11} + z^{rr}_{12} + z^{rr}_{13} + z^{rs}_{11} + z^{rs}_{12} + f^{r}_{1}\\]\nThe regional input coefficients for region \\(r\\) are the same as the single region intraregional specification\n\\[a^{rr}_{ij} = \\frac{z^{rr}_{ij}} {x^{r}_{j}}\\]\nAnd similarly for region \\(s\\) the regional input coefficients are\n\\[a^{ss}_{ij} = \\frac{z^{ss}_{ij}} {x^{s}_{j}}\\]\nThe interregional trade coefficients are found in the same manner, where the denominators are gross outputs of sectors in the receiving region.\n\n\\(a^{rs}_{ij} = \\frac{z^{rs}_{ij}} {x^{s}_{j}}\\) and \\(a^{sr}_{ij} = \\frac{z^{sr}_{ij}} {x^{r}_{j}}\\)\n\nUsing these regional input and trade coefficients, the output of sector 1 in region \\(r\\) can be re-expressed as\n\\[x^{r}_{1} = a^{rr}_{11}x^{r}_{1} + a^{rr}_{12}x^{r}_{2} + a^{rr}_{13}x^{r}_{3} + a^{rs}_{11}x^{s}_{1} + a^{rs}_{12}x^{s}_{2} + f^{r}_{1}\\] Note the regional input coefficients matrices are given by \\[\\mathbf{A^{rr}} = \\mathbf{Z^{rr}\\left(\\hat{x}^{r}\\right)^{-1}}\\]\n\\[\\mathbf{A^{rs}} = \\mathbf{Z^{rs}\\left(\\hat{x}^{s}\\right)^{-1}}\\] \\[\\mathbf{A^{sr}} = \\mathbf{Z^{sr}\\left(\\hat{x}^{r}\\right)^{-1}}\\]\n\\[\\mathbf{A^{ss}} = \\mathbf{Z^{ss}\\left(\\hat{x}^{s}\\right)^{-1}}\\]\nsuch that the final demand equation for each region can be expressed as\n\\[\\left(\\mathbf{I} - \\mathbf{A^{rr}}\\right)\\mathbf{x^{r}} - \\mathbf{A^{rs}x^{s}} = \\mathbf{f^{r}}\\]\n\\[-\\mathbf{A^{sr}x^{r}} + \\left(\\mathbf{I} - \\mathbf{A^{ss}}\\right)\\mathbf{x^{s}} = \\mathbf{f^{s}}\\]\nand the complete coefficients matrix for the two-region interregional model is defined as\n\\[\\begin{equation}\n\\mathbf{A = \\begin{bmatrix}\n          \\mathbf{A^{rr}} & \\mathbf{A^{rs}}\\\\\n          \\mathbf{A^{sr}} & \\mathbf{A^{ss}}\n          \\end{bmatrix}}\n\\end{equation}\\]\nUsing an interregional model of this kind for analysis, not only is stability of the (intra)regional input coefficients necessary (the elements of \\(\\mathbf{A^{rr}}\\) and \\(\\mathbf{A^{ss}}\\)), but also interregional input coefficients in \\(\\mathbf{A^{rs}}\\) and \\(\\mathbf{A^{sr}}\\) are assumed unvarying over time. Thus both the structure of production in each region and interregional trade patterns are “frozen” in this model.\nThe advantage is that the model captures the magnitude of effects on each sector in each region; interregional linkages are made specific by sector in the supplying region and by sector in the receiving region. The accompanying disadvantages are the increased data needs and the necessary assumption of interregional trading relationship constancy. It is not always easy to accept the idea of constant input coefficients, in the national input–output model, and it is even more difficult to believe that imports of good \\(i\\) per dollar’s worth of sector \\(j\\) output in a specific region remain constant, no matter how much sector \\(j\\)’s output changes.\nInterregional Feedback\nSuppose that \\(\\mathbf{x^{r}}\\), \\(\\mathbf{x^{s}}\\), \\(\\mathbf{f^{r}}\\), and \\(\\mathbf{f^{s}}\\) are marginal “changes” \\(\\Delta\\mathbf{x^{r}}\\), \\(\\Delta\\mathbf{x^{s}}\\), \\(\\Delta\\mathbf{f^{r}}\\), and \\(\\Delta\\mathbf{f^{s}}\\). And for simplicity assume \\(\\Delta\\mathbf{f^{s}} = 0\\) such that \\(\\mathbf{x^{s}}\\) is\n\\[\\mathbf{x^{s}} = \\left(\\mathbf{I} - \\mathbf{A^{ss}}\\right)^{-1} \\mathbf{A^{sr}x^{r}}\\] Solving for final demand in region \\(r\\) gives\n\\[\\left(\\mathbf{I} - \\mathbf{A^{rr}}\\right)\\mathbf{x^{r}} - \\mathbf{A^{rs}} \\left(\\mathbf{I} - \\mathbf{A^{ss}}\\right)^{-1} \\mathbf{A^{sr}x^{r}} = \\mathbf{f^{r}}\\] Note the same specification for the single region would be \\(\\left(\\mathbf{I} - \\mathbf{A^{rr}}\\right)\\mathbf{x^{r}} = \\mathbf{f^{r}}\\). The “extra” second term \\(\\mathbf{A^{rs}} \\left(\\mathbf{I} - \\mathbf{A^{ss}}\\right)^{-1} \\mathbf{A^{sr}x^{r}}\\) represents the added demands made on the output of region \\(r\\) because of interregional trade linkages: an interregional feedback term. The strength and importance of interregional linkages depend not only on the elements of the interregional input coefficients matrices \\(\\mathbf{-A^{rs}}\\) and \\(\\mathbf{A^{sr}}\\), but also on the full set of regional input coefficients in the other region, as represented by \\(\\left(\\mathbf{I} - \\mathbf{A^{ss}}\\right)^{-1}\\). It is these kinds of spatial linkages that distinguish complete interregional models from single-region models. In terms of outputs, the single- and two region models will generate \\(\\mathbf{x^{r}} = \\left(\\mathbf{I} - \\mathbf{A^{rr}}\\right)\\mathbf{f^{r}}\\) and \\(\\mathbf{x^{r}} = \\left(\\mathbf{I} - \\mathbf{A^{rr}} - \\mathbf{A^{rs}L^{ss}A^{sr}}\\right)\\mathbf{f^{r}}\\), respectively. Clearly, the interregional input–output model requires a large amount of detailed data. For this reason, there have been few real-world applications.\nMRIO Model - The Multiregional Approach to IRIO\nGenerally it is impossible to implement IRIO for many regions and/or sectors because of the enormous amounts of data that it requires. One attempt toward operationalization through simplification is the “Chenery–Moses” or MRIO approach.\nThe MRIO model uses a regional technical coefficients matrix, \\(\\mathbf{A^{r}}\\), in place of the regional input coefficients matrix, \\(\\mathbf{A^{rr}}\\). These regional technical coefficients, \\(a^{r}_{ij}\\), can be produced from responses to the question “How much sector \\(i\\) product did you buy last year in making your output?” Information regarding the region of origin of a given input is ignored; one only needs information on the dollars’ worth of input from sector \\(i\\) used by sector \\(j\\) in region \\(r\\). These transactions are denoted by \\(z^{\\cdot r}_{ij}\\), where the dot indicates that all possible geographical locations for sector \\(i\\) are lumped together. These coefficients are defined as \\(a^{r}_{ij} = \\frac{z^{\\cdot r}_{ij}}{x^{r}_{j}}\\) and \\(\\mathbf{A^{r}} = \\left[ a^{r}_{ij} \\right]\\).\nIn practice, when actual regional data on technology are not available, estimates of regional technical coefficients matrices are made using what is known as the product-mix approach. The basic assumption is that input requirements per unit of output are constant from region to region at a very fine level of industrial classification, but that an important distinguishing characteristic of production at the regional level is the composition of sector outputs, when one is dealing with more aggregate sectors.\nThe Interregional Tables\nThe interconnections among regions in the multiregional input–output model are captured in an entirely different way from the interregional input–output framework. Trade flows in the multiregional model are estimated by sector, again to take advantage of the kinds of data likely to be available. For sector \\(i\\), let \\(z^{rs}_{i}\\) denote the dollar flow of good \\(i\\) from region \\(r\\) to region \\(s\\), irrespective of the sector of destination in the receiving region. These flows will include shipments to the producing sectors in region \\(s\\) as well as to final demand in \\(s\\).\n\\[\\begin{equation}\n\\begin{matrix}\n&  & 1 & 2 & \\dots & s & \\dots & p \\\\\n\\hline\n1 & & z^{11}_{i} & z^{12}_{i} & \\dots & z^{1s}_{i} & \\dots & z^{1p}_{i} \\\\\n2 & & z^{21}_{i} & z^{22}_{i} & \\dots & z^{2s}_{i} & \\dots & z^{2p}_{i} \\\\\n\\vdots & & \\vdots & \\vdots & \\dots & \\vdots & \\dots & \\vdots \\\\\nr & & z^{r1}_{i} & z^{r2}_{i} & \\dots & z^{rs}_{i} & \\dots & z^{rp}_{i} \\\\\n\\vdots & & \\vdots & \\vdots &  & \\vdots &   & \\vdots \\\\\np & & z^{p1}_{i} & z^{p2}_{i} & \\dots & z^{ps}_{i} & \\dots & z^{pp}_{i} \\\\\nTotal & & T^{1}_{i} & T^{2}_{i} & \\dots & T^{s}_{i} & \\dots & T^{p}_{i} \\\\\n\\hline\n\\end{matrix}\n\\end{equation}\\]\nNote that each of the column sums in this table represents the total shipments of good \\(i\\) into that region from all of the regions in the model; this total, for column \\(s\\), is denoted in the table for good \\(i\\) by \\(T^{s}_{i}\\):\n\\[T^{s}_{i} = z^{1s}_{i} + z^{2s}_{i} + \\dots + z^{rs}_{i} + \\dots + z^{ps}_{i}\\]\nIf each element in column \\(s\\) is divided by this total, one has coefficients denoting the proportion of all of good \\(i\\) used in \\(s\\) that comes from each region \\(r \\; \\left(r = 1, \\dots, p \\right)\\). These proportions are denoted \\(c^{rs}_{i}\\):\n\\[c^{rs}_{i} = \\frac{z^{rs}_{i}}{T^{s}_{i}}\\]\nFor each possible origin destination pair of regions, denote the n-element column vector:\n\\[\\begin{equation}\n\\mathbf{c^{rs}} =\n  \\begin{bmatrix}\n  c^{rs}_{1} \\\\\n  \\vdots \\\\\n  c^{rs}_{n} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nThese elements show, for region \\(s\\), the proportion of the total amount of each good used in \\(s\\) that comes from region \\(r\\). Note that there will be intraregional matrices in this set. For example, \\(\\mathbf{\\hat{c}^{ss}}\\) whose elements, \\(c^{ss}_{i} = \\frac{z^{ss}_{i}}{T^{s}_{i}}\\), indicate the proportion of good \\(i\\) used in region \\(s\\) that came from within region \\(s\\).\nThe Multiregional Model\nConsider a small two-sector, two-region example, where\n\\[\\begin{equation}\n\\mathbf{A^{r}} =\n  \\begin{bmatrix}\n  a^{r}_{11} & a^{r}_{11} \\\\\n  a^{r}_{21} & a^{r}_{22} \\\\\n  \\end{bmatrix}, \\; \\;\n  \\mathbf{A^{s}} =\n  \\begin{bmatrix}\n  a^{s}_{11} & a^{s}_{11} \\\\\n  a^{s}_{21} & a^{s}_{22} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\n\\[\\begin{equation}\n\\mathbf{\\hat{c}^{rs}} =\n  \\begin{bmatrix}\n  c^{rs}_{1} & 0 \\\\\n  0 & c^{rs}_{2} \\\\\n  \\end{bmatrix}, \\; \\;\n  \\mathbf{\\hat{c}^{ss}} =\n  \\begin{bmatrix}\n  c^{ss}_{1} & 0 \\\\\n  0 & c^{ss}_{2} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nThen the multiregional input–output model uses the matrix\n\\[\\begin{equation}\n\\mathbf{\\hat{c}^{rs}A^{s}} =\n  \\begin{bmatrix}\n  c^{rs}_{1}a^{s}_{11} & c^{rs}_{1}a^{s}_{11} \\\\\n  c^{rs}_{2}a^{s}_{21} & c^{rs}_{2}a^{s}_{22} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nas an estimate of \\(\\mathbf{A^{rs}}\\) in the interregional input–output model. Similarly,\n\\[\\begin{equation}\n\\mathbf{\\hat{c}^{ss}A^{s}} =\n  \\begin{bmatrix}\n  c^{ss}_{1}a^{s}_{11} & c^{ss}_{1}a^{s}_{11} \\\\\n  c^{ss}_{2}a^{s}_{21} & c^{ss}_{2}a^{s}_{22} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nas an estimate of \\(\\mathbf{A^{ss}}\\) in the interregional input–output model. Therefore the multiregional input–output model embodies the same assumptions as regional models with estimated supply percentages.\nThe multiregional input–output counterpart to the interregional model is therefore\n\\[\\left(\\mathbf{I} - \\mathbf{\\hat{c}^{rr}A^{r}}\\right)\\mathbf{x^{r}} - \\mathbf{\\hat{c}^{rs}A^{s}x^{s}} = \\mathbf{\\hat{c}^{rr}f^{r}} + \\mathbf{\\hat{c}^{rs}f^{s}}\\]\n\\[ -\\mathbf{\\hat{c}^{sr}A^{r}x^{r}} \\left(\\mathbf{I} - \\mathbf{\\hat{c}^{ss}A^{s}}\\right)\\mathbf{x^{s}} = \\mathbf{\\hat{c}^{rs}f^{r}} + \\mathbf{\\hat{c}^{ss}f^{s}}\\]\nOr in matrix notation as\n\\[\\left(\\mathbf{I} - \\mathbf{CA}\\right)\\mathbf{x} = \\mathbf{Cf}\\]\nLet\n\\[\\begin{equation}\n\\mathbf{A} =\n  \\begin{bmatrix}\n    \\mathbf{A^{r}} & 0 \\\\\n    0 & \\mathbf{A^{s}} \\\\\n  \\end{bmatrix}, \\; \\;\n\\mathbf{C} =\n  \\begin{bmatrix}\n    \\mathbf{\\hat{c}^{rr}} & \\mathbf{\\hat{c}^{rs}} \\\\\n    \\mathbf{\\hat{c}^{sr}} & \\mathbf{\\hat{c}^{ss}} \\\\\n    \\end{bmatrix}, \\; \\;\n  \\mathbf{x} =\n    \\begin{bmatrix}\n      \\mathbf{x^{r}} \\\\\n      \\mathbf{x^{s}} \\\\\n    \\end{bmatrix}, \\;  \\text{ and} \\; \\;\n  \\mathbf{f} =\n    \\begin{bmatrix}\n      \\mathbf{f^{r}} \\\\\n      \\mathbf{f^{s}} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nGiving the solution as\n\\[\\mathbf{x} = \\left(\\mathbf{I} - \\mathbf{CA}\\right)^{-1} \\mathbf{Cf}\\]\nSimilarly, when there are \\(p\\) regions, let\n\\[\\begin{equation}\n\\mathbf{A} =\n  \\begin{bmatrix}\n      \\mathbf{A^{1}} & 0 & \\dots &  0 \\\\\n      0 & \\mathbf{A^{2}} & \\dots &  0 \\\\\n      \\vdots & \\vdots & \\ddots &  \\vdots \\\\\n      0 & 0 & \\dots & \\mathbf{A^{p}} \\\\\n  \\end{bmatrix}, \\; \\;\n\\mathbf{c} =\n  \\begin{bmatrix}\n      \\mathbf{\\hat{c}^{11}} & \\dots &  \\mathbf{\\hat{c}^{1p}} \\\\\n      \\mathbf{\\hat{c}^{21}} & \\dots &  \\mathbf{\\hat{c}^{2p}} \\\\\n      \\vdots & \\ddots &  \\vdots \\\\\n      \\mathbf{\\hat{c}^{p1}} & \\dots &  \\mathbf{\\hat{c}^{pp}} \\\\\n  \\end{bmatrix}, \\; \\;\n  \\mathbf{x} =\n    \\begin{bmatrix}\n      \\mathbf{x^{1}} \\\\\n      \\mathbf{x^{2}} \\\\\n      \\vdots \\\\\n      \\mathbf{x^{p}} \\\\\n    \\end{bmatrix}, \\; \\text{ and} \\; \\;\n  \\mathbf{f} =\n    \\begin{bmatrix}\n      \\mathbf{f^{1}} \\\\\n      \\mathbf{f^{2}} \\\\\n      \\vdots \\\\\n      \\mathbf{f^{p}} \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nIn this way \\(\\left(\\mathbf{I} - \\mathbf{CA}\\right)\\mathbf{x} = \\mathbf{Cf}\\) and \\(\\mathbf{x} = \\left(\\mathbf{I} - \\mathbf{CA}\\right)^{-1} \\mathbf{Cf}\\) still still represents the system and its solution.\nFrom the general statement of the multiregional input–output model both intermediate demands, \\(\\mathbf{Ax}\\), and final demand, \\(\\mathbf{f}\\), are premultiplied by the matrix \\(\\mathbf{C}\\); this distributes these demands to supplying sectors across regions. Thus \\(\\mathbf{f^{r}}\\) and \\(\\mathbf{f^{s}}\\) represent demands by (shipments to) the final-demand sectors in regions \\(r\\) and \\(s\\) respectively, not final demands for the products of regions \\(r\\) and \\(s\\) (as in the interregional input–output model).\n\n\nNonsurvey methods\nRegional input–output tables share with their national counterparts the problem of becoming outdated with the simple passage of time. But smaller geographic scale introduces other problems. When one is concerned with models in which two or more regions are connected (or a single region and the rest of the country) shipments out of and into the regions assume a much more important role – the former providing inputs to production and the latter representing markets for outputs. One procedure for obtaining this estimate for sector \\(i\\) was to find the ratio of total regional output, less exports, of sector \\(i\\), to the total output, less exports, plus imports, of sector \\(i\\) given by\n\\[p^{r}_{i} = \\frac{x^{r}_{i} - e^{r}_{i}}{x^{r}_{i} - e^{r}_{i} + m^{r}_{i}}\\]\nThus, when none of good \\(i\\) is imported, \\(p^{r}_{i} = 1\\), and the assumption is that all of the region’s needs for \\(i\\) can be supplied internally. The regional input coefficient matrix is derived from \\(\\mathbf{A^{rr} = \\hat{p}A^{n}}\\) where \\(\\mathbf{p} = [p^{r}_{i}]\\) and \\(\\mathbf{A^{n}}\\) is the national technical coefficients matrix.\nA regional input coefficient, \\(a^{rr}_{ij}\\), is defined as the difference between a regional technical coefficient, \\(a^{r}_{ij}\\), and a regional import coefficient, \\(a^{sr}_{ij}\\), where \\(s\\) indicates “outside of \\(r\\).” If a complete set of intra- and interregional data is available, then the \\(a^{rr}_{ij}\\)’s (and \\(a^{sr}_{ij}\\)’s) are observable directly. However, if one is trying to estimate \\(a^{rr}_{ij}\\) from national data, as is the case, the estimation problem can be posed in the following way: (1) estimate a regional technical coefficient, \\(a^{r}_{ij}\\), from the corresponding national coefficient, \\(a^{n}_{ij}\\), and then (2) estimate the regional input coefficient, \\(a^{rr}_{ij}\\), as some proportion of the regional technical coefficient; that is, \\(a^{rr}_{ij} = p^{r}_{ij}a^{r}_{ij}\\) (where \\(0 \\leq p^{r}_{ij} \\leq 1\\)).\nInstead of estimating, \\(a^{r}_{ij}\\) and \\(a^{sr}_{ij}\\) one estimates \\(a^{r}_{ij}\\) and \\(p^{r}_{ij}\\). The two steps in this procedure for estimating \\(a^{rr}_{ij}\\) from \\(a^{n}_{ij}\\) would therefore be:\n\nfind \\(\\alpha^{r}_{ij} \\geq 0\\) such that\n\n\\[a^{r}_{ij} = (\\alpha^{r}_{ij}) (a^{n}_{ij})\\]\nand\n\nfind \\(\\beta^{r}_{ij}\\) (\\(0 \\leq \\beta^{r}_{ij} \\leq 1\\)) such that\n\n\\[a^{rr}_{ij} = (\\beta^{r}_{ij}) (a^{r}_{ij})\\].\nIf one can find \\(\\alpha^{r}_{ij}\\) and \\(\\beta^{r}_{ij}\\) for every \\(i\\) and \\(j\\), this is equivalent to finding\n\\[a^{rr}_{ij} = (\\gamma^{r}_{ij}) (a^{n}_{ij})\\] where \\[\\gamma^{r}_{ij} = (\\alpha^{r}_{ij}) (\\beta^{r}_{ij})\\]\nHowever, in general there is not enough regional information to find \\(\\alpha^{r}_{ij}\\) and \\(\\beta^{r}_{ij}\\).\nAssuming region \\(r\\) and national production recipes are identical, \\(a^{r}_{ij} \\equiv a^{n}_{ij}\\), results in \\(\\alpha^{r}_{ij} = 1\\) for all \\(i\\) and \\(j\\). This assumption overlooks probable regional differences in product mixes within a sector. Or assuming each regional purchaser, \\(j\\), of input \\(i\\) buys the same proportion of those inputs from within the region, results in \\(\\beta^{r}_{ij} = p^{r}_{i}\\) for all \\(i\\). In the absence of specific survey information, it is customary, at least initially, to invoke one or more these assumptions. A number of nonsurvey techniques exist for regionalization of national coefficients – through adjustments based only on published information on regional employment, income, or output by industry.\nSimple Location Quotients\nLet \\(x^{r}_{i}\\) and \\(x^{r}\\) denote gross output of sector \\(i\\) in region \\(r\\) and total output of all sectors in region \\(r\\), respectively, and let \\(x^{n}_{i}\\) and \\(x^{n}\\) denote these totals at the national level. Then the simple location quotient for sector \\(i\\) in region \\(r\\) is defined as:\n\\[LQ^{r}_{i} = \\left( \\frac{x^{r}_{i} / x^{r}} {x^{n}_{i} / x^{n}} \\right) = \\left( \\frac{x^{r}_{i} / x^{n}_{i}} {x^{r} / x^{n}} \\right)\\]\nThe simple location quotient is a measure of the ability of regional industry \\(i\\) to supply the demands placed upon it by other industries (and by final demand) in that region. Also denoted as \\(SLQ_{i}\\).\nIf industry \\(i\\) is less concentrated in the region than in the nation (\\(LQ^{r}_{i} < 1\\)), it is seen as less capable of satisfying regional demand for its output, and its regional direct input coefficients, \\(a^{rr}_{ij}\\) (\\(j = 1, \\dots, n\\)) are created by reducing the national coefficients, \\(a^{n}_{ij}\\), by multiplying them by \\(LQ^{r}_{i}\\). However, if industry \\(i\\) is more highly concentrated in the region than in the nation (\\(LQ^{r}_{i} > 1\\)), then it is assumed that the national input coefficients from industry \\(i\\), \\(a^{n}_{ij}\\) (\\(j = 1, \\dots, n\\)) apply to the region, and the regional “surplus” produced by \\(i\\) will be exported to the rest of the nation. If a national sector is not present in the region (\\(LQ^{r}_{i} = 0\\)), that row and column are simply deleted from \\(\\mathbf{A^{n}}\\). Thus, for each row \\(i\\) of an estimated regional table,\n\\[\na^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(LQ^{r}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} < 1 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nThis procedure is equivalent to assuming \\(\\alpha^{r}_{ij} = 1\\) for all \\(i\\) and \\(j\\) and letting \\(\\beta^{r}_{ij} = LQ^{r}_{i}\\) when \\(LQ^{r}_{i} < 1\\) and \\(\\beta^{r}_{ij} = 1\\) when \\(LQ^{r}_{i} \\geq 1\\). Note ttha this approach does have a distinct asymmetry. When a sector is import-oriented (\\(LQ^{r}_{i} < 1\\)), the modification of the national coefficient varies with the strength of the import orientation \\(a^{rr}_{ij} = (LQ^{r}_{i})a^{n}_{ij}\\), but when a sector is export-oriented (\\(LQ^{r}_{i} > 1\\)), the strength of that orientation is not reflected in the modification \\(a^{rr}_{ij} = (1)a^{n}_{ij}\\).\nA complication may arise if the estimates of regional industry output that are obtained using LQ coefficients exceed actual output for some industries. In this event, coefficients developed by this method have often been “balanced” to ensure that they do not overestimate the regional output of each sector. If estimated coefficients generate a regional output for sector \\(i\\), \\((\\tilde{x}_{i})\\) that is too large (meaning \\(\\tilde{x}^{r}_{i} > x^{r}_{i}\\) ), then the row-\\(i\\) estimates, \\(a^{rr}_{ij}\\) (for all \\(j\\)), should be uniformly reduced – multiplied by (\\(x^{r}_{i} / \\tilde{x}^{r}_{i}\\)).\nFor example, estimated sector \\(i\\) output on the basis of actual regional industry outputs, and the LQ-estimated regional input coefficients for sector \\(i\\)\n\\[\\tilde{x}^{r}_{i} = \\sum_{j}a^{rr}_{ij}x^{r}_{j} + \\sum_{f}c^{rr}_{if}f^{r}_{f}\\]\nwhere\n\\(\\tilde{x}^{r}_{i}\\) is estimated regional output of sector \\(i\\),\n\\(f^{r}_{f}\\) is total regional final demand of final-demand sector \\(f\\), and\n\\(c^{rr}_{if}\\) is estimated regional final-demand purchase coefficient of regional final-demand sector \\(f\\) from industry \\(i\\).\nThe \\(c^{rr}_{if}\\) elements reflect purchases of regionally produced output \\(i\\) by regional final-demand sector \\(f\\). These estimates are found in much the same manner as were the \\(a^{rr}_{ij}\\); that is, using national data and the region-specific location quotients. In particular,\n\\[\nc^{rr}_{if} = \\left\\{\n\\begin{align*}\n(LQ^{r}_{i})c^{n}_{if} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} < 1 \\\\\nc^{n}_{if} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nwhere\n\\[c^{n}_{if} = f_{if} / f_{f}\\]\n\\(f_{if}\\) is national sales of industry \\(i\\) to final-demand sector \\(f\\), and\n\\(f_{f}\\) is total national purchases of final-demand sector \\(f\\).\nThus, when \\(LQ^{r}_{i} \\geq 1\\), it is assumed that purchases of good \\(i\\) by final-demand sector \\(f\\) are the same proportion of total sector \\(f\\) purchases in the region as in the nation. When $ LQ^{r}_{i} < 1$, then the national proportion is modified downward.\nThe next step in the balancing procedure is to calculate the ratio of estimated to actual regional output; denote this by \\(Z^{r}_{i}\\). Then\n\\[Z^{r}_{i} = x^{r}_{i} / \\tilde{x}^{r}_{i}\\]\nEach row of estimated regional input coefficients for which \\(Z^{r}_{i}\\) is less than one is adjusted downward. That is, adjusted (“balanced”) regional input coefficients are estimated as\n\\[\n\\bar{a}^{rr}_{ij} = \\left\\{\n\\begin{align*}\nZ^{r}_{i}a^{rr}_{ij} \\space\\space \\text{if} \\space\\space Z^{r}_{i} < 1 \\\\\na^{rr}_{ij} \\space\\space \\text{if} \\space\\space Z^{r}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nNote, in this LQ and all other quotient approaches, \\(\\alpha^{r}_{ij} = 1\\) is assumed. And with high disaggregation, the assumption of constant (national) technology across regions may be reasonable.\nPurchases-Only Location Quotients\nThe purchases-only location quotient (PLQ) for sector \\(i\\) in region \\(r\\) relates regional to national ability to supply sector \\(i\\) inputs, but only to those sectors that use \\(i\\) as an input. That is,\n\\[PLQ^{r}_{i} = \\left( \\frac{x^{r}_{i} / x^{*r}} {x^{n}_{i} / x^{*n}} \\right) \\]\nwhere \\(x^{r}_{i}\\) and \\(x^{n}_{i}\\) are regional and national output of good \\(i\\), as before, and where \\(x^{*r}\\) and \\(x^{*n}\\) are total regional and national output of only those sectors that use \\(i\\) as an input. If input \\(i\\) is not used by sector \\(k\\), then the size of sector \\(k\\)’s output is not relevant in determining whether or not the region can supply all of its needs for input \\(i\\).\nCross-Industry Quotients\nAnother variant is the cross-industry quotient (CIQ). This allows for differing modifiers within a given row of the national matrix; that is, it allows for differing cell-by-cell adjustments within \\(\\mathbf{A^{n}}\\) rather than uniform adjustments along each row. Specifically,\n\\[CIQ^{r}_{ij} = \\left( \\frac{x^{r}_{i} / x^{n}_{i}} {x^{r}_{j} / x^{n}_{j}} \\right)\\]\nThen\n\\[\na^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(CIQ^{r}_{ij})a^{n}_{ij} \\space\\space \\text{if} \\space\\space CIQ^{r}_{ij} < 1 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space CIQ^{r}_{ij} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nIf the output of regional sector \\(i\\) relative to the national output of \\(i\\) is larger than the output of regional sector \\(j\\) relative to the national output of sector \\(j\\) (\\(CIQ^{r}_{ij} > 1\\)), then all of \\(j\\)’s needs of input \\(i\\) can be supplied from within the region. Similarly, if sector \\(i\\) at the regional level is relatively smaller than sector \\(j\\) at the regional level (\\(CIQ^{r}_{ij} < 1\\)), then it is assumed that some of \\(j\\)’s needs for \\(i\\) inputs will have to be imported. Note that \\(CIQ^{r}_{ij} = LQ^{r}_{i}/LQ^{r}_{j}\\) and that \\(CIQ^{r}_{ij} = 1\\) (along the main diagonal, when \\(i=j\\)).\nThe Semilogarithmic Quotient\nSince the LQ approach will never increase a national coefficient (they are either left unchanged or made smaller), this procedure is also called reducing the national coefficients table. This \\(a^{rr}_{ij} \\leq a^{n}_{ij}\\) characteristic of the LQ approach has also been called into question. A producer in sector \\(j\\) might use relatively fewer imported inputs than is reflected in the national coefficients for sector \\(j\\), and thus at least some regionally supplied inputs could be larger, per unit of output \\(j\\) in that region than in the nation as a whole. And in general, if the national coefficient is an average of observed regional coefficients, then some coefficients in some regions should be expected to be above average while others in other regions would necessarily be below average.\nLet a “semilogarithmic quotient (SLQ)” be defined as\n\\[SLQ^{r}_{ij} = LQ^{r}_{i}/ \\log_{2} (1 + LQ^{r}_{j})\\] Or alternatively as \\[SLQ^{r}_{ij} = [(x^{r}_{i} / x^{n}_{i}) \\div (x^{r} / x^{n})]/ \\log_{2}\\{1 + [(x^{r}_{j} / x^{n}_{j}) \\div (x^{r} / x^{n})] \\}\\] along with relative sizes of both industries, \\(i\\) and \\(j\\), this includes the regional size component in both numerator and denominator but not in such a way that the terms cancel out.\nFlegg\nThe Flegg Location Quotient measure is generated by modifying the \\(CIQ^{r}_{ij}\\) to incorporate an additional measure of the relative size of the region,\n\\[FLQ^{r}_{ij} = (\\lambda)CIQ^{r}_{ij}\\] where \\(\\lambda = \\{\\log_{2}[1 + (x^{r}_{E} / x^{n}_{E})]\\}^{\\delta}\\), \\(0 \\leq \\delta < 1\\). Then \\[\na^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(FLQ^{r}_{ij})a^{n}_{ij} \\space\\space \\text{if} \\space\\space FLQ^{r}_{ij} < 1 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space FLQ^{r}_{ij} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nFlegg uses employment rather than output as the relevant measures of regional and national activity; these are \\(x^{r}_{E}\\) and \\(x^{n}_{E}\\) for the region and the nation, respectively, so \\(x^{r}_{E} / x^{n}_{E}\\) provides an alternative to the output ratio (\\(x^{r} / x^{n}\\)) as a measure of relative regional size. It also uses employment as the measure of sector \\(i\\) and \\(j\\) activity (output). The idea is to reduce national coefficients less for larger regions – on the belief that larger regions import less than smaller ones. The problem, however, is that one must specify a value of \\(\\delta\\) in advance, and it is not at all clear what this value (or range of values) should be. Empirical work has suggested that \\(\\delta = 0.3\\) seems to work well in a variety of situations.\nSpecialization might lead to increased intraregional purchases (by the specialized industry) and hence to intraregional input coefficients that are larger than their national counterparts. A variant of the FLQ can reflect this regional specialization. The Augmented Flegg Location Quotient (AFLQ) is given by\n\\[\nAFLQ^{r}_{ij} = \\left\\{\n\\begin{align*}\n[\\log_{2}(1 + LQ^{r}_{ij})]FLQ^{r}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{ij} > 1 \\\\\nFLQ^{r}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{ij} \\leq 1\n\\end{align*}\n\\right\\}\n\\]\nsuch that\n\\[\na^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(AFLQ^{r}_{ij})a^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{ij} > 1 \\\\\n(FLQ^{r}_{ij})a^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{ij} \\leq 1\n\\end{align*}\n\\right\\}\n\\]\nNow FLQ is increased in those cases (only) in which sector \\(j\\) is relatively specialized in region \\(r\\) (when \\(LQ^{r}_{ij} > 1\\), so \\([\\log_{2}(1 + LQ^{r}_{ij})]\\)). Thus far national coefficients could never be increased by any of the quotient techniques examined. The argument is that a large industry (\\(j\\)) in a particular region may attract in-movement to the region of firms in other sectors that supply \\(j\\); hence \\(j\\)’s intraregional input purchases may be larger than the national coefficient would suggest.\nSupply–Demand Pool Approaches\nThe supply–demand pool (SDP) technique estimates regional from national coefficients in much the same way as the procedure that was used to balance the regional coefficients estimated by the simple location quotient technique. National technical coefficients are taken as the first approximation to regional coefficients. Regional output by sector is then found, as above, by multiplying each of these coefficients by the appropriate actual regional output of that sector (and similarly for final-demand sectors, but using the national final-demand input proportions, \\(c^{n}_{if}\\)) and summing:\n\\[\\tilde{x}^{r}_{i} = \\sum_{j}a^{n}_{ij}x^{r}_{j} + \\sum_{f}c^{n}_{if}f^{r}_{f}\\]\nThen the regional commodity balance, \\(b^{r}_{i}\\), is calculated for industry \\(i\\) as \\(b^{r}_{i} = x^{r}_{i} - \\tilde{x}^{r}_{i}\\). If this balance is positive, using national coefficients as estimates of regional coefficients does not generate an overestimate of regional production and so \\(a^{rr}_{ij} = a^{n}_{ij}\\) and \\(c^{rr}_{if} = c^{n}_{if}\\) are acceptable estimates. However, if the balance is negative, national coefficients are too large, in the sense that they generate unrealistically high regional outputs, by sector, so \\(a^{rr}_{ij} = a^{n}_{ij}(x^{r}_{i} / \\tilde{x}^{r}_{i})\\) and \\(c^{rr}_{if} = c^{n}_{if}(x^{r}_{i} / \\tilde{x}^{r}_{i})\\) – the national coefficients are reduced by the amount necessary to make the regional balance for that sector exactly zero.\n\\[\na^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(x^{r}_{i} / \\tilde{x}^{r}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space b^{r}_{i} < 0 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space b^{r}_{i} \\geq 0\n\\end{align*}\n\\right\\}\n\\]\nthe supply-demand pool technique assumes that \\(\\alpha^{r}_{ij} = 1\\), as do all of the quotient techniques mentioned above. Further, \\(\\beta^{r}_{ij} = (x^{r}_{i} / \\tilde{x}^{r}_{i})\\) when \\(x^{r}_{i} - \\tilde{x}^{r}_{i} < 0\\) and \\(\\beta^{r}_{ij} = 1\\) when \\(x^{r}_{i} - \\tilde{x}^{r}_{i} \\geq 0\\). As with the LQ-based techniques, only reductions of national coefficients are possible and cross-hauling is not captured.\nRegional Purchase Coefficients\nThe regional supply proportions, \\(p^{r}_{i}\\) have also been defined as regional purchase coefficients (RPCs). These coeffecients operate uniformly across rows, as do LQ-based methods, similarly assume \\(\\alpha^{r}_{ij} = 1\\), and \\(\\beta^{r}_{ij} = p^{r}_{i} = RPC^{r}_{i}\\). The regional purchase coefficient for a sector is defined as the proportion of regional demand for that sector’s output that is fulfilled from regional production. Formally, for region \\(r\\) and good \\(i\\),\n\\[RPC^{r}_{i} = z^{rr}_{i} / (z^{rr}_{i} + z^{sr}_{i})\\] Various relationships between \\(RPC^{r}_{i}\\) and proxies for these relative terms have been proposed and fitted by regression techniques to data that are available in US published sources such as County Business Patterns, Census of Transportation, and Census of Manufactures, as well as a national input–output technical coefficients table. An alternative approach to estimation of RPCs are gravity models of commodity flows.\nRegional RAS\nA traditional RAS is concerned with adjusting coefficient matrices across time (the updating problem), however, it may also be used to adjust coefficient matrices across space (the regionalization problem). Therefore, one can perform a regional RAS to estimate \\(\\mathbf{A^{r}}\\), given a national input–output table, \\(\\mathbf{A^{n}}\\), and current marginal information about regional economic activity – regional total gross outputs, \\(\\mathbf{x^{r}}\\), regional total interindustry (intermediate) sales, \\(\\mathbf{u^{r}}\\), and regional total interindustry purchases \\(\\mathbf{v^{r}}\\).\nUnlike the many other clean I/O accounting procedures, RAS is an iterative maximization process. Step 1 is to assume \\(\\mathbf{A^{r}} = \\mathbf{A^{r}}\\) such that \\(\\mathbf{Z^{0}} = \\mathbf{A^{n}\\hat{x}^{r}}\\), where zero superscript denotes the base or zeroth iteration.\nStep 2 is to then ask: Does \\(\\mathbf{Z^{0}i} = \\mathbf{u^{r}}\\) and \\(\\mathbf{iZ^{0}} = \\mathbf{v^{r}}\\)? If the answer is yes to both, then \\(\\mathbf{Z^{0}} = \\mathbf{Z^{r}}\\) and \\(\\mathbf{A^{n}} = \\mathbf{A^{r}}\\). If the answer is no to either, then we update the direct requirements matrix. First by \\(\\mathbf{A^{1}} = \\mathbf{\\hat{r}^{1}A^{n}}\\), where \\(\\mathbf{\\hat{r}^{1}} = [\\mathbf{\\hat{u}^{r}}](\\mathbf{\\hat{Z}^{0}i})^{-1}\\). And by definition, now \\(\\mathbf{u^{r}} = \\mathbf{Z^{1}i} = [\\mathbf{\\hat{r}^{1}A^{n}\\hat{x}^{r}}]\\mathbf{i}\\).\nStep 3 is to then ask: Does \\(\\mathbf{iZ^{1}} = \\mathbf{v^{r}}\\)? If the answer is yes, then \\(\\mathbf{Z^{1}} = \\mathbf{Z^{r}}\\) and \\(\\mathbf{Z^{1}\\hat{x}^{r}} = \\mathbf{A^{r}}\\). If the answer is no, then iterate again, this time let \\(\\mathbf{A^{2}} = \\mathbf{A^{1}\\hat{s}^{1}}\\), where \\(\\mathbf{\\hat{s}^{1}} = [\\mathbf{\\hat{v}^{r}}](\\mathbf{iZ^{1}})^{-1}\\). And by definition, now \\(\\mathbf{\\hat{v}^{r}} = (\\mathbf{Z^{2}})'\\mathbf{i} = [\\mathbf{A^{2}\\hat{x}^{r}}]'\\mathbf{i}\\).\nNote that \\(\\mathbf{A^{2}} = \\mathbf{\\hat{r}^{1}A^{n}\\hat{s}^{1}}\\), and similarly for \\(t\\) repetitions of this procedures \\(\\mathbf{A^{2t}} = [\\mathbf{\\hat{r}^{t}\\cdots\\hat{r}^{1}}]\\mathbf{A^{n}}[\\mathbf{\\hat{s}^{1}\\cdots\\hat{s}^{t}}]\\). Let \\(\\mathbf{\\hat{r}} = [\\mathbf{\\hat{r}^{t}\\cdots\\hat{r}^{1}}]\\) and \\(\\mathbf{\\hat{s}} = [\\mathbf{\\hat{s}^{1}\\cdots\\hat{s}^{t}}]\\), thus \\(\\mathbf{\\hat{r}A\\hat{s}}\\) and the name of the “RAS” procedure is reveled.\nLastly, one must specify a value \\(\\epsilon\\) such that \\([|\\mathbf{u^{r}} - \\mathbf{u^{t}}|]\\) and \\([|\\mathbf{v^{r}} - \\mathbf{v^{t}}|]\\) are no more than \\(\\epsilon\\) and the iterative balancing may cease.\nGravity Model Formulations\nMany versions of gravity model formulations have been proposed and explored for estimating commodity flows between regions. The basic idea is that the flow of good \\(i\\) from region \\(r\\) to region \\(s\\) can be looked upon as a function of (1) some measure of the total output of \\(i\\) in \\(r\\), \\(x^{r}_{i}\\), (2) some measure of the total purchases of \\(i\\) in \\(s\\), \\(x^{s}_{i}\\) ,and (3) the distance (as a measure of “impedance”) between the two regions, \\(d^{rs}\\).\nOne straightforward function, taking inspiration from Newton’s observations on gravity, would involve the product of the two “masses” (\\(x^{r}_{i}\\) and \\(x^{s}_{i}\\) ) divided by the square of the distance. The relatively simplified form is given by: \\[ z^{rs}_{i} = \\frac{x^{r \\cdot}_{i}x^{\\cdot s}_{i}} {x^{\\cdot \\cdot}_{i}} Q^{rs}_{i}\\] where \\(x^{r \\cdot}_{i}\\) is the “supply pool” of good \\(i\\) in region \\(r\\), \\(x^{\\cdot s}_{i}\\) is the “demand pool” of good \\(i\\) in region \\(s\\), \\(x^{\\cdot \\cdot}_{i}\\) is the total production of commodity \\(i\\) in the system and \\(Q^{rs}_{i}\\) is a parameter to be estimated. Note that the denominator in this formulation is aspatial; that is, its magnitude is unrelated to any measure of “distance” between \\(r\\) and \\(s\\). Rather, it provides the flexibility necessary so that if, for good \\(i\\), the supply pool in \\(r\\), the demand pool in \\(s\\) and total output all increase by \\(p\\) percent, then \\(z^{rs}_{i}\\) increases by that same percent (assuming \\(Q^{rs}_{i} > 0\\)). An important feature of this kind of formulation is that cross-hauling is allowed; that is, good \\(i\\) can be shipped simultaneously from \\(r\\) to \\(s\\) and from \\(s\\) to \\(r\\).\nThe most optimistic scenario is that values of \\(x^{r \\cdot}_{i}\\), \\(x^{\\cdot s}_{i}\\), \\(x^{\\cdot \\cdot}_{i}\\), and \\(z^{rs}_{i}\\) are known from some base period or for some subset of transportation data. In that case, one can evaluate the parameter \\(Q^{rs}_{i}\\) from those data, as \\[Q^{rs}_{i} = \\frac{\\bar{z}^{rs}_{i} \\bar{x}^{\\cdot \\cdot}_{i}} {\\bar{x}^{r \\cdot}_{i}  \\bar{x}^{\\cdot s}_{i}}\\] where overbars indicate known values.\nTwo-Region Interregional Models\nOne important feature in a two-region interregional model is that one region’s (domestic) exports of a particular good are the other region’s (domestic) imports. Since,\n\\[\na^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(LQ^{r}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} < 1 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nthen, in a two-region interregional model (with regions \\(r\\) and \\(s\\)),\n\\[\na^{sr}_{ij} = \\left\\{\n\\begin{align*}\n(1 - LQ^{r}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{r}_{i} < 1 \\\\\n0 \\space\\space \\text{if} \\space\\space LQ^{r}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nThe two-region logic may also be implemented across more than two regions. The idea is to use location quotients, a sequence of two-region models, and an RAS balancing approach.\n\n\nThe highest level of NAICS classification is called the sector. There are 20 broad NAICS sectors two-digit NAICS. The subsiquent hierarchy of NAICS specifications include subsector (three-digit), industry group (four-digit), NAICS industry (five-digit), and U.S. industry (six-digit). Counts of unique NAICS specifications for CBP 2019 data include 20, 86, 288, 635, and 960 clusters respectively.\nEstimates in the Industry Economic Accounts of the Bureau of Economic Analysis (BEA) are generally available at four levels of detail: sector (21 industry groups), summary (71 industry groups), underlying summary (138 industry groups), and detail (405 industry groups). However, in practice the BEA industry codes present in the SUP (Use) tables are sector (SEC) with 15 \\(\\times\\) 15 commodities and industries, summary (SUM) with 71 \\(\\times\\) 71 commodities and industries, and detail (DET) with 401 \\(\\times\\) 405 commodities and industries. For most IO type data products from BEA, estimates at the detail level are available only for available for year 2007 and 2012. Data products from BEA at the sector and summary detail levels are available from 1997 to 2020.\nBEA industry codes used in national IO tables are not bijective with NAICS codes. Though they are similar at many levels and groupings some codes are not applicable (government) or do not align at any higher detail specificity e.g., construction data published by BEA at the detail level do not align with 2012 NAICS industries.\n“The direct requirements table shows the amount of a commodity that is required by an industry to produce a dollar of the industry’s output. Total requirements tables show the relationship between final uses and gross output. There are three total requirements tables. The commodity-by-commodity total requirements table shows the production required, both directly and indirectly, of the commodity at the beginning of each row per dollar of delivery to final use of the commodity at the top of the column. The industry-by-commodity total requirements table shows the production required, both directly and indirectly, from the industry at the beginning of the row per dollar of delivery to final use of the commodity at the top of the column. The industry-by-industry total requirements table shows the production required, both directly and indirectly, from the industry at the beginning of the row per dollar of delivery to final use of the industry at the top of the column.” – Concepts and Methods of the Input-Output Accounts pg. 1-3\nAn important use of the I-O tables is in the estimation of the direct and indirect effects that changes in final uses will have on industry and commodity output, on employment, or on income. BEA’s Regional Economic Analysis Division relies on data in the I-O accounts to generate its Regional Input-Output Modeling System, or RIMS II, which can be used to analyze the impact of a state or local project or a change in a state or local program on the economy of an area. For example, state or local government planners can use the model to assess the economic impact of a new baseball stadium or airport or of the closing of a military base.\nSummary of Input–Output Relationships\n\\[\\begin{equation}\n\\begin{matrix}\n&  \\text{Economic } (n \\times n) \\\\\n\\hline\n\\text{Transactions } & \\mathbf{Z} \\\\\n& \\mathbf{Zi} + \\mathbf{f} = \\mathbf{x} \\\\\n& \\\\\n\\text{Direct Requirements } & \\mathbf{A} = \\mathbf{Z\\hat{x}^{-1}} \\\\\n& \\mathbf{Ax} + \\mathbf{f} = \\mathbf{x} \\\\\n& \\\\\n\\text{Total Requirements } & \\mathbf{L} = (\\mathbf{I} - \\mathbf{A})^{-1} \\\\\n& \\mathbf{x} = \\mathbf{Lf} \\\\\n\\hline\n\\end{matrix}\n\\end{equation}\\]\nThe (industry-by-industry) Transactions matrix shows monetary transactions between pairs of sectors or interindustry sales (intermediate sales) by sector \\(i\\) to all sectors \\(j\\).\nThe (industry-by-industry) Direct Requirements (technical coefficients) matrix specifies the required amount of industry \\(i\\)’s commodity used to produce of one unit of industry \\(j\\)’s commodity.\nThe (industry-by-industry) Total Requirements matrix shows, on a per-dollar basis, the industry output the economy generates in order to provide an industry’s commodities to final users: \\(\\partial{x_{i}}/\\partial{f_{j}} = l_{ij}\\).\nTechnically speaking, the Direct Requirements matrix constructed from the BEA Total Requirements matrix (from a Make and Use table framework) is an industry based technology, industry-by-industry class table \\(\\underset{(i \\times i)}{\\mathbf{A}_{I}} = \\mathbf{V}(\\mathbf{\\widehat{V'i}})^{-1}\\mathbf{U}(\\mathbf{\\widehat{Vi}})^{-1}\\)"
  },
  {
    "objectID": "toy_story.html",
    "href": "toy_story.html",
    "title": "Toy Story",
    "section": "",
    "text": "Project NarrativeToy IOToy TUCReduxExposéExtensionRemissionResurrectionNotes\n\n\n\n\nCode\n# Exercise to replicate table and analysis from project narrative\nUse_SUT_Framework_2007_2012_DET <- read_excel(file.path(root_dir, \"data/AllTablesSUP/Use_SUT_Framework_2007_2012_DET.xlsx\"), sheet = \"2012\", col_names = FALSE, skip = 2) %>% suppressMessages()\n\nProjNarrIO <- c(Use_SUT_Framework_2007_2012_DET[[6,4]],\n                Use_SUT_Framework_2007_2012_DET[[6,196]],\n                Use_SUT_Framework_2007_2012_DET[[6,211]],\n                Use_SUT_Framework_2007_2012_DET[[6,286]],\n                Use_SUT_Framework_2007_2012_DET[[6,291]],\n                Use_SUT_Framework_2007_2012_DET[[197,4]],\n                Use_SUT_Framework_2007_2012_DET[[197,196]],\n                Use_SUT_Framework_2007_2012_DET[[197,211]],\n                Use_SUT_Framework_2007_2012_DET[[197,286]],\n                Use_SUT_Framework_2007_2012_DET[[197,291]],\n                Use_SUT_Framework_2007_2012_DET[[212,4]],\n                Use_SUT_Framework_2007_2012_DET[[212,196]],\n                Use_SUT_Framework_2007_2012_DET[[212,211]],\n                Use_SUT_Framework_2007_2012_DET[[212,286]],\n                Use_SUT_Framework_2007_2012_DET[[212,291]],\n                Use_SUT_Framework_2007_2012_DET[[287,4]],\n                Use_SUT_Framework_2007_2012_DET[[287,196]],\n                Use_SUT_Framework_2007_2012_DET[[287,211]],\n                Use_SUT_Framework_2007_2012_DET[[287,286]],\n                Use_SUT_Framework_2007_2012_DET[[287,291]],\n                Use_SUT_Framework_2007_2012_DET[[292,4]],\n                Use_SUT_Framework_2007_2012_DET[[292,196]],\n                Use_SUT_Framework_2007_2012_DET[[292,211]],\n                Use_SUT_Framework_2007_2012_DET[[292,286]],\n                Use_SUT_Framework_2007_2012_DET[[292,291]]) \n\nProjNarrIO[is.na(ProjNarrIO)] <- 0 \n\ncodenames <- c(Use_SUT_Framework_2007_2012_DET[[6,1]],\n               Use_SUT_Framework_2007_2012_DET[[197,1]],\n               Use_SUT_Framework_2007_2012_DET[[212,1]],\n               Use_SUT_Framework_2007_2012_DET[[287,1]],\n               Use_SUT_Framework_2007_2012_DET[[292,1]])\n\ndescriptionnames <- c(Use_SUT_Framework_2007_2012_DET[[6,2]],\n               Use_SUT_Framework_2007_2012_DET[[197,2]],\n               Use_SUT_Framework_2007_2012_DET[[212,2]],\n               Use_SUT_Framework_2007_2012_DET[[287,2]],\n               Use_SUT_Framework_2007_2012_DET[[292,2]])\n\n\nProjNarrIO %<>%  as.numeric() %>% matrix(nrow = 5, ncol = 5, byrow = TRUE,  dimnames = list(descriptionnames, codenames))\n\nProjNarrRegSales <- data.frame(A  = c(0, 500,   0,  1000,   500),  B = c(0, 100,    200,    500,    200) ) %>% t() %>% as.matrix()\n\ni_mat <- rep(c(1), each=ncol(ProjNarrIO)) %>% as.matrix()\n\nalpha <- sweep(ProjNarrIO[1, ] %*% t(ProjNarrRegSales), 1, ProjNarrIO[1, ] %*% i_mat, \"/\")\nrho <- sweep(alpha, 2, ProjNarrRegSales %*% i_mat, \"/\")\n\n\ncolnames(ProjNarrRegSales) <- codenames\nsample_RUC<-cbind(ProjNarrRegSales, t(alpha), t(rho))\ncolnames(sample_RUC)[6] <- \"alpha\"\ncolnames(sample_RUC)[7] <- \"rho\"\n\n\nGenerate Economic Catchment Area (ECA) codes\nSince 1880, the Census Bureau has applied formal rules to categorize geographic areas as urban for the purposes of statistical reporting. The most recent version of this taxonomic schema classifies areas as urban areas (UA, densely settled with a population greater than 50,000) and urban clusters (UC, densely settled with populations greater than 2,500 and less than 50,000).  For as long as the Census Bureau has been defining urbanicity, rural has ALWAYS been the residual category: from the 2010 Census Urban-Rural Classification Criterion, “‘rural’ encompasses all population, housing, and territory not included within an urban area.”\nThe construction of urban places follows a complex set of rules accounting for the attributes of urban land use and residential development patterns, but the intuition is fairly straight-forward. First, identify contiguous Census blocks (sometimes, tracts) above a minimum population density thereby defining a potential urban core. Then, continue to agglomerate adjacent-ish (again, there are complex rules allowing for hops, jumps, exclaves, enclaves, indentations, etc.) blocks/tracts meeting other density and population thresholds until the boundaries of the place are established. The population of this agglomeration then determines whether it is a UA, UC, or rural. The RUCA codes are a further refinement constructed by ERS to account for 1) the size of urban agglomerations and 2) resident commuting patterns, while applying the urban-rural typology employed by OMB. Thus, every UA is termed a Metropolitan Area Core. UCs are delimited by population into Micropolitan Area Core (10,000 to 49,999) and Small Town Core (2,500 to 9,999). Remaining blocks/tracts are then classified according to whether a high (more than 30%) or low (10% to 30%) percentage of residents commute to an urban core, as well as the type of core of the primary flow. Secondary codes are also assigned based upon the destination type of the secondary commuter flow.\nWe propose to use core units as the basis for building Rural-Urban Economic Catchment Areas codes from InfoGroup and the Census of Agriculture in very much the same vein as ERS constructs the RUCA codes, but with a notable design distinction: we will classify tracts from low density to high density, rather than defining rural as a catch-all, non-urban residual. Specifically:\n\nWe will define a primary economic catchment area (ECA) centered on each small UC core (RUCA 7) that includes associated commuting Census tracts (RUCA 8 and 9) and nearby rural tracts that include large employers in InfoGroup. The latter condition accommodates economic activities that may employ relatively large numbers of residents but are purposefully located far from residential areas, e.g., paper milling and government military installations. We will explore the sensitivity of our coding to various definitions of nearby, e.g. 5, 10, and 20 mile radii.\nWe will use the Census of Agriculture to identify the primary crop and livestock production activities and the County Business Patterns to identify the presence of forestry and mining activity in rural Zip codes surrounding the primary ECA (the smallest published unit for both programs is the Zip code). We anticipate that for the overwhelming majority of the country, using the county as the basic unit will suffice for identifying agricultural, forestry, and extraction, but western counties are sufficiently large to benefit from a more disaggregated reporting unit.\nWe will then use the most recent Use Tables published by BEA as part of its Input-Output Accounts program (2018 for 71 two- and three-digit NAICS industries and 2012 for 415 fourdigit NAICS industries) to calculate absolute and relative rural use coefficients for each primary ECA with respect to the agricultural, forestry, and extraction (AFE) activity in its vicinity.\n\n\n\\(\\alpha^{r}_{i} = \\sum^{k} s^{k}_{i} \\sum^{m} s^{m}_{i} \\rho^{k}_{m}\\) and \\(\\rho^{r}_{i} = \\sum^{k} s^{k}_{i} \\left( \\frac{\\sum^{m} s^{m}_{i} \\rho^{k}_{m}} {\\sum^{m} \\rho^{k}_{m} } \\right)\\)\n\nwhere \\(s^{m}_{i}\\) is the share of employment/sales for industry \\(m\\) in business catchment area \\(i\\) calculated from InfoGroup; \\(\\rho^{k}_{m}\\) is the use parameter for AFE activity \\(k\\) in industry \\(m\\) from the BEA Use Tables; \\(s^{k}_{i}\\) is the share of agricultural or forestry activity \\(k\\) of total AFE activities; and \\(M\\) and \\(K\\) are the set of non-AFE and AFE industries, respectively.\nTo illustrate, a simplified five-sector economy based on the BEA 2012 Use Table might be:\n\nUse Factor\n\n\n\n\n\n\n\n\n\n\n\n1111B0\n311210\n311810\n445000\n448000\n\n\n\n\nGrain farming\n6440\n14398\n1924\n684\n0\n\n\nFlour milling and malt manufacturing\n0\n303\n2983\n1064\n0\n\n\nBread and bakery product manufacturing\n0\n0\n63\n123\n0\n\n\nFood and beverage stores\n0\n0\n0\n0\n0\n\n\nClothing and clothing accessories stores\n0\n0\n0\n0\n0\n\n\n\n\nWe will then assign remaining rural tracts to primary ECAs using a gravity model based on the use coefficients defined above. Gravity models have been applied as far back as the 1850s (Carey, 1858) to describe social phenomena and continue to be used across disciplines (Erlander, 1980; Haynes and Fotheringham, 1984; Sen and Smith, 1995; Wilson 2000), including contemporary analyses of international trade (USITC, 2020). To illustrate, suppose that there were two primary ECAs with the following industry sales (in $1000s) and calculated rural use coefficients:\n\n\nIndustry Sales\n\n\n\n1111B0\n311210\n311810\n445000\n448000\nalpha\nrho\n\n\n\n\nA\n0\n500\n0\n1000\n500\n336.2\n0.168\n\n\nB\n0\n100\n200\n500\n200\n92.4\n0.092\n\n\n\nTo simplify, suppose Area A were at 0 on the unit interval and Area B at 1 with all intervening space representing rural tracts. A gravity approach based on the use coefficient would assign the intervening rural tracts on (0,0.784) to Area A and tracts (0.784,1) to Area B. In contrast, a gravity approach using the adjusted use coefficient would assign the intervening rural tracts on (0,0.645) to Area A and tracts (0.645,1) to Area B. More generally, for either use coefficient, we will treat the United States as a plane over the unit simplex and apply a gravity approach to assign rural tracts to any primary ECA.\nA notable feature of this approach is that primary ECAs may exhibit sufficiently low gravity that they are effectively economic islands. For example, a small-town anchored by car manufacturing plant surrounded by cropland. Of course, that small-town may be associated with larger, discontiguous economic areas through the manufacturing supply chain, which will reveal itself at higher economic geographies described subsequently, but creating measures to make meaningful economic distinctions between population centers currently lumped as “small towns” is a valuable project output that will benefit policy-makers.\n\nWe will then move to assigning the remaining tracts, beginning with Micropolitan low commuting (RUCA 6) tracts. For each tract, we will calculate the following total use coefficients:\n\n\n\\(\\rho_{ij} = \\sum^{M} s^{m}_{i} \\left( \\frac{\\sum^{m} s^{n}_{j} \\rho^{n}_{i}} {\\rho^{n}_{i} } \\right)\\), \\(\\rho_{ji} = \\sum^{M} s^{m}_{j} \\left( \\frac{\\sum^{m} s^{n}_{i} \\rho^{n}_{j}} {\\rho^{n}_{j} } \\right)\\), \\(\\rho_{ik} = \\sum^{M} s^{m}_{i} \\left( \\frac{\\sum^{m} s^{n}_{k} \\rho^{n}_{i}} {\\rho^{n}_{i} } \\right)\\), \\(\\rho_{ki} = \\sum^{M} s^{m}_{k} \\left( \\frac{\\sum^{m} s^{n}_{i} \\rho^{n}_{k}} {\\rho^{n}_{k} } \\right)\\)\n\nwhere \\(i\\) denotes the tract, \\(j\\) denotes the adjacent primary ECA, and \\(k\\) denotes the Micropolitan core (RUCA 4) [NB: There may be multiple adjacent primary ECA, so that for the general case of Z adjacent primary ECA, 2Z+2 total use coefficients are calculated]. These coefficients summarize the economic flow to and from the tract. Thus, we will assign the tract to either the Micropolitan Core or the adjacent primary ECA according to the magnitude of the largest total use coefficients, or leave the tract as an economic island if flows are insufficiently strong, i.e., gravity is sufficiently weak.\n\nAfter assigning all Micropolitan and Metropolitan commuting tracts (RUCA 2, 3, and 5) following a similar approach to the one above, we will define secondary ECAs. To do so, we will again treat the United States as a plane with nodes defined by Micropolitan cores and primary ECAs attracted to those nodes by total use coefficients. Primary ECAs are assigned to secondary ECAs centered on Micropolitan cores when gravity is sufficiently strong. Next, contiguous groups of yet-unassigned primary ECAs with sufficiently strong gravity will be aggregated into secondary ECAs independent of a Micropolitan core; those without are classified as isolated.\nStep 6 is repeated with Metropolitan cores to define tertiary ECAs.\n\nThe approach described above is based on the three categories of urbanized places from the RUCA system, but it generalizes broadly to an N-level hierarchy of nodes where the nth ECA is defined by the parameter pair (\\(\\rho_{n}\\), \\(\\theta_{n}\\)), the upper limit on the population of the core and the gravity threshold that defines economic islands, respectively. Refinements based on the former would permit the definition of small and large metropolitan cores, or even Megapolitan cores. The latter parameter can be varied according to moments of the use coefficient distribution (the lowest quintile or decile) or absolute values with a priori relevance, e.g., a parameter from a specified decay function in a formal model. We will implement the gravity model in Python, as it is open-source and with spatial modeling packages, e.g., SpInt (Oshan 2016) and GME (USITC 2019), that are already being used to model international trade, migration flows, and transportation networks.\n\n\nThe static Input-Output analysis, à la Wassily Leontief, poses the question: What level of output should each industry produce, such that it will satisfy the total demand of that industries output across all industries in an economy?\nSimplifying assumptions:\n\nEach industry produces only one homogeneous commodity.\nEach industry uses a fixed input ratio.\nEach industry exhibits constant returns to scale.\n\nSuppose the National level economy is composed of 2 industries (e.g., Extraction and Farming). Let the interindustry sales be given by,\n\\[\\begin{equation}\n\\underset{(i \\times i)}{\\mathbf{Z}} =\n  \\begin{bmatrix}\n    z_{11} & z_{12} \\\\\n    z_{21} & z_{22} \\\\\n  \\end{bmatrix}\n  =\n  \\begin{bmatrix}\n    150 & 500 \\\\\n    200 & 100 \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nGiven the vector of total output \\(\\mathbf{x}' = \\begin{bmatrix} 1000 & 2000 \\end{bmatrix}\\), the Direct Requirements matrix (input requirements), constructed as \\(\\mathbf{A} = \\mathbf{Z\\hat{x}^{-1}}\\), is given by,\n\\[\\begin{equation}\n\\underset{(i \\times i)}{\\mathbf{A}} =\n    \\begin{bmatrix}\n    \\frac{z_{11}}{x_{1}} & \\frac{z_{12}}{x_{2}} \\\\\n    \\frac{z_{21}}{x_{1}} & \\frac{z_{22}}{x_{2}} \\\\\n  \\end{bmatrix}\n  =\n    \\begin{bmatrix}\n    a_{11} & a_{12} \\\\\n    a_{21} & a_{22} \\\\\n  \\end{bmatrix}\n  =\n  \\begin{bmatrix}\n    0.15 & 0.25 \\\\\n    0.20 & 0.05 \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nThe Total Requirements matrix (Leontief inverse), constructed as \\(\\mathbf{L} = \\left(\\mathbf{I} - \\mathbf{A}\\right)^{-1}\\), is given by,\n\\[\\begin{equation}\n\\underset{(i \\times i)}{\\mathbf{L}} =\n    \\begin{bmatrix}\n    l_{11} & l_{12} \\\\\n    l_{21} & l_{22} \\\\\n  \\end{bmatrix}\n  =\n  \\begin{bmatrix}\n    1.2541254 & 0.330033 \\\\\n    0.2640264 & 1.122112 \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\nGiven total output \\(\\mathbf{x}\\) and interindustry sales \\(\\mathbf{Z}\\), the exogenous final demand is simply the difference in total output and the row sums of interindustry transactions given by, \\(\\mathbf{f} = \\mathbf{x} - \\mathbf{Zi}\\) where \\(\\mathbf{f}' = \\begin{bmatrix} 350 & 1700 \\end{bmatrix}\\)\nSuppose, final demand for extraction were to increase to $600 next year and decrease to $1500 for farming, such that the change in final demand is given by, \\(\\Delta\\mathbf{f}' = \\begin{bmatrix} 250 & 200 \\end{bmatrix}\\). Using the Leontief inverse (total requirements) matrix, the expected change in total output of the economy is given by \\(\\Delta\\mathbf{x} = \\mathbf{L}\\Delta\\mathbf{f}\\) such that \\(\\Delta\\mathbf{x}' = \\begin{bmatrix} 247.5248 & -158.4158 \\end{bmatrix}\\)\n\n\nCode\n#A simple I/O analysis \"by hand\" presuming given national accounts are in the form of raw interindustry flows where one must generate a direct requirements matrices (Technical Coefficients) and the total requirements matrix (Leontief inverse).\n# Note the national IO table at present is a domestic flow specification as such the interindustry transactions table is no longer representative of a technological matrix. It rather represents the intra-national interindustry transactions, which are determined not only by technological factors, but also by trade factors. As a consequence in the domestic-flow table the balance between supply and demand is made considering only domestic production.\n\n\n#Toy Transaction matrix\nToy_Z_mat <- matrix(c(150, 500, 200, 100), nrow = 2, byrow = TRUE)\nrownames(Toy_Z_mat) <- c(\"Extract\", \"Farm\")\ncolnames(Toy_Z_mat) <- c(\"Extract\", \"Farm\")\nprint(\"Transaction matrix\")\n\n\n[1] \"Transaction matrix\"\n\n\nCode\nToy_Z_mat\n\n\n        Extract Farm\nExtract     150  500\nFarm        200  100\n\n\nCode\n#Toy Total Output vector\nToy_Total_Output <- c(1000, 2000)\nprint(\"Total Output vector\")\n\n\n[1] \"Total Output vector\"\n\n\nCode\nToy_Total_Output\n\n\n[1] 1000 2000\n\n\nCode\n#Toy Final Demand vector\nToy_Final_Demand <- Toy_Total_Output - (Toy_Z_mat %*% rep(c(1), each=ncol(Toy_Z_mat)))\nprint(\"Final Demand vector\")\n\n\n[1] \"Final Demand vector\"\n\n\nCode\nToy_Final_Demand\n\n\n        [,1]\nExtract  350\nFarm    1700\n\n\nCode\n#Toy Direct Requirements matrix\nToy_A_mat <- Toy_Z_mat %*% diag(1/Toy_Total_Output)\nrownames(Toy_A_mat) <- c(\"Extract\", \"Farm\")\ncolnames(Toy_A_mat) <- c(\"Extract\", \"Farm\")\nprint(\"Direct Requirements matrix\")\n\n\n[1] \"Direct Requirements matrix\"\n\n\nCode\nToy_A_mat\n\n\n        Extract Farm\nExtract    0.15 0.25\nFarm       0.20 0.05\n\n\nCode\n#Toy Total Requirements matrix\nToy_L_mat <- solve(diag(nrow(Toy_A_mat)) - Toy_A_mat)\nprint(\"Total Requirements matrix\")\n\n\n[1] \"Total Requirements matrix\"\n\n\nCode\nToy_L_mat\n\n\n          Extract     Farm\nExtract 1.2541254 0.330033\nFarm    0.2640264 1.122112\n\n\nCode\n#Toy change in Final Demand vector\nToy_Delta_Demand <- c(250, -200)\nprint(\"Final Demand vector change\")\n\n\n[1] \"Final Demand vector change\"\n\n\nCode\nToy_Delta_Demand\n\n\n[1]  250 -200\n\n\nCode\n#Toy change in Total Output vector\nToy_Delta_Output <- Toy_L_mat %*% Toy_Delta_Demand\nprint(\"Total Output vector change\")\n\n\n[1] \"Total Output vector change\"\n\n\nCode\nToy_Delta_Output\n\n\n             [,1]\nExtract  247.5248\nFarm    -158.4158\n\n\n\n\nCode\n# Note, to allow for the presence of final demand and primary inputs, in an open model, the sum of each column in $A$ must be less than 1. \n\n# Simple sufficient, but not necessary condition of sustainability. All must be TRUE.\nall(colSums(Toy_A_mat) < 1) %>% {paste0(\"Technology matrix structure passes sufficient test of sustainability: \", . )}\n\n\n[1] \"Technology matrix structure passes sufficient test of sustainability: TRUE\"\n\n\nCode\n#Hawkins – Simon condition check. All must be TRUE.\nlocal({\nPM = NULL\nfor(n in 2:nrow(Toy_A_mat)){\n  PM[1:n] = (det((diag(nrow(Toy_A_mat)) - Toy_A_mat)[1:n,1:n]) > 0)\n}\nall(all(PM) & (diag(diag(nrow(Toy_A_mat)) - Toy_A_mat) > 0) & (det(diag(nrow(Toy_A_mat)) - Toy_A_mat) > 0)) %>% {paste0(\"Leontief matrix structure passes necessary and sufficient test of practibility and viability: \", . )}\n})\n\n\n[1] \"Leontief matrix structure passes necessary and sufficient test of practibility and viability: TRUE\"\n\n\n\n\nRetrospective\nOne objective of the project narative is to quantify and match the economic connectedness of Micropolitian and Urban clusters to large Metropolitan economies. This is done by analyzing how well the commodity output mix of Micropolitian and Urban clusters to the commodity uses of industries in large Metropolitan cores.\nIn practice, for two primary ECAs \\(A\\) and \\(B\\), we construct the absolute rural use coefficients as:\n\n\\(\\displaystyle \\alpha^{r}_{A} = \\frac{\\sum^{n}_{j=1} u_{cj} s_{Aj}} {\\sum^{n}_{j=1} u_{cj}}\\), \\(\\displaystyle \\alpha^{r}_{B} = \\frac{\\sum^{n}_{j=1} u_{cj} s_{Bj}} {\\sum^{n}_{j=1} u_{cj}}\\)\n\nwhere \\(u_{cj}\\) the the value of purchases of a single commodity \\(c\\) by industry \\(j\\) from the BEA’s the Use matrix, and \\(s_{Aj}\\) and \\(s_{Bj}\\) are the annual sales of industry \\(j\\) in primary ECA regions \\(A\\) and \\(B\\), for \\(j = 1, \\dots, n\\) industries. Similarly, we construct the relative rural use coefficients as:\n\n\\(\\displaystyle \\rho^{r}_{A} = \\frac{\\alpha^{r}_{A}} {\\sum^{n}_{j=1} s_{Aj}}\\), \\(\\displaystyle \\rho^{r}_{B} = \\frac{\\alpha^{r}_{B}} {\\sum^{n}_{j=1} s_{Bj}}\\)\n\nIn the absolute specification, the numerator is a uniform modification of the elements in a row of the national Use matrix. The national value of purchases of commodity \\(c\\) by each industry \\(j\\) weighted by the regional value of “sales” by each industry \\(j\\) (CBP will offer values of county-level industry employment, Q1 payroll, and annual payroll). This is divided by the total intermediate value of commodity \\(c\\) at the national level.\nThe relative specification then takes the absolute coefficient divided by the sum of the regional “sales” by each industry \\(j\\).\nToy Model\nSuppose there is 1 National level economy composed of 2 industries (e.g., Hydrocarbon Extraction and Farming), 3 commodities (e.g., Gasoline, Hogs, and Ice cream), and 4 regions (e.g., Dane county (Madison , WI), Cook county (Chicago, IL), Brown County (Green Bay, WI), and the All the rest as a collective residual).\nAvailable data consists of a \\(3 \\times 2\\) National level commodity by industry Use table (\\(\\underset{(3 \\times 2)}{\\mathbf{U}} = [u_{ij}]\\)) that depicts the value of purchases of commodity \\(i\\) by industry \\(j\\). (In conjunction with a column vector of total industry outputs (\\(\\underset{(2 \\times 1)}{\\mathbf{x}} = [x_{j}]\\)), this gives rise to the standard Use coefficients \\(\\mathbf{B} = [b_{ij}] = u_{ij}/x_{j}\\) in which column \\(j\\) represents the value of inputs of each commodity per dollar’s worth \\(\\mathbf{B}\\) are therefore commodities-by-industries.) Similarly, other available data consists of a \\(2 \\times 3\\) National level commodity by industry Make table (\\(\\underset{(2 \\times 3)}{\\mathbf{V}} = [v_{ij}]\\)) that depicts the value of output of commodity \\(j\\) that is produced by industry \\(i\\). (Note, the row sums of \\(\\mathbf{V}\\) are total industry output \\(\\mathbf{x}\\) and column sums of \\(\\mathbf{V}\\) are total [commodity] output \\(\\mathbf{q}'\\).)\nAvailable data of at the region level consists of sector specific industry activity (\\(\\underset{(2 \\times 4)}{\\mathbf{x}^r} = [x^{r}_{j}]\\)) in the form of either employment, payroll, or simply number of establishments.\nAs such let,\n\\[\\begin{equation}\n\\underset{(c \\times i)}{\\mathbf{U}^{n}} =\n  \\begin{bmatrix}\n    u^{n}_{11} & u^{n}_{12} \\\\\n    u^{n}_{21} & u^{n}_{22} \\\\\n    u^{n}_{31} & u^{n}_{32} \\\\\n  \\end{bmatrix}\n  =\n  \\begin{bmatrix}\n    u^{n}_{GE} & u^{n}_{GF} \\\\\n    u^{n}_{HE} & u^{n}_{HF} \\\\\n    u^{n}_{IE} & u^{n}_{IF} \\\\\n  \\end{bmatrix}, \\;  \\text{ and} \\; \\;\n\\underset{(i \\times g)}{\\mathbf{X}^{r}_{empl/pay}} =\n  \\begin{bmatrix}\n    x^{1}_{1} & x^{2}_{1} & x^{3}_{1} & x^{4}_{1} \\\\\n    x^{1}_{2} & x^{2}_{2} & x^{3}_{2} & x^{4}_{2} \\\\\n  \\end{bmatrix}\n  =\n    \\begin{bmatrix}\n    x^{A}_{E} & x^{B}_{E} & x^{C}_{E} & x^{D}_{E} \\\\\n    x^{A}_{F} & x^{B}_{F} & x^{C}_{F} & x^{D}_{F} \\\\  \n    \\end{bmatrix}\n\\end{equation}\\]\nAs such the project narrative use coefficients (as demonstrated in the excel trial) are:\n\\[\n\\underset{(c \\times g)}{\\mathbf{\\alpha}} = (\\hat{\\mathbf{Ui}}^{n})^{-1}\\mathbf{U}^{n}\\mathbf{X}^{r} =\n\\begin{bmatrix}\n    \\frac{u^{n}_{GE}x^{A}_{E}+u^{n}_{GF}x^{A}_{F}}{u^{n}_{GE}+u^{n}_{GF}} & \\frac{u^{n}_{GE}x^{B}_{E}+u^{n}_{GF}x^{B}_{F}}{u^{n}_{GE}+u^{n}_{GF}} & \\frac{u^{n}_{GE}x^{C}_{E}+u^{n}_{GF}x^{C}_{F}}{u^{n}_{GE}+u^{n}_{GF}} & \\frac{u^{n}_{GE}x^{D}_{E}+u^{n}_{GF}x^{D}_{F}}{u^{n}_{GE}+u^{n}_{GF}} \\\\\n    \\frac{u^{n}_{HE}x^{A}_{E}+u^{n}_{HF}x^{A}_{F}}{u^{n}_{HE}+u^{n}_{HF}} & \\frac{u^{n}_{HE}x^{B}_{E}+u^{n}_{HF}x^{B}_{F}}{u^{n}_{HE}+u^{n}_{HF}} & \\frac{u^{n}_{HE}x^{C}_{E}+u^{n}_{HF}x^{C}_{F}}{u^{n}_{HE}+u^{n}_{HF}} & \\frac{u^{n}_{HE}x^{D}_{E}+u^{n}_{HF}x^{D}_{F}}{u^{n}_{HE}+u^{n}_{HF}} \\\\\n    \\frac{u^{n}_{IE}x^{A}_{E}+u^{n}_{IF}x^{A}_{F}}{u^{n}_{IE}+u^{n}_{IF}} & \\frac{u^{n}_{IE}x^{B}_{E}+u^{n}_{IF}x^{B}_{F}}{u^{n}_{IE}+u^{n}_{IF}} & \\frac{u^{n}_{IE}x^{C}_{E}+u^{n}_{IF}x^{C}_{F}}{u^{n}_{IE}+u^{n}_{IF}} & \\frac{u^{n}_{IE}x^{D}_{E}+u^{n}_{IF}x^{D}_{F}}{u^{n}_{IE}+u^{n}_{IF}} \\\\\n\\end{bmatrix}\n\\] and\n\\[\n\\underset{(c \\times g)}{\\mathbf{\\rho}} = (\\hat{\\mathbf{Ui}}^{n})^{-1}\\mathbf{U}^{n}\\mathbf{X}^{r}(\\hat{\\mathbf{iX}}^{r})^{-1} =\n\\begin{bmatrix}\n    \\frac{u^{n}_{GE}x^{A}_{E}+u^{n}_{GF}x^{A}_{F}}{(u^{n}_{GE}+u^{n}_{GF})(x^{A}_{E} + x^{A}_{F})} & \\frac{u^{n}_{GE}x^{B}_{E}+u^{n}_{GF}x^{B}_{F}}{(u^{n}_{GE}+u^{n}_{GF})(x^{B}_{E} + x^{B}_{F})} &  \\frac{u^{n}_{GE}x^{C}_{E}+u^{n}_{GF}x^{C}_{F}}{(u^{n}_{GE}+u^{n}_{GF})(x^{C}_{E} + x^{C}_{F})} & \\frac{u^{n}_{GE}x^{D}_{E}+u^{n}_{GF}x^{D}_{F}}{(u^{n}_{GE}+u^{n}_{GF})(x^{D}_{E} + x^{D}_{F})} \\\\\n    \\frac{u^{n}_{HE}x^{A}_{E}+u^{n}_{HF}x^{A}_{F}}{(u^{n}_{HE}+u^{n}_{HF})(x^{A}_{E} + x^{A}_{F})} & \\frac{u^{n}_{HE}x^{B}_{E}+u^{n}_{HF}x^{B}_{F}}{(u^{n}_{HE}+u^{n}_{HF})(x^{B}_{E} + x^{B}_{F})} & \\frac{u^{n}_{HE}x^{C}_{E}+u^{n}_{HF}x^{C}_{F}}{(u^{n}_{HE}+u^{n}_{HF})(x^{C}_{E} + x^{C}_{F})} & \\frac{u^{n}_{HE}x^{D}_{E}+u^{n}_{HF}x^{D}_{F}}{(u^{n}_{HE}+u^{n}_{HF})(x^{D}_{E} + x^{D}_{F})} \\\\\n    \\frac{u^{n}_{IE}x^{A}_{E}+u^{n}_{IF}x^{A}_{F}}{(u^{n}_{IE}+u^{n}_{IF})(x^{A}_{E} + x^{A}_{F})} & \\frac{u^{n}_{IE}x^{B}_{E}+u^{n}_{IF}x^{B}_{F}}{(u^{n}_{IE}+u^{n}_{IF})(x^{B}_{E} + x^{B}_{F})} & \\frac{u^{n}_{IE}x^{C}_{E}+u^{n}_{IF}x^{C}_{F}}{(u^{n}_{IE}+u^{n}_{IF})(x^{C}_{E} + x^{C}_{F})} & \\frac{u^{n}_{IE}x^{D}_{E}+u^{n}_{IF}x^{D}_{F}}{(x^{C}_{E} + x^{C}_{F})(x^{D}_{E} + x^{D}_{F})} \\\\\n\\end{bmatrix}\n\\]\nWhat are the interpretations of these coefficients explicitly?\nFrom here we can ask the question: Is Madison more economically connected to Chicago or Green Bay or is it an economic island? More specifically, is the commodity(?) output (mix?) of Madison more congruent with the commodity(?) output (mix?) of Chicago or Green Bay? (Note: there is no claim/evidence of trade and commodity flows across space using this specification, instead we are measuring possible (one direction) sector compatibility.)\nGiven the commodity by geography, relative use coefficient matrix \\(\\mathbf{\\rho}\\), we can now construct a geography by geography (from-to) score for each commodity given by:\n\\[\n\\mathbf{\\phi}_{Gasoline} = \\hat{\\rho}_{G}\\mathbf{i}\\mathbf{i}'[\\hat{\\rho}_{G}\\mathbf{i}\\mathbf{i}'+\\hat{\\rho}'_{G}\\mathbf{i}\\mathbf{i}']^{-1} =\n  \\begin{bmatrix}\n    \\frac{\\rho_{G}^{A}}{\\rho_{G}^{A} + \\rho_{G}^{A}} & \\frac{\\rho_{G}^{A}}{\\rho_{G}^{A} + \\rho_{G}^{B}} & \\frac{\\rho_{G}^{A}}{\\rho_{G}^{A} + \\rho_{G}^{C}} & \\frac{\\rho_{G}^{A}}{\\rho_{G}^{A} + \\rho_{G}^{D}} \\\\\n    \\frac{\\rho_{G}^{B}}{\\rho_{G}^{B} + \\rho_{G}^{A}} & \\frac{\\rho_{G}^{B}}{\\rho_{G}^{B} + \\rho_{G}^{B}} & \\frac{\\rho_{G}^{B}}{\\rho_{G}^{B} + \\rho_{G}^{C}} & \\frac{\\rho_{G}^{B}}{\\rho_{G}^{B} + \\rho_{G}^{D}} \\\\\n    \\frac{\\rho_{G}^{C}}{\\rho_{G}^{C} + \\rho_{G}^{A}} & \\frac{\\rho_{G}^{C}}{\\rho_{G}^{C} + \\rho_{G}^{B}} & \\frac{\\rho_{G}^{C}}{\\rho_{G}^{C} + \\rho_{G}^{C}} & \\frac{\\rho_{G}^{C}}{\\rho_{G}^{C} + \\rho_{G}^{D}} \\\\\n    \\frac{\\rho_{G}^{D}}{\\rho_{G}^{D} + \\rho_{G}^{A}} & \\frac{\\rho_{G}^{D}}{\\rho_{G}^{D} + \\rho_{G}^{B}} & \\frac{\\rho_{G}^{D}}{\\rho_{G}^{D} + \\rho_{G}^{C}} & \\frac{\\rho_{G}^{D}}{\\rho_{G}^{D} + \\rho_{G}^{D}} \\\\\n  \\end{bmatrix}\n\\] The maximum value by row of \\(\\mathbf{\\phi}_{G}\\) determines which typology each region is assigned on a per commodity basis.\nSimilarly the other commodities are given by:\n\\[\n\\mathbf{\\phi}_{Hogs} = \\hat{\\rho}_{H}\\mathbf{i}\\mathbf{i}'[\\hat{\\rho}_{H}\\mathbf{i}\\mathbf{i}'+\\hat{\\rho}'_{H}\\mathbf{i}\\mathbf{i}']^{-1} =\n  \\begin{bmatrix}\n    \\frac{\\rho_{H}^{A}}{\\rho_{H}^{A} + \\rho_{H}^{A}} & \\frac{\\rho_{H}^{A}}{\\rho_{H}^{A} + \\rho_{H}^{B}} & \\frac{\\rho_{H}^{A}}{\\rho_{H}^{A} + \\rho_{H}^{C}} & \\frac{\\rho_{H}^{A}}{\\rho_{H}^{A} + \\rho_{H}^{D}} \\\\\n    \\frac{\\rho_{H}^{B}}{\\rho_{H}^{B} + \\rho_{H}^{A}} & \\frac{\\rho_{H}^{B}}{\\rho_{H}^{B} + \\rho_{H}^{B}} & \\frac{\\rho_{H}^{B}}{\\rho_{H}^{B} + \\rho_{H}^{C}} & \\frac{\\rho_{H}^{B}}{\\rho_{H}^{B} + \\rho_{H}^{D}} \\\\\n    \\frac{\\rho_{H}^{C}}{\\rho_{H}^{C} + \\rho_{H}^{A}} & \\frac{\\rho_{H}^{C}}{\\rho_{H}^{C} + \\rho_{H}^{B}} & \\frac{\\rho_{H}^{C}}{\\rho_{H}^{C} + \\rho_{H}^{C}} & \\frac{\\rho_{H}^{C}}{\\rho_{H}^{C} + \\rho_{H}^{D}} \\\\\n    \\frac{\\rho_{H}^{D}}{\\rho_{H}^{D} + \\rho_{H}^{A}} & \\frac{\\rho_{H}^{D}}{\\rho_{H}^{D} + \\rho_{H}^{B}} & \\frac{\\rho_{H}^{D}}{\\rho_{H}^{D} + \\rho_{H}^{C}} & \\frac{\\rho_{H}^{D}}{\\rho_{H}^{D} + \\rho_{H}^{D}} \\\\\n  \\end{bmatrix}\n\\] \\[\n\\mathbf{\\phi}_{Ice cream} = \\hat{\\rho}_{I}\\mathbf{i}\\mathbf{i}'[\\hat{\\rho}_{I}\\mathbf{i}\\mathbf{i}'+\\hat{\\rho}'_{I}\\mathbf{i}\\mathbf{i}']^{-1} =\n  \\begin{bmatrix}\n    \\frac{\\rho_{I}^{A}}{\\rho_{I}^{A} + \\rho_{I}^{A}} & \\frac{\\rho_{I}^{A}}{\\rho_{I}^{A} + \\rho_{I}^{B}} & \\frac{\\rho_{I}^{A}}{\\rho_{I}^{A} + \\rho_{I}^{C}} & \\frac{\\rho_{I}^{A}}{\\rho_{I}^{A} + \\rho_{I}^{D}} \\\\\n    \\frac{\\rho_{I}^{B}}{\\rho_{I}^{B} + \\rho_{I}^{A}} & \\frac{\\rho_{I}^{B}}{\\rho_{I}^{B} + \\rho_{I}^{B}} & \\frac{\\rho_{I}^{B}}{\\rho_{I}^{B} + \\rho_{I}^{C}} & \\frac{\\rho_{I}^{B}}{\\rho_{I}^{B} + \\rho_{I}^{D}} \\\\\n    \\frac{\\rho_{I}^{C}}{\\rho_{I}^{C} + \\rho_{I}^{A}} & \\frac{\\rho_{I}^{C}}{\\rho_{I}^{C} + \\rho_{I}^{B}} & \\frac{\\rho_{I}^{C}}{\\rho_{I}^{C} + \\rho_{I}^{C}} & \\frac{\\rho_{I}^{C}}{\\rho_{I}^{C} + \\rho_{I}^{D}} \\\\\n    \\frac{\\rho_{I}^{D}}{\\rho_{I}^{D} + \\rho_{I}^{A}} & \\frac{\\rho_{I}^{D}}{\\rho_{I}^{D} + \\rho_{I}^{B}} & \\frac{\\rho_{I}^{D}}{\\rho_{I}^{D} + \\rho_{I}^{C}} & \\frac{\\rho_{I}^{D}}{\\rho_{I}^{D} + \\rho_{I}^{D}} \\\\\n  \\end{bmatrix}\n\\]\nSuch that\n\\[\n\\mathbf{\\phi} =\n\\begin{bmatrix}\n\\mathbf{\\phi}_{G} & 0 & 0 \\\\\n0 & \\mathbf{\\phi}_{H} & 0 \\\\\n0 & 0 & \\mathbf{\\phi}_{I} \\\\\n\\end{bmatrix}\n\\]\nThe maximum value by row of \\(\\mathbf{\\phi}\\) determines which typology each region is assigned on an overall commodity basis.\n(Alternative assignment procedures may incorporate a weighted mix of commodities or alternatively measure the “gravity” of regions by commodities to determine a regions commodity center of gravity.)\nSuppose,\n\\[\\begin{equation}\n\\underset{(c \\times i)}{\\mathbf{U}^{n}} =\n  \\begin{bmatrix}\n    18 & 12 \\\\\n    20 & 16 \\\\\n    2 & 6 \\\\\n  \\end{bmatrix}, \\;  \\text{ and} \\; \\;\n\\underset{(i \\times g)}{\\mathbf{X}^{r}_{employment}} =\n  \\begin{bmatrix}\n    500 & 10 & 30 & 4 \\\\\n    6000 & 200 & 400 & 50 \\\\\n  \\end{bmatrix}\n\\end{equation}\\]\n\n\nCode\nToy_U_mat <-  matrix(c(18, 12, 20, 16, 2, 6), nrow = 3, byrow = TRUE)\nrownames(Toy_U_mat) <- c(\"Gas\", \"Hogs\", \"Ice\")\ncolnames(Toy_U_mat) <- c(\"Extract\", \"Farm\")\nToy_X_mat <-  matrix(c(500, 10,  30, 4, 6000, 200, 400, 50), nrow = 2, byrow = TRUE)\nrownames(Toy_X_mat) <- c(\"Extract\", \"Farm\")\ncolnames(Toy_X_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_u_vec <- as.vector(Toy_U_mat %*% rep(c(1), each=ncol(Toy_U_mat)))\nToy_x_vec <- as.vector(t(rep(c(1), each=nrow(Toy_X_mat))) %*% Toy_X_mat)\n\nToy_Alpha_mat <- solve(matrix(diag(Toy_u_vec, nrow = 3),  ncol=3)) %*% Toy_U_mat %*% Toy_X_mat\nrownames(Toy_Alpha_mat) <- c(\"Gas\", \"Hogs\", \"Ice\")\nprint(\"Alpha matrix\")\n\n\n[1] \"Alpha matrix\"\n\n\nCode\nToy_Alpha_mat\n\n\n      AllElse     Brown     Cook     Dane\nGas  2700.000  86.00000 178.0000 22.40000\nHogs 2944.444  94.44444 194.4444 24.44444\nIce  4625.000 152.50000 307.5000 38.50000\n\n\nCode\nToy_Rho_mat <- Toy_Alpha_mat %*% solve(matrix(diag(Toy_x_vec, nrow = 4),  ncol=4)) \ncolnames(Toy_Rho_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Rho matrix\")\n\n\n[1] \"Rho matrix\"\n\n\nCode\nToy_Rho_mat\n\n\n       AllElse     Brown      Cook      Dane\nGas  0.4153846 0.4095238 0.4139535 0.4148148\nHogs 0.4529915 0.4497354 0.4521964 0.4526749\nIce  0.7115385 0.7261905 0.7151163 0.7129630\n\n\nCode\nToy_Phi_tilde_mat_G <- matrix(diag(Toy_Rho_mat[1,], nrow = 4),  ncol=4) %*%  rep(c(1), each=ncol(Toy_X_mat))  %*% t(rep(c(1), each=ncol(Toy_X_mat)))\nToy_Phi_mat_G <-  Toy_Phi_tilde_mat_G / (Toy_Phi_tilde_mat_G + t(Toy_Phi_tilde_mat_G))\nrownames(Toy_Phi_mat_G) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\ncolnames(Toy_Phi_mat_G) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Phi matrix - Gas\")\n\n\n[1] \"Phi matrix - Gas\"\n\n\nCode\nToy_Phi_mat_G\n\n\n          AllElse     Brown      Cook      Dane\nAllElse 0.5000000 0.5035524 0.5008628 0.5003432\nBrown   0.4964476 0.5000000 0.4973104 0.4967908\nCook    0.4991372 0.5026896 0.5000000 0.4994804\nDane    0.4996568 0.5032092 0.5005196 0.5000000\n\n\nCode\nToy_Phi_tilde_mat_H <- matrix(diag(Toy_Rho_mat[2,], nrow = 4),  ncol=4) %*%  rep(c(1), each=ncol(Toy_X_mat))  %*% t(rep(c(1), each=ncol(Toy_X_mat)))\nToy_Phi_mat_H <-  Toy_Phi_tilde_mat_H / (Toy_Phi_tilde_mat_H + t(Toy_Phi_tilde_mat_H))\nrownames(Toy_Phi_mat_H) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\ncolnames(Toy_Phi_mat_H) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Phi matrix - Hogs\")\n\n\n[1] \"Phi matrix - Hogs\"\n\n\nCode\nToy_Phi_mat_H\n\n\n          AllElse     Brown      Cook      Dane\nAllElse 0.5000000 0.5018034 0.5004392 0.5001748\nBrown   0.4981966 0.5000000 0.4986357 0.4983713\nCook    0.4995608 0.5013643 0.5000000 0.4997356\nDane    0.4998252 0.5016287 0.5002644 0.5000000\n\n\nCode\nToy_Phi_tilde_mat_I <- matrix(diag(Toy_Rho_mat[3,], nrow = 4),  ncol=4) %*% rep(c(1), each=ncol(Toy_X_mat))  %*% t(rep(c(1), each=ncol(Toy_X_mat)))\nToy_Phi_mat_I <-  Toy_Phi_tilde_mat_I / (Toy_Phi_tilde_mat_I + t(Toy_Phi_tilde_mat_I))\nrownames(Toy_Phi_mat_I) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\ncolnames(Toy_Phi_mat_I) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Phi matrix - Ice\")\n\n\n[1] \"Phi matrix - Ice\"\n\n\nCode\nToy_Phi_mat_I\n\n\n          AllElse     Brown      Cook      Dane\nAllElse 0.5000000 0.4949045 0.4987461 0.4995000\nBrown   0.5050955 0.5000000 0.5038417 0.5045956\nCook    0.5012539 0.4961583 0.5000000 0.5007539\nDane    0.5005000 0.4954044 0.4992461 0.5000000\n\n\nCode\nToy_Phi_mat <- bdiag(Toy_Phi_mat_G, Toy_Phi_mat_H, Toy_Phi_mat_I)\n\n\n\n\n“Quantify the economic connectedness of places through production supply chains.”\nSimply put at the core of our analysis lies the question: How similar are the inputs of Chicago to the outputs of Madison?\nGiven only national level Input-Output tables (consisting of Make/Use tables, industry-by-industry, industry-by-commodity, and commodity-by-commodity total requirements tables, and commodity-by-industry direct requirements tables) and regional level industry activity (in the form of employment, payroll, and number of establishments), we are left with a handful of possible methods to derive an answer.\nPossible Methodologies\nSeemingly, our first task is to “regionalize” the national level I/O accounts down to the desired regional scale.\n\nThe most comprehensive approach is to execute an interregional input–output (IRIO) model. However, this approach really only serves as a platonic abstraction given the vast and detailed necessary exogenous inputs.\nOne possible approach is to implement parts or all of a multiregional input–output model. The regional tables of an MRIO employ a regional technical coefficients matrix, \\(\\mathbf{A^{r}}\\). Under this paradigm, information regarding the region of origin is ignored. These transactions are denoted \\(z^{\\cdot r}_{ij}\\), with the coefficients estimated as \\(a^{r}_{ij} = \\frac{z^{\\cdot r}_{ij}}{x^{r}_{j}}\\) where \\(\\mathbf{A^{r}} = \\left[ a^{r}_{ij} \\right]\\). In practice, estimates are can be made using a product-mix approach. This technique essentially uses detailed level national technical coefficients and detailed level regional outputs to produce regional coefficients at a less detailed summary level (from weighted averages of the national detailed coefficients). This approach may be feasible given the available data, however, the necessary agglomeration of industry classes is not ideal. Furthermore, extending this approach into the realm of interregional tables, requires data on dollar flow of goods between regions, \\(z^{rs}_{i}\\), irrespective of the sector of destination in the receiving region. Again, however, this extension is beyond the scope of the available data.\nAnother possible approach is to employ the RAS technique, however, instead of the typical deployment for updating coefficients across time, we may update input coefficients across space. This approach requires \\(3n\\) sets of information for the location of interest. These are, total gross outputs, \\(x^{r}_{j}\\), total interindustry sales, by sector \\(u_{i} = \\sum^{n}_{j=1} z^{r}_{ij}\\), and total interindustry purchases, by sector \\(v_{i} = \\sum^{n}_{i=1} z^{r}_{ij}\\). But even this slimmed down approach is still beyond the scope of the data.\nYet another possible alternative approach might be to estimate regional supply percentages, \\(p^{r}_{i}\\). This approach requires knowledge of total regional output of each sector, \\(x^{r}_{i}\\), and the exports of the product of each sector from the region, \\(e^{r}_{i}\\), and the imports of all goods into the region, \\(m^{r}_{i}\\). With knowledge of regional supply percentages one can scale the national level direct/input requirements matrix to estimate a regional input requirements matrix, \\(\\mathbf{A^{rr}} = \\mathbf{\\hat{p}^{r}A}\\). Clearly, this too is beyond the scope of the available data.\n\nHowever in this manner, when trying to estimate \\(a^{rr}_{ij}\\) from national data, one can generalize the problem as a two step process of: (1) estimate a regional technical coefficient, \\(a^{r}_{ij}\\), from the corresponding national coefficient, \\(a^{n}_{ij}\\), and then (2) estimate the regional input coefficient, \\(a^{rr}_{ij}\\), as some proportion of the regional technical coefficient; that is, \\(a^{rr}_{ij} = p^{r}_{ij}a^{r}_{ij}\\) (where \\(0 \\leq p^{r}_{ij} \\leq 1\\)).\nThe procedure for estimating \\(a^{rr}_{ij}\\) from \\(a^{n}_{ij}\\) is therefore:\n\nfind \\(\\alpha^{r}_{ij} \\geq 0\\) such that \\(a^{r}_{ij} = (\\alpha^{r}_{ij}) (a^{n}_{ij})\\), and\nfind \\(\\beta^{r}_{ij}\\) (\\(0 \\leq \\beta^{r}_{ij} \\leq 1\\)) such that \\(a^{rr}_{ij} = (\\beta^{r}_{ij}) (a^{r}_{ij})\\)\n\nIf we assume regional production recipes are identical then \\(\\alpha^{r}_{ij} = 1\\) and \\(a^{r}_{ij} = a^{n}_{ij}\\) for all \\(i\\) and \\(j\\). Or if we assume each regional purchaser buys the same proportion of inputs from within the region, then \\(\\beta^{r}_{ij} = p^{r}_{i}\\) for all \\(i\\).\n\nGiven this structure, and assuming \\(a^{r}_{ij} = a^{n}_{ij}\\), we may propose various functional estimates of \\(\\beta^{r}_{ij}\\) to derive \\(a^{rr}_{ij}\\) from \\(a^{n}_{ij}\\), i.e., Location Quotients. The \\(LQ\\)s only require knowledge of gross output of sector \\(i\\) in region \\(r\\) and total output of all sectors in the region, \\(x^{r}_{i}\\) and \\(x^{r}\\), along with these values at the national level: \\(LQ^{r}_{i} = \\left( \\frac{x^{r}_{i} / x^{r}} {x^{n}_{i} / x^{n}} \\right)\\). Furthermore, many regional analysts will use employment rather than output as an alternative to the relevant measures of regional and national activity. This is a feasible option given the available data.\nAnother possible approach is to employ Regional Purchase Coefficients. The \\(RPC\\) is defined as the proportion of regional demand for that sector’s output that is fulfilled from regional production. Much in the same way that location quotients operate, we may designate \\(\\beta^{r}_{ij} = p^{r}_{i} = RPC^{r}_{i}\\), where \\(RPC^{r}_{i} = z^{rr}_{i} / (z^{rr}_{i} + z^{sr}_{i}) = 1/[1 + 1/(z^{rr}_{i}/z^{sr}_{i})]\\). The relative shipment term \\(z^{rr}_{i}/z^{sr}_{i}\\), may itself be estimated from published sources such as Census of Transportation, unfortunately these are beyond the current scope and available data.\nThe final standard approach is to implement a Gravity Model formulation to estimate commodity flows between regions. The Gravity Model estimates the flow of goods between regions as a function of (1) some measure of the total output of \\(i\\) in \\(r\\), \\(x^{r}_{i}\\), (2) some measure of the total purchases of \\(i\\) in \\(s\\), \\(x^{s}_{i}\\), and (3) the distance (as a measure of “impedance”) between the two regions, \\(d^{rs}\\). The relatively simplified gravity model specification is given by: \\(z^{rs}_{i} = \\frac{x^{r \\cdot}_{i}x^{\\cdot s}_{i}} {x^{\\cdot \\cdot}_{i}} Q^{rs}_{i}\\) where \\(x^{r \\cdot}_{i}\\) is the “supply pool” of good \\(i\\) in region \\(r\\), \\(x^{\\cdot s}_{i}\\) is the “demand pool” of good \\(i\\) in region \\(s\\), \\(x^{\\cdot \\cdot}_{i}\\) is the total production of commodity \\(i\\) in the system and \\(Q^{rs}_{i}\\) is a parameter to be estimated. In practice the interregional flows per industry \\(i\\) are given by \\([\\mathbf{{x'}}_{i}\\mathbf{x}_{i}](\\mathbf{x}_{i}\\mathbf{i})^{-1} \\odot \\mathbf{Q}\\), where \\(\\mathbf{Q} = (\\mathbf{d \\odot d})^{-1}\\) and \\(\\mathbf{d}\\) is the great-circle distance matrix derived from longitude and latitude vector pairs from region centroid. This approach may be feasible given the available data, too, (again with harsh simplifying assumptions).\n\nAssumptions and Caveats\nNote that strictly speaking, the \\(x^{r}_{j}\\) terms throughout are specified as gross outputs of each sector in the region. In practice, however, these outputs are approximated through the use of employment, payroll, or number of establishments data, and they are not technically equivalent substitutes. Furthermore, the “supply pool” and “demand pool” total outputs called for in in the simple Gravity specification are even greater abstractions. First we assume \\(\\alpha^{r}_{ij} = 1\\) such that \\(a^{r}_{ij} = a^{n}_{ij}\\), then assuming regional industry activity is equivalent to regional gross output \\(x^{r}_{j}\\) and regional final demand is approximated by a single region model (i.e., \\(\\mathbf{f^{r}} = \\mathbf{(I} - \\mathbf{A^{rr})x^{r}}\\)), which restricts by definition regional supply for good \\(i\\) to be equivalent to regional demand for good \\(i\\) (i.e., \\(x^{r \\cdot}_{i} = x^{\\cdot r}_{i}\\)). Note in fact, no national accounting data are needed for this gravity approach, one only needs regional industry activity and the impedance function, \\(Q^{rs}_{i}\\), which is given by \\(e^{-d^{rs}}\\) (or \\(1/(d^{rs})^2\\)) where \\(d^{rs}\\) is the great-circle distance between each region.\n\n\nNote that given an industry-by-industry BEA total requirements matrix, \\(\\mathbf{L}\\), we can derive an industry based technology, industry-by-industry direct requirements matrix, \\(\\mathbf{A}\\) from the accounting identity \\(\\mathbf{L} = (\\mathbf{I} - \\mathbf{A})^{-1}\\). And total industry output, \\(\\mathbf{x}\\), is also exogenously obtainable from the BEA Make/Use tables, allowing the further derivation of the transactions matrix, \\(\\mathbf{Z}\\), from the accounting identity \\(\\mathbf{A} = \\mathbf{Z\\hat{x}^{-1}}\\).\nData\n\n\nCode\nIndustry_Count <- 5\n\nToy_Total_mat <-  matrix(c(1.2523,  0.0143, 0.0055, 0.0276, 0.0892,\n                           0.0251,  1.1230, 0.1450, 0.0331, 0.0709,\n                           0.0203,  0.0236, 1.0420, 0.0128, 0.0237,\n                           0.0092,  0.0171, 0.0088, 1.0048, 0.0105,\n                           0.4020,  0.2675, 0.1055, 0.5102, 1.7703), nrow = Industry_Count, byrow = TRUE)\n\nrownames(Toy_Total_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_Total_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\n#kable(Toy_Total_mat, caption = \"Total Requirements Table ( Leontief inverse )\") \nprint(\"Total Requirements Table (Leontief inverse)\")\n\n\n[1] \"Total Requirements Table (Leontief inverse)\"\n\n\nCode\nToy_Total_mat\n\n\n        Extract  Fiber Grains   Hogs   Info\nExtract  1.2523 0.0143 0.0055 0.0276 0.0892\nFiber    0.0251 1.1230 0.1450 0.0331 0.0709\nGrains   0.0203 0.0236 1.0420 0.0128 0.0237\nHogs     0.0092 0.0171 0.0088 1.0048 0.0105\nInfo     0.4020 0.2675 0.1055 0.5102 1.7703\n\n\nCode\nToy_Direct_mat <- diag(ncol(Toy_Total_mat)) - solve(Toy_Total_mat)\nrownames(Toy_Direct_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_Direct_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\n#kable(round(Toy_Direct_mat, 4), caption = \"Direct Requirements Table (input coefficients / structural matrix / national technical coefficients)\") \nprint(\"Direct Requirements Table (input coefficients / structural matrix / national technical coefficients)\")\n\n\n[1] \"Direct Requirements Table (input coefficients / structural matrix / national technical coefficients)\"\n\n\nCode\nToy_Direct_mat %>% round(4)\n\n\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n\nCode\nToy_Total_Industry_Output <- c(263919, 171317, 244999, 708461, 3883386)\n\nToy_Transactions_mat <- round(Toy_Direct_mat %*%  diag(Toy_Total_Industry_Output), 2)\ncolnames(Toy_Transactions_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\nprint(\"Interindustry Transactions Table\")\n\n\n[1] \"Interindustry Transactions Table\"\n\n\nCode\nToy_Transactions_mat %>% round(4)\n\n\n         Extract    Fiber   Grains      Hogs       Info\nExtract 49703.25    98.89    13.13   1080.98  158693.79\nFiber    1332.82 16892.81 29855.46   7553.40  132623.40\nGrains   3037.32  2955.82  8973.12   3897.20   45022.95\nHogs     1412.01  2366.61  1463.49   1098.39   19491.48\nInfo    47854.80 22453.50  9129.78 202242.65 1625377.67\n\n\nCode\nRegion_Count <- 4\n\nToy_Xemp_mat <-  matrix(c(500, 13, 100, 50, \n                          400, 34,  30, 88,\n                          300, 120,  20, 123,\n                          200, 200,  75, 40,\n                          100, 10,  400, 4), nrow = Industry_Count, byrow = TRUE)\n\nrownames(Toy_Xemp_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_Xemp_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n#kable(Toy_Xemp_mat, caption = \"Regional Industry-Employment Table\") \nprint(\"Regional Industry-Employment Table\" )\n\n\n[1] \"Regional Industry-Employment Table\"\n\n\nCode\nToy_Xemp_mat\n\n\n        AllElse Brown Cook Dane\nExtract     500    13  100   50\nFiber       400    34   30   88\nGrains      300   120   20  123\nHogs        200   200   75   40\nInfo        100    10  400    4\n\n\nCode\nToy_Direct_mat_r <- kronecker(diag(1, Region_Count), Toy_Direct_mat)\n\n\nLocation Quotients\n\n\nCode\n############ Simple Location Quotient\nToy_LQ <-  matrix(0, nrow=Industry_Count, ncol = Region_Count)\n\nfor (i in 1:Industry_Count){\n for (j in 1:Region_Count){\n  Toy_LQ[i,j] <-((Toy_Xemp_mat[i,j])/sum(Toy_Xemp_mat[,j]))/(sum(Toy_Xemp_mat[i,])/sum(Toy_Xemp_mat))\n }\n}\nrownames(Toy_LQ) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_LQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n\n\nprint(\"Simple Location Quotients\")\n\n\n[1] \"Simple Location Quotients\"\n\n\nCode\nround(Toy_LQ, 4)\n\n\n        AllElse  Brown   Cook   Dane\nExtract  1.4113 0.1460 0.6774 0.6941\nFiber    1.3560 0.4586 0.2441 1.4672\nGrains   0.9972 1.5870 0.1595 2.0107\nHogs     0.7267 2.8915 0.6541 0.7148\nInfo     0.3641 0.1449 3.4951 0.0716\n\n\nCode\nToy_LQc <-  matrix(0, nrow = Industry_Count, ncol = Region_Count)\nfor (i in 1:Industry_Count){\n for (j in 1:Region_Count){\n  if (Toy_LQ[i,j] > 1){\n   Toy_LQc[i,j] <- 1\n  }\n  else{\n   Toy_LQc[i,j] <- Toy_LQ[i,j]\n  }\n }\n}\nrownames(Toy_LQc) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_LQc) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n#round(Toy_LQc,  4)\n\n\nToy_Dir_LQ <-  c()\nfor (i in 1:ncol(Toy_LQc)){\n  Toy_Dir_LQ[[i]] <- (diag(Toy_LQc[,i]) %*% Toy_Direct_mat) %>% round(4)\n  rownames(Toy_Dir_LQ[[i]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n}\nnames(Toy_Dir_LQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Regionial Direct Requirement Coeffecients from Simple Location Quotients\")\n\n\n[1] \"Regionial Direct Requirement Coeffecients from Simple Location Quotients\"\n\n\nCode\nToy_Dir_LQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0172 0.0365 0.0055 0.0116\nHogs     0.0039 0.0100 0.0043 0.0011 0.0036\nInfo     0.0660 0.0477 0.0136 0.1039 0.1524\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.0275 0.0001 0.0000 0.0002 0.0060\nFiber    0.0023 0.0452 0.0559 0.0049 0.0157\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.0263 0.0190 0.0054 0.0414 0.0606\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1276 0.0004 0.0000 0.0010 0.0277\nFiber    0.0012 0.0241 0.0297 0.0026 0.0083\nGrains   0.0018 0.0028 0.0058 0.0009 0.0018\nHogs     0.0035 0.0090 0.0039 0.0010 0.0033\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1307 0.0004 0.0000 0.0011 0.0284\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0038 0.0099 0.0043 0.0011 0.0036\nInfo     0.0130 0.0094 0.0027 0.0204 0.0300\n\n\n\n\nCode\n############ Cross-Industry Location Quotient\n\n#This allows for differing modifiers within a given row of the national matrix; that is, it allows for differing cell-by-cell adjustments within An rather than uniform adjustments along each row.\n\nToy_CLQ <-  c()\n for (i in 1:Region_Count){\n  Toy_CLQ[[i]] <- (Toy_LQ[,i] %*% t(1/Toy_LQ[,i])) %>% round(4)\n  rownames(Toy_CLQ[[i]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n }\nnames(Toy_CLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n print(\"Cross-Industry Location Quotients\")\n\n\n[1] \"Cross-Industry Location Quotients\"\n\n\nCode\n Toy_CLQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  1.0000 1.0407 1.4153 1.9419 3.8763\nFiber    0.9609 1.0000 1.3599 1.8659 3.7246\nGrains   0.7066 0.7353 1.0000 1.3721 2.7389\nHogs     0.5150 0.5359 0.7288 1.0000 1.9961\nInfo     0.2580 0.2685 0.3651 0.5010 1.0000\n\n$Brown\n        Extract  Fiber Grains   Hogs    Info\nExtract  1.0000 0.3183 0.0920 0.0505  1.0078\nFiber    3.1413 1.0000 0.2890 0.1586  3.1659\nGrains  10.8703 3.4605 1.0000 0.5488 10.9556\nHogs    19.8058 6.3050 1.8220 1.0000 19.9612\nInfo     0.9922 0.3159 0.0913 0.0501  1.0000\n\n$Cook\n        Extract   Fiber  Grains   Hogs   Info\nExtract  1.0000  2.7753  4.2459 1.0357 0.1938\nFiber    0.3603  1.0000  1.5299 0.3732 0.0698\nGrains   0.2355  0.6536  1.0000 0.2439 0.0456\nHogs     0.9655  2.6796  4.0995 1.0000 0.1871\nInfo     5.1595 14.3191 21.9066 5.3437 1.0000\n\n$Dane\n        Extract  Fiber Grains   Hogs    Info\nExtract  1.0000 0.4731 0.3452 0.9710  9.6908\nFiber    2.1139 1.0000 0.7297 2.0525 20.4855\nGrains   2.8969 1.3704 1.0000 2.8128 28.0737\nHogs     1.0299 0.4872 0.3555 1.0000  9.9806\nInfo     0.1032 0.0488 0.0356 0.1002  1.0000\n\n\nCode\nToy_CLQc <- Toy_CLQ\nfor (r in 1:length(Toy_CLQc)){\nfor (i in 1:nrow(Toy_CLQc[[r]])){\n for (j in 1:ncol(Toy_CLQc[[r]])){\n  if (Toy_CLQc[[r]][i,j] > 1){\n   Toy_CLQc[[r]][i,j] <- 1\n  }\n  else{\n   Toy_CLQc[[r]][i,j] <- Toy_CLQc[[r]][i,j]\n  }\n }\n}\n}\n\n\nToy_Dir_CLQ <-  c()\nfor (i in 1:length(Toy_CLQc)){\n  Toy_Dir_CLQ[[i]] <- (Toy_CLQc[[i]] * Toy_Direct_mat) %>% round(4)\n}\nnames(Toy_Dir_CLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Regionial Direct Requirement Coeffecients from Cross-Industry Location Quotients\")\n\n\n[1] \"Regionial Direct Requirement Coeffecients from Cross-Industry Location Quotients\"\n\n\nCode\nToy_Dir_CLQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0049 0.0986 0.1219 0.0107 0.0342\nGrains   0.0081 0.0127 0.0366 0.0055 0.0116\nHogs     0.0028 0.0074 0.0044 0.0016 0.0050\nInfo     0.0468 0.0352 0.0136 0.1430 0.4185\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0002 0.0000 0.0001 0.0409\nFiber    0.0051 0.0986 0.0352 0.0017 0.0342\nGrains   0.0115 0.0173 0.0366 0.0030 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.1799 0.0414 0.0034 0.0143 0.4185\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0079\nFiber    0.0018 0.0986 0.1219 0.0040 0.0024\nGrains   0.0027 0.0113 0.0366 0.0013 0.0005\nHogs     0.0052 0.0138 0.0060 0.0016 0.0009\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0003 0.0000 0.0015 0.0409\nFiber    0.0051 0.0986 0.0889 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0067 0.0021 0.0016 0.0050\nInfo     0.0187 0.0064 0.0013 0.0286 0.4185\n\n\n\n\nCode\n############ Semilogarithmic Location Quotient\n\nToy_SLQ <-  c()\n for (i in 1:Region_Count){\n  Toy_SLQ[[i]] <- (Toy_LQ[,i] %*% t(1/(log2(1 + Toy_LQ[,i])))) %>% round(4)\n  rownames(Toy_SLQ[[i]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n }\nnames(Toy_SLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Semilogarithmic Location Quotients\")\n\n\n[1] \"Semilogarithmic Location Quotients\"\n\n\nCode\nToy_SLQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  1.1114 1.1415 1.4142 1.7908 3.1507\nFiber    1.0679 1.0968 1.3588 1.7208 3.0274\nGrains   0.7853 0.8065 0.9992 1.2654 2.2262\nHogs     0.5723 0.5878 0.7282 0.9222 1.6225\nInfo     0.2867 0.2945 0.3648 0.4620 0.8128\n\n$Brown\n        Extract  Fiber Grains   Hogs    Info\nExtract  0.7426 0.2681 0.1065 0.0745  0.7480\nFiber    2.3327 0.8421 0.3344 0.2339  2.3498\nGrains   8.0723 2.9141 1.1573 0.8096  8.1315\nHogs    14.7077 5.3095 2.1086 1.4750 14.8156\nInfo     0.7368 0.2660 0.1056 0.0739  0.7422\n\n$Cook\n        Extract   Fiber  Grains   Hogs   Info\nExtract  0.9078  2.1499  3.1720 0.9331 0.3124\nFiber    0.3271  0.7747  1.1429 0.3362 0.1126\nGrains   0.2138  0.5064  0.7471 0.2198 0.0736\nHogs     0.8765  2.0758  3.0627 0.9009 0.3016\nInfo     4.6837 11.0925 16.3659 4.8141 1.6119\n\n$Dane\n        Extract  Fiber Grains   Hogs    Info\nExtract  0.9127 0.5327 0.4365 0.8920  6.9549\nFiber    1.9293 1.1261 0.9227 1.8857 14.7021\nGrains   2.6439 1.5433 1.2645 2.5842 20.1480\nHogs     0.9399 0.5486 0.4495 0.9187  7.1629\nInfo     0.0942 0.0550 0.0450 0.0921  0.7177\n\n\nCode\nToy_SLQc <- Toy_SLQ\nfor (r in 1:length(Toy_SLQc)){\nfor (i in 1:nrow(Toy_SLQc[[r]])){\n for (j in 1:ncol(Toy_SLQc[[r]])){\n  if (Toy_SLQc[[r]][i,j] > 1){\n   Toy_SLQc[[r]][i,j] <- 1\n  }\n  else{\n   Toy_SLQc[[r]][i,j] <- Toy_SLQc[[r]][i,j]\n  }\n }\n}\n}\n\n\nToy_Dir_SLQ <-  c()\nfor (i in 1:length(Toy_SLQc)){\n  Toy_Dir_SLQ[[i]] <- (Toy_SLQc[[i]] * Toy_Direct_mat) %>% round(4)\n}\nnames(Toy_Dir_SLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Regionial Direct Requirement Coeffecients from Semilogarithmic Location Quotients\")\n\n\n[1] \"Regionial Direct Requirement Coeffecients from Semilogarithmic Location Quotients\"\n\n\nCode\nToy_Dir_SLQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0090 0.0139 0.0366 0.0055 0.0116\nHogs     0.0031 0.0081 0.0043 0.0014 0.0050\nInfo     0.0520 0.0386 0.0136 0.1319 0.3402\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1399 0.0002 0.0000 0.0001 0.0306\nFiber    0.0051 0.0830 0.0407 0.0025 0.0342\nGrains   0.0115 0.0173 0.0366 0.0045 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.1336 0.0349 0.0039 0.0211 0.3106\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1710 0.0006 0.0001 0.0014 0.0128\nFiber    0.0017 0.0764 0.1219 0.0036 0.0038\nGrains   0.0025 0.0087 0.0274 0.0012 0.0009\nHogs     0.0047 0.0138 0.0060 0.0014 0.0015\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1719 0.0003 0.0000 0.0014 0.0409\nFiber    0.0051 0.0986 0.1124 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0050 0.0076 0.0027 0.0014 0.0050\nInfo     0.0171 0.0072 0.0017 0.0263 0.3004\n\n\n\n\nCode\n############ Flegg Location Quotient\nToy_FLQ_delta <- .3\nToy_lambda <- (log2(1 + (colSums(Toy_Xemp_mat)/sum(Toy_Xemp_mat))))^(Toy_FLQ_delta)\n\nToy_FLQ <-  c()\n for (i in 1:Region_Count){\n  Toy_FLQ[[i]] <- ((Toy_LQ[,i] %*% t(1/Toy_LQ[,i])) * Toy_lambda[i]) %>% round(4)\n  rownames(Toy_FLQ[[i]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n }\nnames(Toy_FLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n\nprint(\"Flegg Location Quotients\")\n\n\n[1] \"Flegg Location Quotients\"\n\n\nCode\nToy_FLQ \n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.8654 0.9007 1.2248 1.6806 3.3546\nFiber    0.8315 0.8654 1.1769 1.6148 3.2234\nGrains   0.6115 0.6364 0.8654 1.1874 2.3703\nHogs     0.4456 0.4638 0.6307 0.8654 1.7275\nInfo     0.2233 0.2323 0.3160 0.4335 0.8654\n\n$Brown\n        Extract  Fiber Grains   Hogs    Info\nExtract  0.5996 0.1909 0.0552 0.0303  0.6043\nFiber    1.8836 0.5996 0.1733 0.0951  1.8984\nGrains   6.5182 2.0750 0.5996 0.3291  6.5693\nHogs    11.8762 3.7807 1.0925 0.5996 11.9694\nInfo     0.5950 0.1894 0.0547 0.0300  0.5996\n\n$Cook\n        Extract  Fiber  Grains   Hogs   Info\nExtract  0.6898 1.9144  2.9288 0.7144 0.1337\nFiber    0.2486 0.6898  1.0553 0.2574 0.0482\nGrains   0.1625 0.4509  0.6898 0.1683 0.0315\nHogs     0.6660 1.8484  2.8279 0.6898 0.1291\nInfo     3.5591 9.8774 15.1114 3.6861 0.6898\n\n$Dane\n        Extract  Fiber Grains   Hogs    Info\nExtract  0.5647 0.2671 0.1949 0.5483  5.4721\nFiber    1.1937 0.5647 0.4120 1.1590 11.5675\nGrains   1.6358 0.7738 0.5647 1.5883 15.8523\nHogs     0.5816 0.2751 0.2007 0.5647  5.6357\nInfo     0.0583 0.0276 0.0201 0.0566  0.5647\n\n\nCode\nToy_FLQc <- Toy_FLQ\nfor (r in 1:length(Toy_FLQc)){\nfor (i in 1:nrow(Toy_FLQc[[r]])){\n for (j in 1:ncol(Toy_FLQc[[r]])){\n  if (Toy_FLQc[[r]][i,j] > 1){\n   Toy_FLQc[[r]][i,j] <- 1\n  }\n  else{\n   Toy_FLQc[[r]][i,j] <- Toy_FLQc[[r]][i,j]\n  }\n }\n}\n}\n\n\nToy_Dir_FLQ <-  c()\nfor (i in 1:length(Toy_FLQc)){\n  Toy_Dir_FLQ[[i]] <- (Toy_FLQc[[i]] * Toy_Direct_mat) %>% round(4)\n}\nnames(Toy_Dir_FLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Regionial Direct Requirement Coeffecients from Flegg Location Quotients\")\n\n\n[1] \"Regionial Direct Requirement Coeffecients from Flegg Location Quotients\"\n\n\nCode\nToy_Dir_FLQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1630 0.0005 0.0001 0.0015 0.0409\nFiber    0.0042 0.0853 0.1219 0.0107 0.0342\nGrains   0.0070 0.0110 0.0317 0.0055 0.0116\nHogs     0.0024 0.0064 0.0038 0.0013 0.0050\nInfo     0.0405 0.0304 0.0118 0.1238 0.3622\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1129 0.0001 0.0000 0.0000 0.0247\nFiber    0.0051 0.0591 0.0211 0.0010 0.0342\nGrains   0.0115 0.0173 0.0220 0.0018 0.0116\nHogs     0.0054 0.0138 0.0060 0.0009 0.0050\nInfo     0.1079 0.0248 0.0020 0.0086 0.2510\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1299 0.0006 0.0001 0.0011 0.0055\nFiber    0.0013 0.0680 0.1219 0.0027 0.0016\nGrains   0.0019 0.0078 0.0253 0.0009 0.0004\nHogs     0.0036 0.0138 0.0060 0.0011 0.0006\nInfo     0.1813 0.1311 0.0373 0.2855 0.2887\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1063 0.0002 0.0000 0.0008 0.0409\nFiber    0.0051 0.0557 0.0502 0.0107 0.0342\nGrains   0.0115 0.0134 0.0207 0.0055 0.0116\nHogs     0.0031 0.0038 0.0012 0.0009 0.0050\nInfo     0.0106 0.0036 0.0007 0.0162 0.2364\n\n\n\n\nCode\n############ Augmented Flegg Location Quotient\n\nToy_LQa <- Toy_LQ\nfor (i in 1:nrow(Toy_LQa)){\nfor (j in 1:ncol(Toy_LQa)){\n  if (Toy_LQ[i,j] > 1){\n  Toy_LQa[i,j] <- log2(1 + Toy_LQ[i,j])\n }\n else{\n  Toy_LQa[i,j] <- 1\n }\n}\n}\n   \nToy_AFLQ <- Toy_FLQ\nfor (r in 1:length(Toy_FLQ)){\n  Toy_AFLQ[[r]] <- (Toy_FLQ[[r]] %*% diag(Toy_LQa[,r])) %>% round(4)\n  colnames(Toy_AFLQ[[r]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n}\n\nprint(\"Augmented Flegg Location Quotients\")\n\n\n[1] \"Augmented Flegg Location Quotients\"\n\n\nCode\nToy_AFLQ \n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  1.0989 1.1136 1.2248 1.6806 3.3546\nFiber    1.0558 1.0699 1.1769 1.6148 3.2234\nGrains   0.7765 0.7868 0.8654 1.1874 2.3703\nHogs     0.5658 0.5734 0.6307 0.8654 1.7275\nInfo     0.2835 0.2872 0.3160 0.4335 0.8654\n\n$Brown\n        Extract  Fiber Grains   Hogs    Info\nExtract  0.5996 0.1909 0.0757 0.0594  0.6043\nFiber    1.8836 0.5996 0.2376 0.1864  1.8984\nGrains   6.5182 2.0750 0.8222 0.6451  6.5693\nHogs    11.8762 3.7807 1.4981 1.1754 11.9694\nInfo     0.5950 0.1894 0.0750 0.0588  0.5996\n\n$Cook\n        Extract  Fiber  Grains   Hogs   Info\nExtract  0.6898 1.9144  2.9288 0.7144 0.2899\nFiber    0.2486 0.6898  1.0553 0.2574 0.1045\nGrains   0.1625 0.4509  0.6898 0.1683 0.0683\nHogs     0.6660 1.8484  2.8279 0.6898 0.2799\nInfo     3.5591 9.8774 15.1114 3.6861 1.4957\n\n$Dane\n        Extract  Fiber Grains   Hogs    Info\nExtract  0.5647 0.3480 0.3099 0.5483  5.4721\nFiber    1.1937 0.7357 0.6551 1.1590 11.5675\nGrains   1.6358 1.0082 0.8979 1.5883 15.8523\nHogs     0.5816 0.3584 0.3191 0.5647  5.6357\nInfo     0.0583 0.0360 0.0320 0.0566  0.5647\n\n\nCode\nToy_Dir_AFLQ <-  c()\nfor (i in 1:length(Toy_AFLQ)){\n  Toy_Dir_AFLQ[[i]] <- (Toy_AFLQ[[i]] * Toy_Direct_mat) %>% round(4)\n}\nnames(Toy_Dir_AFLQ) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Regionial Direct Requirement Coeffecients from Augmented Flegg Location Quotients\")\n\n\n[1] \"Regionial Direct Requirement Coeffecients from Augmented Flegg Location Quotients\"\n\n\nCode\nToy_Dir_AFLQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.2070 0.0006 0.0001 0.0026 0.1371\nFiber    0.0053 0.1055 0.1434 0.0172 0.1101\nGrains   0.0089 0.0136 0.0317 0.0065 0.0275\nHogs     0.0030 0.0079 0.0038 0.0013 0.0087\nInfo     0.0514 0.0376 0.0118 0.1238 0.3622\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1129 0.0001 0.0000 0.0001 0.0247\nFiber    0.0095 0.0591 0.0290 0.0020 0.0648\nGrains   0.0750 0.0358 0.0301 0.0035 0.0762\nHogs     0.0635 0.0522 0.0089 0.0018 0.0601\nInfo     0.1079 0.0248 0.0028 0.0168 0.2510\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1299 0.0011 0.0002 0.0011 0.0118\nFiber    0.0013 0.0680 0.1286 0.0027 0.0036\nGrains   0.0019 0.0078 0.0253 0.0009 0.0008\nHogs     0.0036 0.0255 0.0169 0.0011 0.0014\nInfo     0.6453 1.2946 0.5631 1.0523 0.6260\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1063 0.0002 0.0000 0.0008 0.2236\nFiber    0.0060 0.0725 0.0798 0.0124 0.3950\nGrains   0.0188 0.0174 0.0329 0.0087 0.1838\nHogs     0.0031 0.0050 0.0019 0.0009 0.0283\nInfo     0.0106 0.0047 0.0012 0.0162 0.2364\n\n\nEach Location Quotient is a different estimate of the regional supply proportion of good \\(i\\). Using a Location Quotient in conjunction with the national-level Direct Requirements matrix, one can estimate an intraregional Direct Requirements (input/ technical coefficients) matrix.\nReprise\nHowever, to get back to the central question: How similar are the inputs of Chicago to the outputs of Madison? we may only need to look as far as the Location Quotients themselves. We have established that if \\(LQ_{i}^{r} > 1\\), then industry \\(i\\) is concentrated in region \\(r\\) relative to the nation. As such we can expect all demand of good \\(i\\) to be satisfied regionally and regional surplus will be exported to other less concentrated regions. Similarly, if \\(LQ_{i}^{r} < 1\\), then industry \\(i\\) is less concentrated in region \\(r\\) relative to the nation. Thus if we look for industries in Madison where \\(LQ_{i}^{r} > 1\\), and in Chicago where \\(LQ_{i}^{r} < 1\\), we may use this matching to address the central question.\nFor example, the Fiber and Grains simple LQ for Dane County (i.e., Madison) are both greater than 1. Similarly, only the Fiber simple LQ for Brown County (i.e., Green Bay), and only the Grain simple LQ for All Else is less than 1, making either only a partial partner. However, the Fiber and Grains simple LQ for Cook County (i.e., Chicago) are both less than 1, implying it is the strongest sink and best matched for using goods for which Madison is concentrated.\n\n\nCode\nToy_export <- Toy_CLQ$Dane\nToy_import <- Toy_CLQ$Cook\n\nfor (i in 1:Industry_Count){\n for (j in 1:Industry_Count){\n  if (Toy_export[i,j] < 1){\n   Toy_export[i,j] <- 0\n  }\n  else{\n   Toy_export[i,j] <- Toy_export[i,j]\n  }\n }\n}\n\nfor (i in 1:Industry_Count){\n for (j in 1:Industry_Count){\n  if (Toy_import[i,j] > 1){\n   Toy_import[i,j] <- 0\n  }\n  else{\n   Toy_import[i,j] <- Toy_import[i,j]\n  }\n }\n}\n\nprint(\"Sub-industry CLQ Import/Export Compatibility - Madison as Exporter, Chicago as Importer\")\n\n\n[1] \"Sub-industry CLQ Import/Export Compatibility - Madison as Exporter, Chicago as Importer\"\n\n\nCode\n(Toy_export/Toy_import) %>% round(4)\n\n\n        Extract  Fiber Grains    Hogs     Info\nExtract  1.0000    NaN    NaN     NaN  50.0041\nFiber    5.8671 1.0000    NaN  5.4997 293.4885\nGrains  12.3011 2.0967      1 11.5326 615.6513\nHogs     1.0667    NaN    NaN  1.0000  53.3437\nInfo        NaN    NaN    NaN     NaN   1.0000\n\n\nSimilarly, for the other sub-industry location quotients, if sector \\(i\\) at the region-level is relatively smaller than sector \\(j\\) at the region-level (i.e, \\(CLQ^{r}_{ij} <1\\)), then some of \\(j\\)’s need for \\(i\\) in \\(r\\) will need to be imported.\nOne can divide two sub-industry location quotients, an export region by an import region, and derive the following relationships:\nNaN -> Exp < 1 & Imp > 1\nInf -> Exp >1 & Imp > 1\n0.0 -> Exp < 1 & Imp < 1\n‘##’ -> Exp > 1 & Imp < 1\nIn this example, Chicago will need to import: Extract, Fiber, Grains, and Hog commodities for the Info sector, Fiber for the Extract sector, Fiber and Grains for the Hogs sector, Nothing for the Grains sector, Grains for the Fiber sector, and finally Fiber, Grains, and Hogs for the Extract sector. While Madison will export its excess in the exact same categories!\nMAPE\n\n\nCode\n#MAPE\n\nlocal({ \n  MAT <- bdiag(Toy_Dir_LQ)\n  n <- 4\n  Toy_MAPE_mat  <<- c()\n for (i in seq(from = 1, to = length(Toy_LQ), by = 5 )){\n for (j in seq(from = 1, to = length(Toy_LQ), by = 5 )){\n  Toy_MAPE_mat <<- c(Toy_MAPE_mat, mean((abs(c(MAT[j:j+n,j:j+n]) - c(MAT[i:i+n,i:i+n]))/c(MAT[i:i+n,i:i+n]))*100))\n  }\n }\n  Toy_MAPE_mat <<- matrix(Toy_MAPE_mat, nrow = n, byrow = FALSE)\n}) \ncolnames(Toy_MAPE_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_MAPE_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_MAPE_mat\n\n\n          AllElse     Brown     Cook Dane\nAllElse   0.00000 151.48515 63.58423  408\nBrown    60.23622   0.00000 85.51971  102\nCook    174.60630 590.59406  0.00000 1295\nDane     80.31496  50.49505 92.83154    0\n\n\nAlternatively, we can ask the question: Are the inter-industry flows of Chicago similar to the inter-industry flows of Madison? Or in other words do they have congruent intraregional economic activity? To answer this we can compare the estimated regional level Direct Requirements (technical coefficients) through the application of Mean Absolute Percent Error. Let \\(\\text{MAPE} = \\left(\\sum_{i=1}^{n}\\sum_{j=1}^{n}\\frac{|a_{ij} - \\tilde{a}_{ij}|}{a_{ij}}\\right) \\times 100\\).\nFor example, using the regional Direct Requirements matrix derived from the simple location quotient procedure, we can see that among the possible matches, the inter-industry flows of Madison are most similar to Green Bay, with Chicago and Madison displaying the most incongruent intraregional economic activity. In this case more incongruity points toward more gains from trade.\nGravity\n\n\nCode\nToy_Lat <- c(42.3, 44.49, 41.84, 43.07)\nToy_Lon <- c(-89.04, -88.03, -87.77, -89.39)\nToy_Dist_mat <- distm(cbind(Toy_Lon, Toy_Lat))/1000000\ncolnames(Toy_Dist_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_Dist_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n\n#Toy_Q <- (1/(Toy_Dist_mat)^2)\nToy_Q <- exp(-Toy_Dist_mat)\n\nToy_Gravity_mat <- as.list(c())\nfor (i in 1:nrow(Toy_Xemp_mat)){\n  Toy_Gravity_mat[[i]] <- (Toy_Xemp_mat[i,] %*% t(Toy_Xemp_mat[i,])) / sum(Toy_Xemp_mat[i,]) * Toy_Q\n  rownames(Toy_Gravity_mat[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n}\nnames(Toy_Gravity_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\nprint(\"Gravity Model Formulations - Interreginal Flows by Industry\")\n\n\n[1] \"Gravity Model Formulations - Interreginal Flows by Industry\"\n\n\nCode\nToy_Gravity_mat \n\n\n$Extract\n           AllElse     Brown      Cook       Dane\nAllElse 377.073906 7.5843547 67.096967 34.4544477\nBrown     7.584355 0.2549020  1.459629  0.8090985\nCook     67.096967 1.4596292 15.082956  6.2312113\nDane     34.454448 0.8090985  6.231211  3.7707391\n\n$Fiber\n          AllElse     Brown      Cook      Dane\nAllElse 289.85507 19.059813 19.341430 58.266965\nBrown    19.05981  2.094203  1.375542  4.473259\nCook     19.34143  1.375542  1.630435  3.951672\nDane     58.26697  4.473259  3.951672 14.028986\n\n$Grains\n           AllElse     Brown      Cook      Dane\nAllElse 159.857904 49.466697 9.4817668 59.887583\nBrown    49.466697 25.577265 3.1733325 21.636127\nCook      9.481767  3.173332 0.7104796  3.610295\nDane     59.887583 21.636127 3.6102952 26.872114\n\n$Hogs\n         AllElse    Brown      Cook      Dane\nAllElse 77.66990 60.08576 25.913761 14.193894\nBrown   60.08576 77.66990 21.681871 12.819891\nCook    25.91376 21.68187 10.922330  4.813157\nDane    14.19389 12.81989  4.813157  3.106796\n\n$Info\n           AllElse      Brown       Cook       Dane\nAllElse 19.4552529 1.50506649  69.237804 0.71107545\nBrown    1.5050665 0.19455253   5.793081 0.06422416\nCook    69.2378044 5.79308097 311.284047 2.57201127\nDane     0.7110755 0.06422416   2.572011 0.03112840\n\n\nSimilarly, the Gravity approach represents interregional interindustry transaction estimates. In this example, the “All Else” category dominates the analysis, and rightly so given that it is an aggregate residual category. Furthermore the “impedance” (distance) measure is undefinable for an aggregate “All Else” category. For illustration an arbitrary proxy location is used.\nIgnoring “AllElse”, we may employ the Gravity approach to answer the question: Does Madison have more interregional interindustry transaction with Chicago or Green Bay?\nIn this example, Chicago is a stronger trading partner for Extraction and Info, whereas Green Bay is a stronger trading partner for Fiber, Grains, and Hogs.\nTaking one step further and comparing the aggregate magnitudes of interregional interindustry transactions reveals that Green Bay has nearly twice as much trading value than Chicago does with Madison. Note, however, that when we employ an exponential distance decay impediance function, such that intraregional interindustry transactions are definable, then Madison will actually have more “pull” with itself than Greenbay for Fiber and Grains. In this case, we would estimate Madison to have interregional interindustry transactions with Chicago for Extraction and Info commodities, and only Hogs with Green Bay. And as for Grains and Fiber, interindustry transactions are mostly dominated by intraregional exchange.\n\n\nA nested and hierarchical approach\nWe have shown that it is feasible to construct regional-level technical coefficients matrix from a national-level Leontief matrix and regional industry employment. This then brings about some possible extensions. One is the possibility of performing a multistage regionalization, whereby first or second-level administrative divisions (e.g., states) are used to establish a coarse regionalization. Then either place specific technical coefficients can be derived using the administrative division technical coefficients or the administrative division regionalization can be used as the basis for constructing interregional compatibility.\nTo derive an administrative technical coefficients matrix, we aggregate the place specific regional industry employment to the administrative level. Let \\(\\mathbf{X^{r}}\\) be the industry-by-region measures economic activity. If all \\(j\\) regions make up the desired administrative division, then the aggregate administrative measure of economic activity is given by \\(\\mathbf{x^{R}} = \\mathbf{X^{r}i}\\), i.e., the row sums of the industry-by-region economic activity matrix. The administrative division Direct Requirements (technical coefficients) matrix can then be derived using a Location Quotient approach.\nThe simple administrative division location quotient is given by:\n\\[LQ^{R}_{i} = \\left( \\frac{x^{R}_{i} / x^{R}} {x^{n}_{i} / x^{n}} \\right) = \\left( \\frac{(\\mathbf{X^{r}i})_{i}  / \\mathbf{iX^{r}i}} {x^{n}_{i} / x^{n}} \\right) \\] And the administrative Direct Requirements (technical coefficients) matrix is generated by: \\[\na^{R}_{ij} = \\left\\{\n\\begin{align*}\n(LQ^{R}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{R}_{i} < 1 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space LQ^{R}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\] From here we may iterate and derive regional technical coefficients from the administrative technical coefficients matrix using a location quotient approach.\nThe second stage simple regional division location quotient is given by:\n\\[\\widetilde{LQ}^{r}_{i} = \\left( \\frac{x^{r}_{i} / x^{r}} {x^{R}_{i} / x^{R}} \\right) = \\left( \\frac{x^{r}_{i} / x^{r}} {(\\mathbf{X^{r}i})_{i}  / \\mathbf{iX^{r}i}} \\right)  \\]\nAnd the administrative Direct Requirements (technical coefficients) matrix is generated by: \\[\n\\widetilde{a}^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(\\widetilde{LQ}^{r}_{i})a^{R}_{ij} \\space\\space \\text{if} \\space\\space \\widetilde{LQ}^{r}_{i} < 1 \\\\\na^{R}_{ij} \\space\\space \\text{if} \\space\\space \\widetilde{LQ}^{r}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nWe can then examine what, if any, functional differences exist between a deriving regional coefficients directly from the national level or from a two stage, national to administrative division to regional approach. Note, under the simple LQ approach, whenever \\(LQ \\geq 1 \\vdash a^{n}_{ij} = a^{rr}_{ij} = a^{R}_{ij} = \\widetilde{a}^{rr}_{ij}\\).\nCombining steps, we can specify the Administrative Direct Requirements directly from the National Direct Requirements as: \\[\n\\widetilde{a}^{rr}_{ij} = \\left\\{\n\\begin{align*}\n(LQ^{r}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space \\widetilde{LQ}^{r}_{i} < 1 \\text{ } \\& \\text{ } LQ^{R}_{i} < 1 \\\\\n(\\widetilde{LQ}^{r}_{i})a^{n}_{ij} \\space\\space \\text{if} \\space\\space \\widetilde{LQ}^{r}_{i} < 1 \\text{ } \\& \\text{ } LQ^{R}_{i} \\geq 1 \\\\\n(LQ^{R}_{i})a^{n}_{ij} \\space\\space  \\text{if} \\space\\space \\widetilde{LQ}^{r}_{i} \\geq 1 \\text{ } \\& \\text{ } LQ^{R}_{i} < 1 \\\\\na^{n}_{ij} \\space\\space \\text{if} \\space\\space \\widetilde{LQ}^{r}_{i} \\geq 1 \\text{ } \\& \\text{ } LQ^{R}_{i} \\geq 1\n\\end{align*}\n\\right\\}\n\\]\nNote \\[\\widetilde{LQ}^{r}_{i} \\cdot LQ^{R}_{i} = \\left( \\frac{x^{r}_{i} / x^{r}} {x^{R}_{i} / x^{R}} \\right) \\cdot \\left( \\frac{x^{R}_{i} / x^{R}} {x^{n}_{i} / x^{n}} \\right) = \\left( \\frac{x^{r}_{i} / x^{r}} {x^{n}_{i} / x^{n}} \\right) = LQ^{r}_{i}\\]\nIn this example, the national-level Direct Requirements matrix is, \\(a^{n}_{ij}\\), is given by:\n\n\nCode\nprint(\"National Direct Requirement Coeffecients\")\n\n\n[1] \"National Direct Requirement Coeffecients\"\n\n\nCode\nToy_Direct_mat %>% round(4)\n\n\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n\nAnd the intraregional Direct Requirements matrix is, \\(a^{rr}_{ij} \\space \\forall \\space r\\) using the simple LQ approach is is given by:\n\n\nCode\nprint(\"Regionial Direct Requirement Coeffecients from Simple Location Quotients\")\n\n\n[1] \"Regionial Direct Requirement Coeffecients from Simple Location Quotients\"\n\n\nCode\nToy_Dir_LQ\n\n\n$AllElse\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0172 0.0365 0.0055 0.0116\nHogs     0.0039 0.0100 0.0043 0.0011 0.0036\nInfo     0.0660 0.0477 0.0136 0.1039 0.1524\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.0275 0.0001 0.0000 0.0002 0.0060\nFiber    0.0023 0.0452 0.0559 0.0049 0.0157\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.0263 0.0190 0.0054 0.0414 0.0606\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1276 0.0004 0.0000 0.0010 0.0277\nFiber    0.0012 0.0241 0.0297 0.0026 0.0083\nGrains   0.0018 0.0028 0.0058 0.0009 0.0018\nHogs     0.0035 0.0090 0.0039 0.0010 0.0033\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1307 0.0004 0.0000 0.0011 0.0284\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0038 0.0099 0.0043 0.0011 0.0036\nInfo     0.0130 0.0094 0.0027 0.0204 0.0300\n\n\nSuppose \\(R = \\{\\text{Brown, Cook, Dane}\\}\\), such that administrative-level Direct Requirements matrix, \\(a^{R}_{ij}\\), using the simple LQ approach is is given by:\n\n\nCode\nToy_Xemp_mat_R <- Toy_Xemp_mat[,2:4] %*% rep(c(1), each = ncol(Toy_Xemp_mat[,2:4]))\ncolnames(Toy_Xemp_mat_R) <- c(\"ADM1\")\n\nToy_LQ_R <-  matrix(0, nrow=nrow(Toy_Xemp_mat_R), ncol = ncol(Toy_Xemp_mat_R))\nfor (i in 1:nrow(Toy_Xemp_mat_R)){\n for (j in 1:ncol(Toy_Xemp_mat_R)){\n  Toy_LQ_R[i,j] <-((Toy_Xemp_mat_R[i,j])/sum(Toy_Xemp_mat_R[,j]))/(sum(Toy_Xemp_mat[i,])/sum(Toy_Xemp_mat))\n }\n}\nrownames(Toy_LQ_R) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_LQ_R) <- c(\"ADM1\")\n\n\nToy_LQc_R <-  Toy_LQ_R\nfor (i in 1:nrow(Toy_Xemp_mat_R)){\n for (j in 1:ncol(Toy_Xemp_mat_R)){\n  if (Toy_LQ_R[i,j] > 1){\n   Toy_LQc_R[i,j] <- 1\n  }\n  else{\n   Toy_LQc_R[i,j] <- Toy_LQ_R[i,j]\n  }\n }\n}\nrownames(Toy_LQc_R) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_LQc_R)  <- c(\"ADM1\")\n\n\n\nToy_Dir_LQ_R <-  c()\nfor (i in 1:ncol(Toy_LQc_R)){\n  Toy_Dir_LQ_R[[i]] <- (diag(Toy_LQc_R[,i]) %*% Toy_Direct_mat) %>% round(4)\n  rownames(Toy_Dir_LQ_R[[i]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n}\nnames(Toy_Dir_LQ_R) <- c(\"ADM1\")\n#print(\"Administrative Division Direct Requirement Coefficients from Simple Location Quotients\")\nToy_Dir_LQ_R\n\n\n$ADM1\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.0994 0.0003 0.0000 0.0008 0.0216\nFiber    0.0030 0.0583 0.0721 0.0063 0.0202\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n\nAnd administrative intraregional Direct Requirements matrix, \\(\\widetilde{a}^{rr}_{ij}\\) using the simple LQ approach is is given by:\n\n\nCode\nToy_Xemp_mat_Rt <- Toy_Xemp_mat[,2:4]\n\nToy_LQ_Rt <-  matrix(0, nrow=nrow(Toy_Xemp_mat_Rt), ncol = ncol(Toy_Xemp_mat_Rt))\nfor (i in 1:nrow(Toy_Xemp_mat_Rt)){\n for (j in 1:ncol(Toy_Xemp_mat_Rt)){\n  Toy_LQ_Rt[i,j] <-((Toy_Xemp_mat_Rt[i,j])/sum(Toy_Xemp_mat_Rt[,j]))/(sum(Toy_Xemp_mat_R[i,])/sum(Toy_Xemp_mat_R))\n }\n}\n\nrownames(Toy_LQ_Rt) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_LQ_Rt) <- c(\"Brown\", \"Cook\", \"Dane\")\n\n\nToy_LQc_Rt <-  Toy_LQ_Rt\nfor (i in 1:nrow(Toy_Xemp_mat_Rt)){\n for (j in 1:ncol(Toy_Xemp_mat_Rt)){\n  if (Toy_LQ_Rt[i,j] > 1){\n   Toy_LQc_Rt[i,j] <- 1\n  }\n  else{\n   Toy_LQc_Rt[i,j] <- Toy_LQ_Rt[i,j]\n  }\n }\n}\nrownames(Toy_LQc_Rt) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_LQc_Rt)  <- c(\"Brown\", \"Cook\", \"Dane\")\n\n\n\nToy_Dir_LQ_Rt <-  c()\nfor (i in 1:ncol(Toy_LQc_Rt)){\n  Toy_Dir_LQ_Rt[[i]] <- (diag(Toy_LQc_Rt[,i]) %*% Toy_Direct_mat) %>% round(4)\n  rownames(Toy_Dir_LQ_Rt[[i]]) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n}\nnames(Toy_Dir_LQ_Rt) <- c(\"Brown\", \"Cook\", \"Dane\")\n#print(\"Regional Direct Requirement Coefficients from Administrative Division Coefficients from Simple Location Quotients\")\nToy_Dir_LQ_Rt\n\n\n$Brown\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.0521 0.0002 0.0000 0.0004 0.0113\nFiber    0.0039 0.0765 0.0945 0.0083 0.0265\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.0152 0.0110 0.0031 0.0239 0.0350\n\n$Cook\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0021 0.0407 0.0503 0.0044 0.0141\nGrains   0.0018 0.0027 0.0058 0.0009 0.0018\nHogs     0.0027 0.0069 0.0030 0.0008 0.0025\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n$Dane\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0029 0.0075 0.0033 0.0008 0.0027\nInfo     0.0075 0.0054 0.0015 0.0118 0.0173\n\n\nReprise (Again)\n\n\nCode\nprint(\"Simple Location Quotients\")\n\n\n[1] \"Simple Location Quotients\"\n\n\nCode\nToy_LQ %>% round(4)\n\n\n        AllElse  Brown   Cook   Dane\nExtract  1.4113 0.1460 0.6774 0.6941\nFiber    1.3560 0.4586 0.2441 1.4672\nGrains   0.9972 1.5870 0.1595 2.0107\nHogs     0.7267 2.8915 0.6541 0.7148\nInfo     0.3641 0.1449 3.4951 0.0716\n\n\nCode\nprint(\"Administrative Division Simple Location Quotients\")\n\n\n[1] \"Administrative Division Simple Location Quotients\"\n\n\nCode\nToy_LQ_Rt %>% round(4)\n\n\n         Brown   Cook   Dane\nExtract 0.2765 1.2829 1.3145\nFiber   0.7755 0.4127 2.4809\nGrains  1.5818 0.1590 2.0041\nHogs    2.2012 0.4979 0.5442\nInfo    0.0837 2.0205 0.0414\n\n\nRemember that under the original national paradigm Madison was an exporter (i.e., \\(LQ^{r}_{i} > 1\\)) for only Fiber and Grains and Chicago was the only region that was an importer (i.e., \\(LQ^{r}_{i} < 1\\)) of both Fiber and Grains. However, under the nested hierarchical paradigm, Madison is an exporter of Fiber and Grains and Extraction (i.e., \\(\\widetilde{LQ}^{r}_{i} \\geq 1\\)). Within the administrative division cluster regime, there is now no longer a region that is an importer of all three of Madison’s exports. Chicago is still an importer of Fiber and Grains, but not Extraction. Whereas Green Bay is an importer of Extract and Fiber, but not Grains.\n\n\nProject Narrative Models\nIn addition to the methods established in the literature deployed to answer the question: How similar are the inputs of Chicago to the outputs of Madison? we may also adapt the Project Narrative methods, too (within the data restrictions).\nLet the “Absolute Total Use Coefficient” be given by \\(\\mathbf{\\alpha} = (\\widehat{\\mathbf{Zi}})^{-1}\\mathbf{Z}\\mathbf{X}^{r}\\) and the “Relative Total Use Coefficient” be given by \\({\\mathbf{\\rho}} = (\\widehat{\\mathbf{Zi}})^{-1}\\mathbf{Z}\\mathbf{X}^{r}(\\widehat{\\mathbf{iX}^{r}})^{-1}\\).\nWe may also specify “Absolute Regional Typology Coefficients” and “Relative Regional Typology Coefficients” for each commodity \\(i\\) as \\(\\mathbf{\\phi}_{i} =\\hat{\\alpha}_{i}\\mathbf{i}\\mathbf{i}'[\\hat{\\alpha}_{i}\\mathbf{i}\\mathbf{i}'+\\hat{\\alpha}'_{i}\\mathbf{i}\\mathbf{i}']^{-1}\\) and \\(\\mathbf{\\varphi}_{i} =\\hat{\\rho}_{i}\\mathbf{i}\\mathbf{i}'[\\hat{\\rho}_{i}\\mathbf{i}\\mathbf{i}'+\\hat{\\rho}'_{i}\\mathbf{i}\\mathbf{i}']^{-1}\\).\nIn addition, we may also specify “Gravity of Absolute Total Use Coefficients” and “Gravity of Relative Total Use Coefficients” for each commodity \\(i\\) as \\(\\theta_{i} = [\\mathbf{{\\alpha'}}_{i}\\mathbf{\\alpha}_{i}](\\mathbf{\\alpha}_{i}\\mathbf{i})^{-1} \\odot \\mathbf{Q}\\) and \\(\\vartheta_{i} = [\\mathbf{{\\rho'}}_{i}\\mathbf{\\rho}_{i}](\\mathbf{\\rho}_{i}\\mathbf{i})^{-1} \\odot \\mathbf{Q}\\), where \\(\\mathbf{Q} = e^{-\\mathbf{d}}\\) the exponential distance decay function.\nAlternatively, as\n\n\\(\\displaystyle \\alpha^{r}_{i} = \\frac{\\sum^{n}_{j=1} z_{ij} x^{r}_{j}} {\\sum^{n}_{j=1} z_{ij}}\\), \\(\\displaystyle \\rho^{r}_{i} = \\frac{\\alpha^{r}_{i}} {\\sum^{n}_{j=1} x^{r}_{j}}\\)\n\n\n\\(\\displaystyle \\phi^{rs}_{i} = \\frac{\\alpha^{r}_{i}} {\\alpha^{r}_{i} + \\alpha^{s}_{i} }\\), \\(\\displaystyle \\varphi^{rs}_{i} = \\frac{\\rho^{r}_{i}} {\\rho^{r}_{i} + \\rho^{s}_{i} }\\)\n\n\n\\(\\displaystyle \\theta^{rs}_{i} = \\frac{\\alpha^{r}_{i} \\alpha^{s}_{i} } {\\sum^{g}_{r=1} \\alpha^{r}_{i}} Q^{rs}\\), \\(\\displaystyle \\vartheta^{rs}_{i} = \\frac{\\rho^{r}_{i} \\rho^{s}_{i} } {\\sum^{g}_{r=1} \\rho^{r}_{i}} Q^{rs}\\)\n\n\n\nCode\nToy_Alpha_mat <- (solve(diag(as.vector(Toy_Transactions_mat %*% rep(c(1), each=ncol(Toy_Transactions_mat))))) %*% Toy_Transactions_mat %*% Toy_Xemp_mat) %>% round(4)\nrownames(Toy_Alpha_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\nprint(\"Absolute Total Use Coefficients\")\n\n\n[1] \"Absolute Total Use Coefficients\"\n\n\nCode\nToy_Alpha_mat\n\n\n         AllElse   Brown     Cook    Dane\nExtract 195.5279 11.7096 326.9819 15.1414\nFiber   165.4815 37.2428 291.3718 32.1796\nGrains  167.0881 38.2934 295.4202 28.9835\nHogs    164.9321 26.6736 314.3561 22.4827\nInfo    125.1320 31.0339 351.8303 10.5308\n\n\nCode\nToy_Rho_mat <- (solve(diag(as.vector(Toy_Transactions_mat %*% rep(c(1), each=ncol(Toy_Transactions_mat))))) %*% Toy_Transactions_mat %*% Toy_Xemp_mat %*% solve(diag(as.vector(rep(c(1), each=nrow(Toy_Xemp_mat)) %*% Toy_Xemp_mat ))) ) %>% round(4)\nrownames(Toy_Rho_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_Rho_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nprint(\"Relative Total Use Coefficients\")\n\n\n[1] \"Relative Total Use Coefficients\"\n\n\nCode\nToy_Rho_mat \n\n\n        AllElse  Brown   Cook   Dane\nExtract  0.1304 0.0311 0.5232 0.0496\nFiber    0.1103 0.0988 0.4662 0.1055\nGrains   0.1114 0.1016 0.4727 0.0950\nHogs     0.1100 0.0708 0.5030 0.0737\nInfo     0.0834 0.0823 0.5629 0.0345\n\n\nCode\nToy_Phi_mat_A <-  c()\n for (i in 1:Industry_Count){\n  Toy_Phi_tilde_mat  <- c(Toy_Alpha_mat[i,]) %*%  t(rep(c(1), each=ncol(Toy_Xemp_mat)))\n  Toy_Phi_mat_A[[i]] <- (Toy_Phi_tilde_mat / (Toy_Phi_tilde_mat + t(Toy_Phi_tilde_mat))) %>% round(4)\n  rownames(Toy_Phi_mat_A[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n  colnames(Toy_Phi_mat_A[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n }\nnames(Toy_Phi_mat_A) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\nprint(\"Regional Typology Coefficients - Absolute\")\n\n\n[1] \"Regional Typology Coefficients - Absolute\"\n\n\nCode\nToy_Phi_mat_A  \n\n\n$Extract\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.9435 0.3742 0.9281\nBrown    0.0565 0.5000 0.0346 0.4361\nCook     0.6258 0.9654 0.5000 0.9557\nDane     0.0719 0.5639 0.0443 0.5000\n\n$Fiber\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.8163 0.3622 0.8372\nBrown    0.1837 0.5000 0.1133 0.5365\nCook     0.6378 0.8867 0.5000 0.9005\nDane     0.1628 0.4635 0.0995 0.5000\n\n$Grains\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.8135 0.3613 0.8522\nBrown    0.1865 0.5000 0.1147 0.5692\nCook     0.6387 0.8853 0.5000 0.9107\nDane     0.1478 0.4308 0.0893 0.5000\n\n$Hogs\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.8608 0.3441 0.8800\nBrown    0.1392 0.5000 0.0782 0.5426\nCook     0.6559 0.9218 0.5000 0.9333\nDane     0.1200 0.4574 0.0667 0.5000\n\n$Info\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.8013 0.2624 0.9224\nBrown    0.1987 0.5000 0.0811 0.7466\nCook     0.7376 0.9189 0.5000 0.9709\nDane     0.0776 0.2534 0.0291 0.5000\n\n\nCode\nToy_Phi_mat_R <-  c()\n for (i in 1:Industry_Count){\n  Toy_Phi_tilde_mat  <- c(Toy_Rho_mat[i,]) %*%  t(rep(c(1), each=ncol(Toy_Xemp_mat)))\n  Toy_Phi_mat_R[[i]] <- (Toy_Phi_tilde_mat / (Toy_Phi_tilde_mat + t(Toy_Phi_tilde_mat))) %>% round(4)\n  rownames(Toy_Phi_mat_R[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n  colnames(Toy_Phi_mat_R[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n }\nnames(Toy_Phi_mat_R) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\nprint(\"Regional Typology Coefficients - Relative\")\n\n\n[1] \"Regional Typology Coefficients - Relative\"\n\n\nCode\nToy_Phi_mat_R\n\n\n$Extract\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.8074 0.1995 0.7244\nBrown    0.1926 0.5000 0.0561 0.3854\nCook     0.8005 0.9439 0.5000 0.9134\nDane     0.2756 0.6146 0.0866 0.5000\n\n$Fiber\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.5275 0.1913 0.5111\nBrown    0.4725 0.5000 0.1749 0.4836\nCook     0.8087 0.8251 0.5000 0.8155\nDane     0.4889 0.5164 0.1845 0.5000\n\n$Grains\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.5230 0.1907 0.5397\nBrown    0.4770 0.5000 0.1769 0.5168\nCook     0.8093 0.8231 0.5000 0.8327\nDane     0.4603 0.4832 0.1673 0.5000\n\n$Hogs\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.6084 0.1794 0.5988\nBrown    0.3916 0.5000 0.1234 0.4900\nCook     0.8206 0.8766 0.5000 0.8722\nDane     0.4012 0.5100 0.1278 0.5000\n\n$Info\n        AllElse  Brown   Cook   Dane\nAllElse  0.5000 0.5033 0.1290 0.7074\nBrown    0.4967 0.5000 0.1276 0.7046\nCook     0.8710 0.8724 0.5000 0.9422\nDane     0.2926 0.2954 0.0578 0.5000\n\n\nCode\nToy_Lat <- c(42.3, 44.49, 41.84, 43.07)\nToy_Lon <- c(-89.04, -88.03, -87.77, -89.39)\nToy_Dist_mat <- distm(cbind(Toy_Lon, Toy_Lat))/1000000\ncolnames(Toy_Dist_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_Dist_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n\n#Toy_Q <- (1/(Toy_Dist_mat)^2)\nToy_Q <- exp(-Toy_Dist_mat)\n\nToy_Gravity_mat_Alpha <- as.list(c())\nfor (i in 1:nrow(Toy_Alpha_mat)){\n  Toy_Gravity_mat_Alpha[[i]] <- ((Toy_Alpha_mat[i,] %*% t(Toy_Alpha_mat[i,])) / sum(Toy_Alpha_mat[i,]) * Toy_Q ) %>% round(4)\n  rownames(Toy_Gravity_mat_Alpha[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n}\nnames(Toy_Gravity_mat_Alpha) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\nprint(\"Gravity of Absolute Total Use Coefficients\")\n\n\n[1] \"Gravity of Absolute Total Use Coefficients\"\n\n\nCode\nToy_Gravity_mat_Alpha\n\n\n$Extract\n         AllElse  Brown     Cook   Dane\nAllElse  69.5921 3.2241 103.5431 4.9242\nBrown     3.2241 0.2496   5.1882 0.2663\nCook    103.5431 5.1882 194.6210 7.4464\nDane      4.9242 0.2663   7.4464 0.4173\n\n$Fiber\n        AllElse   Brown     Cook    Dane\nAllElse 52.0338  9.0594  81.5136  9.2456\nBrown    9.0594  2.6356  15.3493  1.8794\nCook    81.5136 15.3493 161.3176 14.7208\nDane     9.2456  1.8794  14.7208  1.9677\n\n$Grains\n        AllElse   Brown     Cook    Dane\nAllElse 52.6976  9.3430  82.8958  8.3525\nBrown    9.3430  2.7679  15.8956  1.7289\nCook    82.8958 15.8956 164.7330 13.3539\nDane     8.3525  1.7289  13.3539  1.5856\n\n$Hogs\n        AllElse   Brown     Cook    Dane\nAllElse 51.4767  6.4403  87.2919  6.4117\nBrown    6.4403  1.3464  11.8118  0.9366\nCook    87.2919 11.8118 187.0012 11.0506\nDane     6.4117  0.9366  11.0506  0.9565\n\n$Info\n        AllElse   Brown     Cook   Dane\nAllElse 30.1971  5.7936  75.5399 2.3221\nBrown    5.7936  1.8574  15.6751 0.5201\nCook    75.5399 15.6751 238.7235 5.9039\nDane     2.3221  0.5201   5.9039 0.2139\n\n\nCode\nToy_Gravity_mat_Rho <- as.list(c())\nfor (i in 1:nrow(Toy_Rho_mat)){\n  Toy_Gravity_mat_Rho[[i]] <- ((Toy_Rho_mat[i,] %*% t(Toy_Rho_mat[i,])) / sum(Toy_Rho_mat[i,]) * Toy_Q ) %>% round(4)\n  rownames(Toy_Gravity_mat_Rho[[i]]) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n}\nnames(Toy_Gravity_mat_Rho) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\nprint(\"Gravity of Relative Total Use Coefficients\")\n\n\n[1] \"Gravity of Relative Total Use Coefficients\"\n\n\nCode\nToy_Gravity_mat_Rho\n\n\n$Extract\n        AllElse  Brown   Cook   Dane\nAllElse  0.0232 0.0043 0.0827 0.0080\nBrown    0.0043 0.0013 0.0165 0.0017\nCook     0.0827 0.0165 0.3728 0.0292\nDane     0.0080 0.0017 0.0292 0.0034\n\n$Fiber\n        AllElse  Brown   Cook   Dane\nAllElse  0.0156 0.0108 0.0586 0.0136\nBrown    0.0108 0.0125 0.0439 0.0110\nCook     0.0586 0.0439 0.2784 0.0520\nDane     0.0136 0.0110 0.0520 0.0143\n\n$Grains\n        AllElse  Brown   Cook   Dane\nAllElse  0.0159 0.0112 0.0600 0.0124\nBrown    0.0112 0.0132 0.0458 0.0102\nCook     0.0600 0.0458 0.2862 0.0475\nDane     0.0124 0.0102 0.0475 0.0116\n\n$Hogs\n        AllElse  Brown   Cook   Dane\nAllElse  0.0160 0.0080 0.0650 0.0098\nBrown    0.0080 0.0066 0.0350 0.0057\nCook     0.0650 0.0350 0.3340 0.0404\nDane     0.0098 0.0057 0.0404 0.0072\n\n$Info\n        AllElse  Brown   Cook   Dane\nAllElse  0.0091 0.0070 0.0547 0.0034\nBrown    0.0070 0.0089 0.0452 0.0031\nCook     0.0547 0.0452 0.4152 0.0210\nDane     0.0034 0.0031 0.0210 0.0016\n\n\nThe Absolute Use Coefficient portrays national-level intermediate transaction proportions scaled by regional-level economic activity in the form of industry employment. In this example the Info sector is by far the largest purchaser of intermediate goods for every industry including itself. And Cook County happens to have the largest Info workforce, making it dominate the Absolute Use Coefficient table.\nThis is only the case, however, when we use the national-level Transactions matrix to capture the interconnectedness of industries. If instead we employ the national-level technical coefficients matrix, which specifies the amount of industry \\(i\\)’s commodity used to produce of one unit of industry \\(j\\) ’s commodity, the Absolute Use Coefficient table is dominated by the AllElse category with the overall largest workforce. In this way we may take the national-level technical coefficients matrix, \\(\\mathbf{A^{n}}\\), as a first approximation to regional technical coefficients, \\(\\mathbf{\\tilde{A}^r}\\), and thus the numerator of the project narrative Absolute and Relative Use Coefficients becomes \\(\\mathbf{\\tilde{A}^{r}X^{r}}\\) or \\(\\mathbf{\\tilde{Z}^{r}}\\) a first approximation of the regional Transactions matrix.\nThe Relative Use Coefficient portrays national-level intermediate transaction proportions scaled by regional-level industry employment proportions.\nThe Relative and Absolute “Regional Typology Coefficients”, \\(\\phi\\), portray a region-by-region Use Coefficient proportion for each commodity type. In other words, the row maximum assigns the best potential relationship for each commodity of that region. We can use the \\(\\phi\\) to answer the question: For which commodities is Madison a sink or a source? And which regions are complementary to those commodity balances? Looking across each row, whenever the coefficient is greater than 0.5 that region is a source relative to the column region and vice versa. If the coefficient is less than 0.5, the row region is a relative sink to the column region, for that commodity. In this example, the Relative \\(\\phi\\) shows only Green Bay as a potential relative source for Madison and only for the Extract, Fiber, and Hogs commodities.\nThe Gravity of the Absolute and Relative “Total Use Coefficients”, uses an alternate procedure to estimate the volume and sensitivity of the coefficient proportions. In this example, Madison (and Green Bay for that matter) is dominated by the “pull” of Chicago.\n\n\nLocation specific metrics of industry input needs\nWe specify a vector of location input needs as the product of the national input coefficient matrix and the location specific total output vector, \\(\\mathbf{Ax^{r}}\\).\nSimilarly, let the share or relative input needs vector be given as \\(\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1}\\).\nIn addition, we define the actual or import input needs vector as, \\(\\max \\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\}\\).\n(Similarly, let the actual exports vector \\(\\mathbf{\\tilde{x}^{r}}\\) be defined as \\(\\vert \\min \\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\} \\vert\\))\nAnd let the relative import input needs vector be given by, \\(\\max \\{\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}, 0\\}\\).\nNote: one may concatenate the input needs vectors across each location to construct an industry-by-location matrix of input needs for each specification above. Specifically denoted by:\n\\(\\mathbf{AX}\\), \\(\\mathbf{AX}\\left(\\mathbf{\\widehat{iAX}}\\right)^{-1}\\), \\(\\max \\{\\mathbf{AX} - \\mathbf{X}, 0\\}\\), and \\(\\max \\{ \\mathbf{AX}\\left(\\mathbf{\\widehat{iAX}}\\right)^{-1} - \\mathbf{X}\\left(\\mathbf{\\widehat{iX}}\\right)^{-1}, 0 \\}\\)\nCross location industry compatibility\nTo elucidate the industrial compatibility across locations, we construct a similarity index. In general, it is defined on the metric space \\((\\mathbf{X}, D)\\) where \\(\\mathbf{X}\\) is a set of vectors \\(\\{\\mathbf{x}_{i} \\in \\mathbb{R} : i \\in \\{1, \\dots, n \\}\\}\\) and \\(D:\\mathbf{X} \\times \\mathbf{X} \\rightarrow \\mathbb{R}\\) is a distance function.\nSpecifying \\(D\\) as a Euclidean or 2-norm distance, we define the industrial compatibility distance or simple similarity index between two locations \\(r\\) and \\(s\\) as:\n\\[D^{rs} = \\Vert \\mathbf{Ax^{r}} - \\mathbf{x^{s}} \\Vert_{2} = \\sqrt{(\\mathbf{Ax^{r}} - \\mathbf{x^{s}})^{'}(\\mathbf{Ax^{r}} - \\mathbf{x^{s}})}\\]\nIn addition, let the relative similarity index between two locations \\(r\\) and \\(s\\) be given by:\n\\[\\Vert \\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1} \\Vert_{2}\\] The import similarity index between two locations \\(r\\) and \\(s\\) be given by:\n\\[\\Vert \\max\\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\} - \\mathbf{x^{s}} \\Vert_{2}\\]\nLet the relative import similarity index between two locations \\(r\\) and \\(s\\) be given by:\n\\[\\Vert \\max\\{\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}, 0\\}  - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1} \\Vert_{2}\\] (I would argue that when a similarity index employs an import specification the “exporting” location should be specified instead as \\(\\mathbf{\\tilde{x}^{s}} = \\vert \\min \\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\} \\vert\\) )\nOne may further weight a similarity index by a geographical impedance function, \\(\\mathbf{Q}\\). In general terms, let this metric be defined by \\(\\mathfrak{D}\\left(\\mathbf{Ax^{r}}, \\mathbf{x^{s}}, \\mathbf{Q}\\right)\\). In practice, the geographical impedance between locations \\(r\\) and \\(s\\) is given by, \\(Q^{rs} = e^{-d^{rs}}\\) or \\(Q^{rs} = 1/(d^{rs})^2\\) where \\(d^{rs}\\) is the great-circle distance between the two locations. Specifically,\n\\[d^{rs}  = R \\cdot \\arccos(\\sin(\\phi_{r})\\sin(\\phi_{s}) + \\cos(\\phi_{r})\\cos(\\phi_{s})\\cos(\\vert \\lambda_{r} - \\lambda_{s} \\vert)) \\] Where \\(\\lambda_{r}, \\phi_{r}\\) and \\(\\lambda_{s}, \\phi_{r}\\) are the longitude and latitude of locations \\(r\\) and \\(s\\), and \\(R\\) is the radius of the reference sphere, which in this case is the mean earth radius from the WGS84 ellipsoid.\nAs such the spatial simple similarity index is given by\n\\[\\mathfrak{D}^{rs} = D^{rs}/Q^{rs} = \\sqrt{(\\mathbf{Ax^{r}} - \\mathbf{x^{s}})^{'}(\\mathbf{Ax^{r}} - \\mathbf{x^{s}})}/Q^{rs}\\]\nLet the spatial relative similarity index between two locations \\(r\\) and \\(s\\) be given by:\n\\[\\sqrt{(\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1})^{'}(\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1})}  / Q^{rs}\\] Let the spatial import similarity index between two locations \\(r\\) and \\(s\\) be given by:\n\\[\\sqrt{([\\mathbf{Ax^{r}} - \\mathbf{x^{r}}] - \\mathbf{x^{s}})^{'}([\\mathbf{Ax^{r}} - \\mathbf{x^{r}}] - \\mathbf{x^{s}})}/Q^{rs}\\]\nLet the spatial relative import similarity index between two locations \\(r\\) and \\(s\\) be given by:\n\\[\\sqrt{([\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}]  - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1})^{'}([\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}] - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1})} / Q^{rs}\\] For any given location-by-location Similarity Index matrix specification, the minimum “distance” by row is said to be the most compatible trading partner.\nAlternative specifications of the spatial distance are possible. One possibility is to discretize the impedance matrix as a binary proximity operator which is one when two locations share a boundary (or vertex) and zero otherwise.\nEmpirical Example\nSuppose we still only have national level Input-Output tables (consisting of Make/Use tables, industry-by-industry, industry-by-commodity, and commodity-by-commodity total requirements tables, and commodity-by-industry direct requirements tables) and location specific industry activity (in the form of employment, payroll, and number of establishments). How might we implement the above methods?\nAs before, we can derive a national-level, industry-by-industry direct requirements matrix, \\(\\mathbf{A^{n}}\\), from the national-level, industry-by-industry total requirements matrix, \\(\\mathbf{L^{n}}\\), using \\(\\mathbf{A^{n}} = \\mathbf{I} - (\\mathbf{L^{n}})^{-1}\\). Furthermore, we can construct the location specific total output vector, \\(\\mathbf{x^{r}}\\) from a payroll and labor share quotient. As a first pass assume unit labor share, such that location specific industry payroll is equivalent to location specific total output.\nSuppose these tables are given by:\n“National Total Requirements Table”: \\(\\mathbf{L}\\)\n\n\nCode\nIndustry_Count <- 5\n\nToy_Total_mat <-  matrix(c(1.2523,  0.0143, 0.0055, 0.0276, 0.0892,\n                           0.0251,  1.1230, 0.1450, 0.0331, 0.0709,\n                           0.0203,  0.0236, 1.0420, 0.0128, 0.0237,\n                           0.0092,  0.0171, 0.0088, 1.0048, 0.0105,\n                           0.4020,  0.2675, 0.1055, 0.5102, 1.7703), nrow = Industry_Count, byrow = TRUE)\nrownames(Toy_Total_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_Total_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\nToy_Total_mat\n\n\n        Extract  Fiber Grains   Hogs   Info\nExtract  1.2523 0.0143 0.0055 0.0276 0.0892\nFiber    0.0251 1.1230 0.1450 0.0331 0.0709\nGrains   0.0203 0.0236 1.0420 0.0128 0.0237\nHogs     0.0092 0.0171 0.0088 1.0048 0.0105\nInfo     0.4020 0.2675 0.1055 0.5102 1.7703\n\n\n“National Direct Requirements Table”: \\(\\mathbf{A} = \\mathbf{I} - (\\mathbf{L})^{-1}\\)\n\n\nCode\nToy_Direct_mat <- diag(ncol(Toy_Total_mat)) - solve(Toy_Total_mat)\nrownames(Toy_Direct_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_Direct_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\n\nToy_Direct_mat %>% round(4)\n\n\n        Extract  Fiber Grains   Hogs   Info\nExtract  0.1883 0.0006 0.0001 0.0015 0.0409\nFiber    0.0051 0.0986 0.1219 0.0107 0.0342\nGrains   0.0115 0.0173 0.0366 0.0055 0.0116\nHogs     0.0054 0.0138 0.0060 0.0016 0.0050\nInfo     0.1813 0.1311 0.0373 0.2855 0.4185\n\n\n“Industry-by-Location Payroll Table”: \\[\\mathbf{X} =\n  \\begin{bmatrix}\n   \\mathbf{x^{r}} & \\mathbf{x^{s}} & \\cdots & \\mathbf{x^{l}}\n  \\end{bmatrix}\\]\n\n\nCode\nRegion_Count <- 4\n\nToy_X_mat <-  matrix(c(4979, 487, 5498, 1517, \n                       4512, 1395,  4287, 0,\n                       19912, 20003,  11322, 1305,\n                       23685, 201144,  2670, 58896,\n                       81009, 224686,  98075, 27797), nrow = Industry_Count, byrow = TRUE)\n\nrownames(Toy_X_mat) <- c(\"Extract\", \"Fiber\", \"Grains\", \"Hogs\", \"Info\")\ncolnames(Toy_X_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n\nToy_X_mat\n\n\n        AllElse  Brown  Cook  Dane\nExtract    4979    487  5498  1517\nFiber      4512   1395  4287     0\nGrains    19912  20003 11322  1305\nHogs      23685 201144  2670 58896\nInfo      81009 224686 98075 27797\n\n\n“Industry-by-Location Input Needs Table”: \\(\\mathbf{AX}\\)\n\n\nCode\nToy_Input_mat <- (Toy_Direct_mat  %*%  Toy_X_mat) \nToy_Input_mat  %>% round(2)\n\n\n         AllElse     Brown     Cook     Dane\nExtract  4287.91   9582.25  5050.40  1511.55\nFiber    5915.62  12395.47  5208.05  1743.93\nGrains   1933.92   4473.72  1703.65   711.51\nHogs      651.23   1580.96   652.67   246.74\nInfo    42903.52 152478.17 43791.85 28770.93\n\n\n“Relative Industry-by-Location Input Needs Table”: \\(\\mathbf{AX}\\left(\\mathbf{\\widehat{iAX}}\\right)^{-1}\\)\n\n\nCode\nToy_Input_mat_rel <- (Toy_Input_mat) %*% solve(diag(c((rep(c(1), each=ncol(Toy_Direct_mat)) %*% Toy_Input_mat))))\ncolnames(Toy_Input_mat_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_Input_mat_rel  %>% round(4)\n\n\n        AllElse  Brown   Cook   Dane\nExtract  0.0770 0.0531 0.0895 0.0458\nFiber    0.1062 0.0687 0.0923 0.0529\nGrains   0.0347 0.0248 0.0302 0.0216\nHogs     0.0117 0.0088 0.0116 0.0075\nInfo     0.7704 0.8447 0.7764 0.8723\n\n\n“Import Industry-by-Location Input Needs Table”: \\(\\max \\{\\mathbf{AX} - \\mathbf{X}, 0\\}\\)\n\n\nCode\nToy_Input_mat_imp <- pmax(Toy_Input_mat - Toy_X_mat, 0)\nToy_Input_mat_imp  %>% round(2)\n\n\n        AllElse    Brown   Cook    Dane\nExtract    0.00  9095.25   0.00    0.00\nFiber   1403.62 11000.47 921.05 1743.93\nGrains     0.00     0.00   0.00    0.00\nHogs       0.00     0.00   0.00    0.00\nInfo       0.00     0.00   0.00  973.93\n\n\n“Net Exports Table”: \\(\\max \\{\\mathbf{AX} - \\mathbf{X}, 0\\}\\) \\(\\mathbf{\\tilde{X}} = \\vert \\min \\{\\mathbf{AX} - \\mathbf{X}, 0\\} \\vert\\)\n\n\nCode\nToy_Input_mat_exp <- abs(pmin(Toy_Input_mat - Toy_X_mat, 0))\nToy_Input_mat_exp  %>% round(2)\n\n\n         AllElse     Brown     Cook     Dane\nExtract   691.09      0.00   447.60     5.45\nFiber       0.00      0.00     0.00     0.00\nGrains  17978.08  15529.28  9618.35   593.49\nHogs    23033.77 199563.04  2017.33 58649.26\nInfo    38105.48  72207.83 54283.15     0.00\n\n\n“Relative Import Industry-by-Location Input Needs Table”: \\(\\max \\{\\mathbf{AX}\\left(\\mathbf{\\widehat{iAX}}\\right)^{-1} - \\mathbf{X}\\left(\\mathbf{\\widehat{iX}}\\right)^{-1}, 0\\}\\)\n\n\nCode\nToy_Input_mat_imp_rel <- pmax(Toy_Input_mat_rel - Toy_X_mat %*% solve(diag(c((rep(c(1), each=nrow(Toy_X_mat)) %*% Toy_X_mat)))), 0)\ncolnames(Toy_Input_mat_imp_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_Input_mat_imp_rel  %>% round(4)\n\n\n        AllElse  Brown   Cook   Dane\nExtract  0.0399 0.0520 0.0444 0.0289\nFiber    0.0726 0.0656 0.0571 0.0529\nGrains   0.0000 0.0000 0.0000 0.0070\nHogs     0.0000 0.0000 0.0000 0.0000\nInfo     0.1663 0.3429 0.0000 0.5617\n\n\nAssuming a Euclidean distance function, the similarity index is given by\n“Simple Similarity Index”: \\(\\Vert \\mathbf{Ax^{r}} - \\mathbf{x^{s}} \\Vert_{2} ~ \\forall ~ r,s \\in l\\)\nIn this example denoted\n\\[ \\begin{bmatrix}\n    \\Vert\\mathbf{Ax^{a}} - \\mathbf{x^{a}}\\Vert_{2} & \\Vert\\mathbf{Ax^{a}} - \\mathbf{x^{b}}\\Vert_{2} & \\Vert\\mathbf{Ax^{a}} - \\mathbf{x^{c}}\\Vert_{2} & \\Vert\\mathbf{Ax^{a}} - \\mathbf{x^{d}}\\Vert_{2}\\\\\n    \\Vert\\mathbf{Ax^{b}} - \\mathbf{x^{a}}\\Vert_{2} & \\Vert\\mathbf{Ax^{b}} - \\mathbf{x^{b}}\\Vert_{2} & \\Vert\\mathbf{Ax^{b}} - \\mathbf{x^{c}}\\Vert_{2} & \\Vert\\mathbf{Ax^{b}} - \\mathbf{x^{d}}\\Vert_{2}\\\\\n    \\Vert\\mathbf{Ax^{c}} - \\mathbf{x^{a}}\\Vert_{2} & \\Vert\\mathbf{Ax^{c}} - \\mathbf{x^{b}}\\Vert_{2} & \\Vert\\mathbf{Ax^{c}} - \\mathbf{x^{c}}\\Vert_{2} & \\Vert\\mathbf{Ax^{c}} - \\mathbf{x^{d}}\\Vert_{2}\\\\\n    \\Vert\\mathbf{Ax^{d}} - \\mathbf{x^{a}}\\Vert_{2} & \\Vert\\mathbf{Ax^{d}} - \\mathbf{x^{b}}\\Vert_{2} & \\Vert\\mathbf{Ax^{d}} - \\mathbf{x^{c}}\\Vert_{2} & \\Vert\\mathbf{Ax^{d}} - \\mathbf{x^{d}}\\Vert_{2}\\\\\n  \\end{bmatrix}\\]\n\n\nCode\nToy_sim <-  c()\nToy_sim  <-  matrix(0, nrow = Region_Count, ncol = Region_Count)\n for (i in 1:Region_Count){\n   for (j in 1:Region_Count){\n  Toy_sim[i,j]  <- norm((Toy_Input_mat[,i] - (Toy_X_mat[,j])), type = \"2\")\n   }\n }\ncolnames(Toy_sim) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_sim) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_sim %>% round(2) %>% cbind(., RowMin = c(colnames(Toy_sim)[apply(Toy_sim, 1, which.min)]))\n\n\n        AllElse    Brown       Cook       Dane        RowMin   \nAllElse \"48044.16\" \"271299.83\" \"56037.67\" \"60528.74\"  \"AllElse\"\nBrown   \"76929.26\" \"213270.42\" \"55589.74\" \"138054.87\" \"Cook\"   \nCook    \"47409.26\" \"270720.7\"  \"55175.1\"  \"60727.99\"  \"AllElse\"\nDane    \"60551.73\" \"281275.23\" \"70312.64\" \"58686.26\"  \"Dane\"   \n\n\nCode\ntable(colnames(Toy_sim)[apply(Toy_sim, 1, which.min)])\n\n\n\nAllElse    Cook    Dane \n      2       1       1 \n\n\n“Relative Similarity Index”: \\(\\Vert \\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1} \\Vert_{2} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\nToy_sim_rel <-  c()\nToy_sim_rel  <-  matrix(0, nrow = Region_Count, ncol = Region_Count)\n for (i in 1:Region_Count){\n   for (j in 1:Region_Count){\n  Toy_sim_rel[i,j]  <- norm((Toy_Input_mat_rel[,i] - (Toy_X_mat[,j] %*% solve(c((rep(c(1), each=ncol(Toy_Direct_mat)) %*% Toy_X_mat[,j] ))) )), type = \"2\")\n   }\n }\ncolnames(Toy_sim_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_sim_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_sim_rel  %>% round(4) %>% cbind(., RowMin = c(colnames(Toy_sim_rel)[apply(Toy_sim_rel, 1, which.min)]))\n\n\n        AllElse  Brown    Cook     Dane     RowMin\nAllElse \"0.2732\" \"0.5292\" \"0.1036\" \"0.8027\" \"Cook\"\nBrown   \"0.3207\" \"0.5648\" \"0.0871\" \"0.8443\" \"Cook\"\nCook    \"0.2777\" \"0.5319\" \"0.1005\" \"0.8055\" \"Cook\"\nDane    \"0.3421\" \"0.5808\" \"0.1008\" \"0.8616\" \"Cook\"\n\n\nCode\ntable(colnames(Toy_sim_rel)[apply(Toy_sim_rel, 1, which.min)])\n\n\n\nCook \n   4 \n\n\n“Import Similarity Index”: \\(\\Vert \\max\\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\} - \\mathbf{x^{s}} \\Vert_{2} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\nToy_sim_imp <-  c()\nToy_sim_imp  <-  matrix(0, nrow = Region_Count, ncol = Region_Count)\n for (i in 1:Region_Count){\n   for (j in 1:Region_Count){\n  Toy_sim_imp[i,j]  <- norm((Toy_Input_mat_imp[,i] - (Toy_X_mat[,j])), type = \"2\")\n   }\n }\ncolnames(Toy_sim_imp) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_sim_imp) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_sim_imp  %>% round(2) %>% cbind(., RowMin = c(colnames(Toy_sim_imp)[apply(Toy_sim_imp, 1, which.min)]))\n\n\n        AllElse    Brown       Cook       Dane       RowMin\nAllElse \"86915.92\" \"302230.15\" \"98957.39\" \"65171.98\" \"Dane\"\nBrown   \"87057.27\" \"302504.87\" \"99055.71\" \"66494.78\" \"Dane\"\nCook    \"86934.52\" \"302230.52\" \"98972.62\" \"65163.37\" \"Dane\"\nDane    \"85997.28\" \"301507.01\" \"97982.8\"  \"64770.84\" \"Dane\"\n\n\nCode\ntable(colnames(Toy_sim_imp)[apply(Toy_sim_imp, 1, which.min)])\n\n\n\nDane \n   4 \n\n\n“*Import Similarity Index - Net Exports”: \\(\\Vert \\max\\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\} - \\mathbf{\\tilde{x}^{s}} \\Vert_{2} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\nToy_sim_exp <-  c()\nToy_sim_exp  <-  matrix(0, nrow = Region_Count, ncol = Region_Count)\n for (i in 1:Region_Count){\n   for (j in 1:Region_Count){\n  Toy_sim_exp[i,j]  <- norm((Toy_Input_mat_imp[,i] - (Toy_Input_mat_exp[,j])), type = \"2\")\n   }\n }\ncolnames(Toy_sim_exp) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_sim_exp) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_sim_exp  %>% round(2)  %>% cbind(., RowMin = c(colnames(Toy_sim_exp)[apply(Toy_sim_exp, 1, which.min)]))\n\n\n        AllElse    Brown       Cook       Dane       RowMin   \nAllElse \"48044.16\" \"212796.87\" \"55185.26\" \"58669.05\" \"AllElse\"\nBrown   \"49974.33\" \"213270.42\" \"56912.52\" \"60363.25\" \"AllElse\"\nCook    \"48032.49\" \"212794.23\" \"55175.1\"  \"58659.49\" \"AllElse\"\nDane    \"47286.75\" \"212470.88\" \"54237.41\" \"58686.26\" \"AllElse\"\n\n\nCode\ntable(colnames(Toy_sim_exp)[apply(Toy_sim_exp, 1, which.min)])\n\n\n\nAllElse \n      4 \n\n\n“Relative Import Similarity Index”: \\(\\Vert \\max\\{\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}, 0\\} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1} \\Vert_{2} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\nToy_sim_imp_rel <-  c()\nToy_sim_imp_rel  <-  matrix(0, nrow = Region_Count, ncol = Region_Count)\n for (i in 1:Region_Count){\n   for (j in 1:Region_Count){\n  Toy_sim_imp_rel[i,j]  <- norm((Toy_Input_mat_imp_rel[,i] - (Toy_X_mat[,j] %*% solve(c((rep(c(1), each=ncol(Toy_Direct_mat)) %*% Toy_X_mat[,j] ))) )), type = \"2\")\n   }\n }\ncolnames(Toy_sim_imp_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_sim_imp_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_sim_imp_rel  %>% round(4) %>% cbind(., RowMin = c(colnames(Toy_sim_imp_rel)[apply(Toy_sim_imp_rel, 1, which.min)]))\n\n\n        AllElse  Brown    Cook     Dane     RowMin   \nAllElse \"0.4965\" \"0.5681\" \"0.6468\" \"0.678\"  \"AllElse\"\nBrown   \"0.3503\" \"0.4854\" \"0.4728\" \"0.6631\" \"AllElse\"\nCook    \"0.6471\" \"0.6786\" \"0.8108\" \"0.7304\" \"AllElse\"\nDane    \"0.2312\" \"0.4584\" \"0.2599\" \"0.7064\" \"AllElse\"\n\n\nCode\ntable(colnames(Toy_sim_imp_rel)[apply(Toy_sim_imp_rel, 1, which.min)])\n\n\n\nAllElse \n      4 \n\n\n“*Relative Import Similarity Index - Net Exports”: \\(\\Vert \\max\\{\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}, 0\\} - \\mathbf{\\tilde{x}^{s}}(\\mathbf{i\\tilde{x}^{s}})^{-1} \\Vert_{2} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\nToy_sim_exp_rel <-  c()\nToy_sim_exp_rel  <-  matrix(0, nrow = Region_Count, ncol = Region_Count)\n for (i in 1:Region_Count){\n   for (j in 1:Region_Count){\n  Toy_sim_exp_rel[i,j]  <- norm((Toy_Input_mat_imp_rel[,i] - (Toy_Input_mat_exp[,j] %*% solve(c((rep(c(1), each=ncol(Toy_Direct_mat)) %*% Toy_Input_mat_exp[,j] ))) )), type = \"2\")\n   }\n }\ncolnames(Toy_sim_exp_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_sim_exp_rel) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nToy_sim_exp_rel  %>% round(4) %>% cbind(., RowMin = c(colnames(Toy_sim_exp_rel)[apply(Toy_sim_exp_rel, 1, which.min)]))\n\n\n        AllElse  Brown    Cook     Dane     RowMin   \nAllElse \"0.487\"  \"0.7068\" \"0.673\"  \"1.0072\" \"AllElse\"\nBrown   \"0.3979\" \"0.7077\" \"0.504\"  \"1.051\"  \"AllElse\"\nCook    \"0.6054\" \"0.7442\" \"0.834\"  \"0.9926\" \"AllElse\"\nDane    \"0.3758\" \"0.7646\" \"0.2981\" \"1.1398\" \"Cook\"   \n\n\nCode\ntable(colnames(Toy_sim_exp_rel)[apply(Toy_sim_exp_rel, 1, which.min)])\n\n\n\nAllElse    Cook \n      3       1 \n\n\nAdding the spatial elements:\n“Geographical Impedance”: \\(Q^{rs} = e^{-d^{rs}} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\nToy_Lat <- c(42.3, 44.49, 41.84, 43.07)\nToy_Lon <- c(-89.04, -88.03, -87.77, -89.39)\nToy_Dist_mat <- distm(cbind(Toy_Lon, Toy_Lat))/1000000\ncolnames(Toy_Dist_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\nrownames(Toy_Dist_mat) <- c(\"AllElse\", \"Brown\", \"Cook\", \"Dane\")\n\n#Toy_Q <- (1/(Toy_Dist_mat)^2)\nToy_Q <- exp(-Toy_Dist_mat)\nToy_Q  %>% round(4)\n\n\n        AllElse  Brown   Cook   Dane\nAllElse  1.0000 0.7736 0.8897 0.9137\nBrown    0.7736 1.0000 0.7444 0.8253\nCook     0.8897 0.7444 1.0000 0.8263\nDane     0.9137 0.8253 0.8263 1.0000\n\n\n“Spatial Simple Similarity Index”: \\(\\Vert \\mathbf{Ax^{r}} - \\mathbf{x^{s}} \\Vert_{2} / Q^{rs} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\n(Toy_sim  / Toy_Q) %>% round(2)\n\n\n         AllElse    Brown     Cook      Dane\nAllElse 48044.16 350695.9 62984.50  66243.43\nBrown   99442.66 213270.4 74676.14 167282.36\nCook    53286.45 363671.1 55175.10  73497.56\nDane    66268.59 340823.8 85097.62  58686.26\n\n\n“Spatial Relative Similarity Index”: \\(\\Vert \\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1} \\Vert_{2} / Q^{rs} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\n(Toy_sim_rel  / Toy_Q) %>% round(4)\n\n\n        AllElse  Brown   Cook   Dane\nAllElse  0.2732 0.6841 0.1165 0.8785\nBrown    0.4146 0.5648 0.1170 1.0231\nCook     0.3121 0.7145 0.1005 0.9749\nDane     0.3745 0.7038 0.1219 0.8616\n\n\n“Spatial Import Similarity Index”: \\(\\Vert \\max\\{\\mathbf{Ax^{r}} - \\mathbf{x^{r}}, 0\\} - \\mathbf{x^{s}} \\Vert_{2} / Q^{rs} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\n(Toy_sim_imp  / Toy_Q) %>% round(2)\n\n\n          AllElse    Brown      Cook     Dane\nAllElse  86915.92 390678.0 111224.84 71325.05\nBrown   112534.65 302504.9 133065.90 80572.34\nCook     97711.53 405999.6  98972.62 78865.58\nDane     94116.52 365338.8 118586.11 64770.84\n\n\n“Spatial Relative Import Similarity Index”: \\(\\Vert \\max\\{\\mathbf{Ax^{r}}(\\mathbf{iAx^{r}})^{-1} - \\mathbf{x^{r}}(\\mathbf{ix^{r}})^{-1}, 0\\} - \\mathbf{x^{s}}(\\mathbf{ix^{s}})^{-1} \\Vert_{2} / Q^{rs} ~ \\forall ~ r,s \\in l\\)\n\n\nCode\n(Toy_sim_imp_rel  / Toy_Q) %>% round(4)\n\n\n        AllElse  Brown   Cook   Dane\nAllElse  0.4965 0.7344 0.7270 0.7420\nBrown    0.4529 0.4854 0.6351 0.8035\nCook     0.7274 0.9116 0.8108 0.8840\nDane     0.2530 0.5554 0.3146 0.7064\n\n\nFor any given location-by-location Similarity Index matrix specification, the minimum “distance” by row is said to be the most compatible trading partner.\nProximity Example\n\n\nCode\nToy_prox <- matrix(rbind(\n  c(1,1,0,1,0,0,0,0,0),\n  c(1,1,1,0,1,0,0,0,0),\n  c(0,1,1,0,0,1,0,0,0),\n  c(1,0,0,1,1,0,1,0,0),\n  c(0,1,0,1,1,1,0,1,0),\n  c(0,0,1,0,1,1,0,0,1),\n  c(0,0,0,1,0,0,1,1,0),\n  c(0,0,0,0,1,0,1,1,1),\n  c(0,0,0,0,0,1,0,1,1)), nrow = 9)\n\nToy_RUCC <- c(0,0,0,0,0,9,9,0,9)\n\nToy_RUCC_prox <- sqrt(t(Toy_RUCC * Toy_prox ) * Toy_RUCC)\n\ndiag(Toy_RUCC_prox) <- 0\n\n\n\n\n“The Assumption of Spatially Invariant Production Functions: The Problem of Heterogeneity All classic nonsurvey methods assume that national total use coefficients - the production functions in full - hold at every conceivable regional dimension. Various suggestions have been made as to why this is unlikely to be observed in practice. Smith and Morrison (1974 p.22) identify anything from differences in productive efficiency to climatic variation as contributing to the phenomenon. However, it is argued here that, apart from variation due to stochastic observation error, differences in total use can be attributed to the violation of one fundamental assumption of the Leontief model, and that is that each defined sector is homogeneous. Homogeneity implies that the set of coefficients which describes each defined commodity’s production is wholly unique. Hence there can be no variation in the means of production for any defined commodity, and if there is, for whatever reason, the commodity would require separate definition in order for the homogeneity assumption to hold. The reason for the assumption is quite straightforward. If each production function describes a diverse set of commodities, the pattem of linkage is hidden within average relationships (see Table 5.1 below), and hence the precision with which one can calculate, for example, multipliers is eroded. It is argued here that differences in regional and national total use derive from the fact that the production functions of the national model are heterogeneously defined. The argument is as follows. At the broadest levels of commodity definition i.e. agriculture, manufacture, regional production functions are merged together, and as such cannot be identified in the national model. As the definitions of the national model are increased, the production functions of regionally specialised commodities emerge i.e. dair>’ farming, sea fishing, fish farming. At some much higher level of disaggregation - where homogeneity is approached - the definitions o f the national model are so fine that it is possible to identify the individual factories and firms operating within the nation. At this point, the national model becomes one of infinite-regions because it is possible to extract the input-output table for any conceivable spatial subset of the nation. Not only the problem of estimating regional production functions evaporated, the trade estimation problem has ceased to exist.” - (Brand, 1998)\nFIN"
  }
]